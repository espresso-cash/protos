/**
 * @fileoverview gRPC-Web generated client stub for brij.storage.v1.wallet
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: brij/storage/v1/wallet/service.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var brij_storage_v1_common_data_pb = require('../../../../brij/storage/v1/common/data_pb.js')

var brij_storage_v1_common_kyc_item_pb = require('../../../../brij/storage/v1/common/kyc_item_pb.js')

var brij_storage_v1_common_user_data_field_pb = require('../../../../brij/storage/v1/common/user_data_field_pb.js')

var brij_storage_v1_common_validation_data_field_pb = require('../../../../brij/storage/v1/common/validation_data_field_pb.js')

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js')
const proto = {};
proto.brij = {};
proto.brij.storage = {};
proto.brij.storage.v1 = {};
proto.brij.storage.v1.wallet = require('./service_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.brij.storage.v1.wallet.WalletServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.GetPartnerInfoRequest,
 *   !proto.brij.storage.v1.wallet.GetPartnerInfoResponse>}
 */
const methodDescriptor_WalletService_GetPartnerInfo = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/GetPartnerInfo',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.GetPartnerInfoRequest,
  proto.brij.storage.v1.wallet.GetPartnerInfoResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.GetPartnerInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.GetPartnerInfoResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.GetPartnerInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.GetPartnerInfoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.GetPartnerInfoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.getPartnerInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetPartnerInfo',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetPartnerInfo,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.GetPartnerInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.GetPartnerInfoResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.getPartnerInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetPartnerInfo',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetPartnerInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.InitStorageRequest,
 *   !proto.brij.storage.v1.wallet.InitStorageResponse>}
 */
const methodDescriptor_WalletService_InitStorage = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/InitStorage',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.InitStorageRequest,
  proto.brij.storage.v1.wallet.InitStorageResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.InitStorageRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.InitStorageResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.InitStorageRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.InitStorageResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.InitStorageResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.initStorage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/InitStorage',
      request,
      metadata || {},
      methodDescriptor_WalletService_InitStorage,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.InitStorageRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.InitStorageResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.initStorage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/InitStorage',
      request,
      metadata || {},
      methodDescriptor_WalletService_InitStorage);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.GetInfoRequest,
 *   !proto.brij.storage.v1.wallet.GetInfoResponse>}
 */
const methodDescriptor_WalletService_GetInfo = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/GetInfo',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.GetInfoRequest,
  proto.brij.storage.v1.wallet.GetInfoResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.GetInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.GetInfoResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.GetInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.GetInfoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.GetInfoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.getInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetInfo',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetInfo,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.GetInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.GetInfoResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.getInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetInfo',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest,
 *   !proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse>}
 */
const methodDescriptor_WalletService_GetGrantedAccessPartners = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/GetGrantedAccessPartners',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest,
  proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.getGrantedAccessPartners =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetGrantedAccessPartners',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetGrantedAccessPartners,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.getGrantedAccessPartners =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetGrantedAccessPartners',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetGrantedAccessPartners);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.GrantAccessRequest,
 *   !proto.brij.storage.v1.wallet.GrantAccessResponse>}
 */
const methodDescriptor_WalletService_GrantAccess = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/GrantAccess',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.GrantAccessRequest,
  proto.brij.storage.v1.wallet.GrantAccessResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.GrantAccessRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.GrantAccessResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.GrantAccessRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.GrantAccessResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.GrantAccessResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.grantAccess =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GrantAccess',
      request,
      metadata || {},
      methodDescriptor_WalletService_GrantAccess,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.GrantAccessRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.GrantAccessResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.grantAccess =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GrantAccess',
      request,
      metadata || {},
      methodDescriptor_WalletService_GrantAccess);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.SetUserDataRequest,
 *   !proto.brij.storage.v1.wallet.SetUserDataResponse>}
 */
const methodDescriptor_WalletService_SetUserData = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/SetUserData',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.SetUserDataRequest,
  proto.brij.storage.v1.wallet.SetUserDataResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.SetUserDataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.SetUserDataResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.SetUserDataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.SetUserDataResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.SetUserDataResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.setUserData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/SetUserData',
      request,
      metadata || {},
      methodDescriptor_WalletService_SetUserData,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.SetUserDataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.SetUserDataResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.setUserData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/SetUserData',
      request,
      metadata || {},
      methodDescriptor_WalletService_SetUserData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.RemoveUserDataRequest,
 *   !proto.brij.storage.v1.wallet.RemoveUserDataResponse>}
 */
const methodDescriptor_WalletService_RemoveUserData = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/RemoveUserData',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.RemoveUserDataRequest,
  proto.brij.storage.v1.wallet.RemoveUserDataResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.RemoveUserDataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.RemoveUserDataResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.RemoveUserDataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.RemoveUserDataResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.RemoveUserDataResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.removeUserData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/RemoveUserData',
      request,
      metadata || {},
      methodDescriptor_WalletService_RemoveUserData,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.RemoveUserDataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.RemoveUserDataResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.removeUserData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/RemoveUserData',
      request,
      metadata || {},
      methodDescriptor_WalletService_RemoveUserData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.RevokeAccessRequest,
 *   !proto.brij.storage.v1.wallet.RevokeAccessResponse>}
 */
const methodDescriptor_WalletService_RevokeAccess = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/RevokeAccess',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.RevokeAccessRequest,
  proto.brij.storage.v1.wallet.RevokeAccessResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.RevokeAccessRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.RevokeAccessResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.RevokeAccessRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.RevokeAccessResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.RevokeAccessResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.revokeAccess =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/RevokeAccess',
      request,
      metadata || {},
      methodDescriptor_WalletService_RevokeAccess,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.RevokeAccessRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.RevokeAccessResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.revokeAccess =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/RevokeAccess',
      request,
      metadata || {},
      methodDescriptor_WalletService_RevokeAccess);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.RemoveAllUserDataRequest,
 *   !proto.brij.storage.v1.wallet.RemoveAllUserDataResponse>}
 */
const methodDescriptor_WalletService_RemoveAllUserData = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/RemoveAllUserData',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.RemoveAllUserDataRequest,
  proto.brij.storage.v1.wallet.RemoveAllUserDataResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.RemoveAllUserDataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.RemoveAllUserDataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.RemoveAllUserDataResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.RemoveAllUserDataResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.removeAllUserData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/RemoveAllUserData',
      request,
      metadata || {},
      methodDescriptor_WalletService_RemoveAllUserData,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.RemoveAllUserDataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.RemoveAllUserDataResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.removeAllUserData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/RemoveAllUserData',
      request,
      metadata || {},
      methodDescriptor_WalletService_RemoveAllUserData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.GetUserDataRequest,
 *   !proto.brij.storage.v1.wallet.GetUserDataResponse>}
 */
const methodDescriptor_WalletService_GetUserData = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/GetUserData',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.GetUserDataRequest,
  proto.brij.storage.v1.wallet.GetUserDataResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.GetUserDataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.GetUserDataResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.GetUserDataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.GetUserDataResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.GetUserDataResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.getUserData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetUserData',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetUserData,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.GetUserDataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.GetUserDataResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.getUserData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetUserData',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetUserData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.CheckAccessRequest,
 *   !proto.brij.storage.v1.wallet.CheckAccessResponse>}
 */
const methodDescriptor_WalletService_CheckAccess = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/CheckAccess',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.CheckAccessRequest,
  proto.brij.storage.v1.wallet.CheckAccessResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.CheckAccessRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.CheckAccessResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.CheckAccessRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.CheckAccessResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.CheckAccessResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.checkAccess =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/CheckAccess',
      request,
      metadata || {},
      methodDescriptor_WalletService_CheckAccess,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.CheckAccessRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.CheckAccessResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.checkAccess =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/CheckAccess',
      request,
      metadata || {},
      methodDescriptor_WalletService_CheckAccess);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.GetKycStatusRequest,
 *   !proto.brij.storage.v1.wallet.GetKycStatusResponse>}
 */
const methodDescriptor_WalletService_GetKycStatus = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/GetKycStatus',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.GetKycStatusRequest,
  proto.brij.storage.v1.wallet.GetKycStatusResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.GetKycStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.GetKycStatusResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.GetKycStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.GetKycStatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.GetKycStatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.getKycStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetKycStatus',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetKycStatus,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.GetKycStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.GetKycStatusResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.getKycStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetKycStatus',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetKycStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.GetWalletProofRequest,
 *   !proto.brij.storage.v1.wallet.GetWalletProofResponse>}
 */
const methodDescriptor_WalletService_GetWalletProof = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/GetWalletProof',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.GetWalletProofRequest,
  proto.brij.storage.v1.wallet.GetWalletProofResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.GetWalletProofRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.GetWalletProofResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.GetWalletProofRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.GetWalletProofResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.GetWalletProofResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.getWalletProof =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetWalletProof',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetWalletProof,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.GetWalletProofRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.GetWalletProofResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.getWalletProof =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetWalletProof',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetWalletProof);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.wallet.GetSeedMessageRequest,
 *   !proto.brij.storage.v1.wallet.GetSeedMessageResponse>}
 */
const methodDescriptor_WalletService_GetSeedMessage = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.wallet.WalletService/GetSeedMessage',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.wallet.GetSeedMessageRequest,
  proto.brij.storage.v1.wallet.GetSeedMessageResponse,
  /**
   * @param {!proto.brij.storage.v1.wallet.GetSeedMessageRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.wallet.GetSeedMessageResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.wallet.GetSeedMessageRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.wallet.GetSeedMessageResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.wallet.GetSeedMessageResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.wallet.WalletServiceClient.prototype.getSeedMessage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetSeedMessage',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetSeedMessage,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.wallet.GetSeedMessageRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.wallet.GetSeedMessageResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.wallet.WalletServicePromiseClient.prototype.getSeedMessage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.wallet.WalletService/GetSeedMessage',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetSeedMessage);
};


module.exports = proto.brij.storage.v1.wallet;

