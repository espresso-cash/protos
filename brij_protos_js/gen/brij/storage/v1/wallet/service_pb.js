// source: brij/storage/v1/wallet/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var brij_storage_v1_common_data_pb = require('../../../../brij/storage/v1/common/data_pb.js');
goog.object.extend(proto, brij_storage_v1_common_data_pb);
var brij_storage_v1_common_kyc_item_pb = require('../../../../brij/storage/v1/common/kyc_item_pb.js');
goog.object.extend(proto, brij_storage_v1_common_kyc_item_pb);
var brij_storage_v1_common_user_data_field_pb = require('../../../../brij/storage/v1/common/user_data_field_pb.js');
goog.object.extend(proto, brij_storage_v1_common_user_data_field_pb);
var brij_storage_v1_common_validation_data_field_pb = require('../../../../brij/storage/v1/common/validation_data_field_pb.js');
goog.object.extend(proto, brij_storage_v1_common_validation_data_field_pb);
var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.brij.storage.v1.wallet.CheckAccessRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.CheckAccessResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetInfoRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetInfoResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetKycStatusRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetKycStatusResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetPartnerInfoRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetPartnerInfoResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetSeedMessageRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetSeedMessageResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetUserDataRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetUserDataResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetWalletProofRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GetWalletProofResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GrantAccessRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.GrantAccessResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.InitStorageRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.InitStorageResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.RemoveAllUserDataRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.RemoveAllUserDataResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.RemoveUserDataRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.RemoveUserDataResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.RevokeAccessRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.RevokeAccessResponse', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.SetUserDataRequest', null, global);
goog.exportSymbol('proto.brij.storage.v1.wallet.SetUserDataResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetPartnerInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetPartnerInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetPartnerInfoRequest.displayName = 'proto.brij.storage.v1.wallet.GetPartnerInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetPartnerInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetPartnerInfoResponse.displayName = 'proto.brij.storage.v1.wallet.GetPartnerInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.InitStorageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.InitStorageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.InitStorageRequest.displayName = 'proto.brij.storage.v1.wallet.InitStorageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.InitStorageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.InitStorageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.InitStorageResponse.displayName = 'proto.brij.storage.v1.wallet.InitStorageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetInfoRequest.displayName = 'proto.brij.storage.v1.wallet.GetInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetInfoResponse.displayName = 'proto.brij.storage.v1.wallet.GetInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetSeedMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetSeedMessageRequest.displayName = 'proto.brij.storage.v1.wallet.GetSeedMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetSeedMessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetSeedMessageResponse.displayName = 'proto.brij.storage.v1.wallet.GetSeedMessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GrantAccessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GrantAccessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GrantAccessRequest.displayName = 'proto.brij.storage.v1.wallet.GrantAccessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GrantAccessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GrantAccessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GrantAccessResponse.displayName = 'proto.brij.storage.v1.wallet.GrantAccessResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.RevokeAccessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.RevokeAccessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.RevokeAccessRequest.displayName = 'proto.brij.storage.v1.wallet.RevokeAccessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.RevokeAccessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.RevokeAccessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.RevokeAccessResponse.displayName = 'proto.brij.storage.v1.wallet.RevokeAccessResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.RemoveAllUserDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.RemoveAllUserDataRequest.displayName = 'proto.brij.storage.v1.wallet.RemoveAllUserDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.RemoveAllUserDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.displayName = 'proto.brij.storage.v1.wallet.RemoveAllUserDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.displayName = 'proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.repeatedFields_, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.displayName = 'proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.SetUserDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.SetUserDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.SetUserDataRequest.displayName = 'proto.brij.storage.v1.wallet.SetUserDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.SetUserDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.SetUserDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.SetUserDataResponse.displayName = 'proto.brij.storage.v1.wallet.SetUserDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.RemoveUserDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.RemoveUserDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.RemoveUserDataRequest.displayName = 'proto.brij.storage.v1.wallet.RemoveUserDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.RemoveUserDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.RemoveUserDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.RemoveUserDataResponse.displayName = 'proto.brij.storage.v1.wallet.RemoveUserDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetUserDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetUserDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetUserDataRequest.displayName = 'proto.brij.storage.v1.wallet.GetUserDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetUserDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.brij.storage.v1.wallet.GetUserDataResponse.repeatedFields_, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetUserDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetUserDataResponse.displayName = 'proto.brij.storage.v1.wallet.GetUserDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.CheckAccessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.CheckAccessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.CheckAccessRequest.displayName = 'proto.brij.storage.v1.wallet.CheckAccessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.CheckAccessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.CheckAccessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.CheckAccessResponse.displayName = 'proto.brij.storage.v1.wallet.CheckAccessResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetKycStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetKycStatusRequest.displayName = 'proto.brij.storage.v1.wallet.GetKycStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetKycStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetKycStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetKycStatusResponse.displayName = 'proto.brij.storage.v1.wallet.GetKycStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetWalletProofRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetWalletProofRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetWalletProofRequest.displayName = 'proto.brij.storage.v1.wallet.GetWalletProofRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.wallet.GetWalletProofResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.storage.v1.wallet.GetWalletProofResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.wallet.GetWalletProofResponse.displayName = 'proto.brij.storage.v1.wallet.GetWalletProofResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetPartnerInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetPartnerInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetPartnerInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetPartnerInfoRequest}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetPartnerInfoRequest;
  return proto.brij.storage.v1.wallet.GetPartnerInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetPartnerInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetPartnerInfoRequest}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetPartnerInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetPartnerInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetPartnerInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetPartnerInfoRequest} returns this
 */
proto.brij.storage.v1.wallet.GetPartnerInfoRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetPartnerInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
publicKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
privacyUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
termsUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetPartnerInfoResponse;
  return proto.brij.storage.v1.wallet.GetPartnerInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivacyUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTermsUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetPartnerInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPublicKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrivacyUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTermsUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse} returns this
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string public_key = 2;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.prototype.getPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse} returns this
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.prototype.setPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string privacy_url = 3;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.prototype.getPrivacyUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse} returns this
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.prototype.setPrivacyUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string terms_url = 4;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.prototype.getTermsUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse} returns this
 */
proto.brij.storage.v1.wallet.GetPartnerInfoResponse.prototype.setTermsUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.InitStorageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.InitStorageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.InitStorageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.InitStorageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
walletAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
encryptedSecretKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
walletProofSignature: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.InitStorageRequest}
 */
proto.brij.storage.v1.wallet.InitStorageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.InitStorageRequest;
  return proto.brij.storage.v1.wallet.InitStorageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.InitStorageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.InitStorageRequest}
 */
proto.brij.storage.v1.wallet.InitStorageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncryptedSecretKey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletProofSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.InitStorageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.InitStorageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.InitStorageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.InitStorageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEncryptedSecretKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWalletProofSignature();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string wallet_address = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.InitStorageRequest.prototype.getWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.InitStorageRequest} returns this
 */
proto.brij.storage.v1.wallet.InitStorageRequest.prototype.setWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.brij.storage.v1.wallet.InitStorageRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.InitStorageRequest} returns this
 */
proto.brij.storage.v1.wallet.InitStorageRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string encrypted_secret_key = 3;
 * @return {string}
 */
proto.brij.storage.v1.wallet.InitStorageRequest.prototype.getEncryptedSecretKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.InitStorageRequest} returns this
 */
proto.brij.storage.v1.wallet.InitStorageRequest.prototype.setEncryptedSecretKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string wallet_proof_signature = 4;
 * @return {string}
 */
proto.brij.storage.v1.wallet.InitStorageRequest.prototype.getWalletProofSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.InitStorageRequest} returns this
 */
proto.brij.storage.v1.wallet.InitStorageRequest.prototype.setWalletProofSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.InitStorageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.InitStorageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.InitStorageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.InitStorageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.InitStorageResponse}
 */
proto.brij.storage.v1.wallet.InitStorageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.InitStorageResponse;
  return proto.brij.storage.v1.wallet.InitStorageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.InitStorageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.InitStorageResponse}
 */
proto.brij.storage.v1.wallet.InitStorageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.InitStorageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.InitStorageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.InitStorageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.InitStorageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
publicKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
walletAddress: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetInfoRequest}
 */
proto.brij.storage.v1.wallet.GetInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetInfoRequest;
  return proto.brij.storage.v1.wallet.GetInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetInfoRequest}
 */
proto.brij.storage.v1.wallet.GetInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublicKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string public_key = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetInfoRequest.prototype.getPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetInfoRequest} returns this
 */
proto.brij.storage.v1.wallet.GetInfoRequest.prototype.setPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string wallet_address = 2;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetInfoRequest.prototype.getWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetInfoRequest} returns this
 */
proto.brij.storage.v1.wallet.GetInfoRequest.prototype.setWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
encryptedSecretKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
publicKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
walletAddress: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetInfoResponse}
 */
proto.brij.storage.v1.wallet.GetInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetInfoResponse;
  return proto.brij.storage.v1.wallet.GetInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetInfoResponse}
 */
proto.brij.storage.v1.wallet.GetInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncryptedSecretKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncryptedSecretKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPublicKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string encrypted_secret_key = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetInfoResponse.prototype.getEncryptedSecretKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetInfoResponse} returns this
 */
proto.brij.storage.v1.wallet.GetInfoResponse.prototype.setEncryptedSecretKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetInfoResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetInfoResponse} returns this
 */
proto.brij.storage.v1.wallet.GetInfoResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string public_key = 3;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetInfoResponse.prototype.getPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetInfoResponse} returns this
 */
proto.brij.storage.v1.wallet.GetInfoResponse.prototype.setPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string wallet_address = 4;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetInfoResponse.prototype.getWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetInfoResponse} returns this
 */
proto.brij.storage.v1.wallet.GetInfoResponse.prototype.setWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetSeedMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetSeedMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
walletAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
walletProofSignature: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetSeedMessageRequest}
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetSeedMessageRequest;
  return proto.brij.storage.v1.wallet.GetSeedMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetSeedMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetSeedMessageRequest}
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletProofSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetSeedMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetSeedMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWalletProofSignature();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string wallet_address = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest.prototype.getWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetSeedMessageRequest} returns this
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest.prototype.setWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string wallet_proof_signature = 2;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest.prototype.getWalletProofSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetSeedMessageRequest} returns this
 */
proto.brij.storage.v1.wallet.GetSeedMessageRequest.prototype.setWalletProofSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetSeedMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetSeedMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
message: jspb.Message.getFieldWithDefault(msg, 1, ""),
encryptedSecretKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
publicKey: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetSeedMessageResponse}
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetSeedMessageResponse;
  return proto.brij.storage.v1.wallet.GetSeedMessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetSeedMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetSeedMessageResponse}
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncryptedSecretKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetSeedMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetSeedMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEncryptedSecretKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPublicKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetSeedMessageResponse} returns this
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string encrypted_secret_key = 2;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.prototype.getEncryptedSecretKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetSeedMessageResponse} returns this
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.prototype.setEncryptedSecretKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string public_key = 3;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.prototype.getPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetSeedMessageResponse} returns this
 */
proto.brij.storage.v1.wallet.GetSeedMessageResponse.prototype.setPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GrantAccessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GrantAccessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GrantAccessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GrantAccessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
partnerPublicKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
encryptedSecretKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GrantAccessRequest}
 */
proto.brij.storage.v1.wallet.GrantAccessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GrantAccessRequest;
  return proto.brij.storage.v1.wallet.GrantAccessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GrantAccessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GrantAccessRequest}
 */
proto.brij.storage.v1.wallet.GrantAccessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerPublicKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncryptedSecretKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GrantAccessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GrantAccessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GrantAccessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GrantAccessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartnerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEncryptedSecretKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string partner_public_key = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GrantAccessRequest.prototype.getPartnerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GrantAccessRequest} returns this
 */
proto.brij.storage.v1.wallet.GrantAccessRequest.prototype.setPartnerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string encrypted_secret_key = 2;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GrantAccessRequest.prototype.getEncryptedSecretKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GrantAccessRequest} returns this
 */
proto.brij.storage.v1.wallet.GrantAccessRequest.prototype.setEncryptedSecretKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GrantAccessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GrantAccessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GrantAccessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GrantAccessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GrantAccessResponse}
 */
proto.brij.storage.v1.wallet.GrantAccessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GrantAccessResponse;
  return proto.brij.storage.v1.wallet.GrantAccessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GrantAccessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GrantAccessResponse}
 */
proto.brij.storage.v1.wallet.GrantAccessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GrantAccessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GrantAccessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GrantAccessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GrantAccessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.RevokeAccessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.RevokeAccessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.RevokeAccessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RevokeAccessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
partnerPublicKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.RevokeAccessRequest}
 */
proto.brij.storage.v1.wallet.RevokeAccessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.RevokeAccessRequest;
  return proto.brij.storage.v1.wallet.RevokeAccessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.RevokeAccessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.RevokeAccessRequest}
 */
proto.brij.storage.v1.wallet.RevokeAccessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.RevokeAccessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.RevokeAccessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.RevokeAccessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RevokeAccessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartnerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string partner_public_key = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.RevokeAccessRequest.prototype.getPartnerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.RevokeAccessRequest} returns this
 */
proto.brij.storage.v1.wallet.RevokeAccessRequest.prototype.setPartnerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.RevokeAccessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.RevokeAccessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.RevokeAccessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RevokeAccessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.RevokeAccessResponse}
 */
proto.brij.storage.v1.wallet.RevokeAccessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.RevokeAccessResponse;
  return proto.brij.storage.v1.wallet.RevokeAccessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.RevokeAccessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.RevokeAccessResponse}
 */
proto.brij.storage.v1.wallet.RevokeAccessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.RevokeAccessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.RevokeAccessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.RevokeAccessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RevokeAccessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.RemoveAllUserDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.RemoveAllUserDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.RemoveAllUserDataRequest}
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.RemoveAllUserDataRequest;
  return proto.brij.storage.v1.wallet.RemoveAllUserDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.RemoveAllUserDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.RemoveAllUserDataRequest}
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.RemoveAllUserDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.RemoveAllUserDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.RemoveAllUserDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.RemoveAllUserDataResponse}
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.RemoveAllUserDataResponse;
  return proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.RemoveAllUserDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.RemoveAllUserDataResponse}
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.RemoveAllUserDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RemoveAllUserDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest}
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest;
  return proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest}
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
partnersList: jspb.Message.toObjectList(msg.getPartnersList(),
    proto.brij.storage.v1.wallet.GetPartnerInfoResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse}
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse;
  return proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse}
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.brij.storage.v1.wallet.GetPartnerInfoResponse;
      reader.readMessage(value,proto.brij.storage.v1.wallet.GetPartnerInfoResponse.deserializeBinaryFromReader);
      msg.addPartners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartnersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.brij.storage.v1.wallet.GetPartnerInfoResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GetPartnerInfoResponse partners = 1;
 * @return {!Array<!proto.brij.storage.v1.wallet.GetPartnerInfoResponse>}
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.prototype.getPartnersList = function() {
  return /** @type{!Array<!proto.brij.storage.v1.wallet.GetPartnerInfoResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.brij.storage.v1.wallet.GetPartnerInfoResponse, 1));
};


/**
 * @param {!Array<!proto.brij.storage.v1.wallet.GetPartnerInfoResponse>} value
 * @return {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse} returns this
*/
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.prototype.setPartnersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.brij.storage.v1.wallet.GetPartnerInfoResponse}
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.prototype.addPartners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.brij.storage.v1.wallet.GetPartnerInfoResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse} returns this
 */
proto.brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.prototype.clearPartnersList = function() {
  return this.setPartnersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.SetUserDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.SetUserDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
type: jspb.Message.getFieldWithDefault(msg, 1, 0),
encryptedValue: msg.getEncryptedValue_asB64(),
hash: jspb.Message.getFieldWithDefault(msg, 3, ""),
signature: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.SetUserDataRequest}
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.SetUserDataRequest;
  return proto.brij.storage.v1.wallet.SetUserDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.SetUserDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.SetUserDataRequest}
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.brij.storage.v1.common.DataType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptedValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.SetUserDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.SetUserDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getEncryptedValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional brij.storage.v1.common.DataType type = 1;
 * @return {!proto.brij.storage.v1.common.DataType}
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.getType = function() {
  return /** @type {!proto.brij.storage.v1.common.DataType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.brij.storage.v1.common.DataType} value
 * @return {!proto.brij.storage.v1.wallet.SetUserDataRequest} returns this
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes encrypted_value = 2;
 * @return {string}
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.getEncryptedValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes encrypted_value = 2;
 * This is a type-conversion wrapper around `getEncryptedValue()`
 * @return {string}
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.getEncryptedValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptedValue()));
};


/**
 * optional bytes encrypted_value = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedValue()`
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.getEncryptedValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptedValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.brij.storage.v1.wallet.SetUserDataRequest} returns this
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.setEncryptedValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string hash = 3;
 * @return {string}
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.SetUserDataRequest} returns this
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string signature = 4;
 * @return {string}
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.SetUserDataRequest} returns this
 */
proto.brij.storage.v1.wallet.SetUserDataRequest.prototype.setSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.SetUserDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.SetUserDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.SetUserDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.SetUserDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.SetUserDataResponse}
 */
proto.brij.storage.v1.wallet.SetUserDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.SetUserDataResponse;
  return proto.brij.storage.v1.wallet.SetUserDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.SetUserDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.SetUserDataResponse}
 */
proto.brij.storage.v1.wallet.SetUserDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.SetUserDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.SetUserDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.SetUserDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.SetUserDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.RemoveUserDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.RemoveUserDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.RemoveUserDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RemoveUserDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.RemoveUserDataRequest}
 */
proto.brij.storage.v1.wallet.RemoveUserDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.RemoveUserDataRequest;
  return proto.brij.storage.v1.wallet.RemoveUserDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.RemoveUserDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.RemoveUserDataRequest}
 */
proto.brij.storage.v1.wallet.RemoveUserDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.RemoveUserDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.RemoveUserDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.RemoveUserDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RemoveUserDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.RemoveUserDataRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.RemoveUserDataRequest} returns this
 */
proto.brij.storage.v1.wallet.RemoveUserDataRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.RemoveUserDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.RemoveUserDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.RemoveUserDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RemoveUserDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.RemoveUserDataResponse}
 */
proto.brij.storage.v1.wallet.RemoveUserDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.RemoveUserDataResponse;
  return proto.brij.storage.v1.wallet.RemoveUserDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.RemoveUserDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.RemoveUserDataResponse}
 */
proto.brij.storage.v1.wallet.RemoveUserDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.RemoveUserDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.RemoveUserDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.RemoveUserDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.RemoveUserDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetUserDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetUserDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetUserDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetUserDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
includeValues: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetUserDataRequest}
 */
proto.brij.storage.v1.wallet.GetUserDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetUserDataRequest;
  return proto.brij.storage.v1.wallet.GetUserDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetUserDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetUserDataRequest}
 */
proto.brij.storage.v1.wallet.GetUserDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetUserDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetUserDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetUserDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetUserDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIncludeValues();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool include_values = 1;
 * @return {boolean}
 */
proto.brij.storage.v1.wallet.GetUserDataRequest.prototype.getIncludeValues = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.brij.storage.v1.wallet.GetUserDataRequest} returns this
 */
proto.brij.storage.v1.wallet.GetUserDataRequest.prototype.setIncludeValues = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetUserDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetUserDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
userDataList: jspb.Message.toObjectList(msg.getUserDataList(),
    brij_storage_v1_common_user_data_field_pb.UserDataField.toObject, includeInstance),
validationDataList: jspb.Message.toObjectList(msg.getValidationDataList(),
    brij_storage_v1_common_validation_data_field_pb.ValidationDataField.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetUserDataResponse}
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetUserDataResponse;
  return proto.brij.storage.v1.wallet.GetUserDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetUserDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetUserDataResponse}
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new brij_storage_v1_common_user_data_field_pb.UserDataField;
      reader.readMessage(value,brij_storage_v1_common_user_data_field_pb.UserDataField.deserializeBinaryFromReader);
      msg.addUserData(value);
      break;
    case 2:
      var value = new brij_storage_v1_common_validation_data_field_pb.ValidationDataField;
      reader.readMessage(value,brij_storage_v1_common_validation_data_field_pb.ValidationDataField.deserializeBinaryFromReader);
      msg.addValidationData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetUserDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetUserDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      brij_storage_v1_common_user_data_field_pb.UserDataField.serializeBinaryToWriter
    );
  }
  f = message.getValidationDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      brij_storage_v1_common_validation_data_field_pb.ValidationDataField.serializeBinaryToWriter
    );
  }
};


/**
 * repeated brij.storage.v1.common.UserDataField user_data = 1;
 * @return {!Array<!proto.brij.storage.v1.common.UserDataField>}
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.prototype.getUserDataList = function() {
  return /** @type{!Array<!proto.brij.storage.v1.common.UserDataField>} */ (
    jspb.Message.getRepeatedWrapperField(this, brij_storage_v1_common_user_data_field_pb.UserDataField, 1));
};


/**
 * @param {!Array<!proto.brij.storage.v1.common.UserDataField>} value
 * @return {!proto.brij.storage.v1.wallet.GetUserDataResponse} returns this
*/
proto.brij.storage.v1.wallet.GetUserDataResponse.prototype.setUserDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.brij.storage.v1.common.UserDataField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.brij.storage.v1.common.UserDataField}
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.prototype.addUserData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.brij.storage.v1.common.UserDataField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brij.storage.v1.wallet.GetUserDataResponse} returns this
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.prototype.clearUserDataList = function() {
  return this.setUserDataList([]);
};


/**
 * repeated brij.storage.v1.common.ValidationDataField validation_data = 2;
 * @return {!Array<!proto.brij.storage.v1.common.ValidationDataField>}
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.prototype.getValidationDataList = function() {
  return /** @type{!Array<!proto.brij.storage.v1.common.ValidationDataField>} */ (
    jspb.Message.getRepeatedWrapperField(this, brij_storage_v1_common_validation_data_field_pb.ValidationDataField, 2));
};


/**
 * @param {!Array<!proto.brij.storage.v1.common.ValidationDataField>} value
 * @return {!proto.brij.storage.v1.wallet.GetUserDataResponse} returns this
*/
proto.brij.storage.v1.wallet.GetUserDataResponse.prototype.setValidationDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.brij.storage.v1.common.ValidationDataField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.brij.storage.v1.common.ValidationDataField}
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.prototype.addValidationData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.brij.storage.v1.common.ValidationDataField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brij.storage.v1.wallet.GetUserDataResponse} returns this
 */
proto.brij.storage.v1.wallet.GetUserDataResponse.prototype.clearValidationDataList = function() {
  return this.setValidationDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.CheckAccessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.CheckAccessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.CheckAccessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.CheckAccessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
partnerPublicKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.CheckAccessRequest}
 */
proto.brij.storage.v1.wallet.CheckAccessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.CheckAccessRequest;
  return proto.brij.storage.v1.wallet.CheckAccessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.CheckAccessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.CheckAccessRequest}
 */
proto.brij.storage.v1.wallet.CheckAccessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.CheckAccessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.CheckAccessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.CheckAccessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.CheckAccessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartnerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string partner_public_key = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.CheckAccessRequest.prototype.getPartnerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.CheckAccessRequest} returns this
 */
proto.brij.storage.v1.wallet.CheckAccessRequest.prototype.setPartnerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.CheckAccessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.CheckAccessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.CheckAccessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.CheckAccessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
hasAccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.CheckAccessResponse}
 */
proto.brij.storage.v1.wallet.CheckAccessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.CheckAccessResponse;
  return proto.brij.storage.v1.wallet.CheckAccessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.CheckAccessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.CheckAccessResponse}
 */
proto.brij.storage.v1.wallet.CheckAccessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.CheckAccessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.CheckAccessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.CheckAccessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.CheckAccessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHasAccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool has_access = 1;
 * @return {boolean}
 */
proto.brij.storage.v1.wallet.CheckAccessResponse.prototype.getHasAccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.brij.storage.v1.wallet.CheckAccessResponse} returns this
 */
proto.brij.storage.v1.wallet.CheckAccessResponse.prototype.setHasAccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetKycStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetKycStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
country: jspb.Message.getFieldWithDefault(msg, 1, ""),
validatorPublicKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetKycStatusRequest}
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetKycStatusRequest;
  return proto.brij.storage.v1.wallet.GetKycStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetKycStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetKycStatusRequest}
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetKycStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetKycStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValidatorPublicKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string country = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetKycStatusRequest} returns this
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string validator_public_key = 2;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest.prototype.getValidatorPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetKycStatusRequest} returns this
 */
proto.brij.storage.v1.wallet.GetKycStatusRequest.prototype.setValidatorPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetKycStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetKycStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetKycStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetKycStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetKycStatusResponse}
 */
proto.brij.storage.v1.wallet.GetKycStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetKycStatusResponse;
  return proto.brij.storage.v1.wallet.GetKycStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetKycStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetKycStatusResponse}
 */
proto.brij.storage.v1.wallet.GetKycStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.brij.storage.v1.common.KycStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetKycStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetKycStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetKycStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetKycStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional brij.storage.v1.common.KycStatus status = 1;
 * @return {!proto.brij.storage.v1.common.KycStatus}
 */
proto.brij.storage.v1.wallet.GetKycStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.brij.storage.v1.common.KycStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.brij.storage.v1.common.KycStatus} value
 * @return {!proto.brij.storage.v1.wallet.GetKycStatusResponse} returns this
 */
proto.brij.storage.v1.wallet.GetKycStatusResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetWalletProofRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetWalletProofRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetWalletProofRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetWalletProofRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
walletAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetWalletProofRequest}
 */
proto.brij.storage.v1.wallet.GetWalletProofRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetWalletProofRequest;
  return proto.brij.storage.v1.wallet.GetWalletProofRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetWalletProofRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetWalletProofRequest}
 */
proto.brij.storage.v1.wallet.GetWalletProofRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetWalletProofRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetWalletProofRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetWalletProofRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetWalletProofRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string wallet_address = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetWalletProofRequest.prototype.getWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetWalletProofRequest} returns this
 */
proto.brij.storage.v1.wallet.GetWalletProofRequest.prototype.setWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.wallet.GetWalletProofResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.wallet.GetWalletProofResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.wallet.GetWalletProofResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetWalletProofResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
proofMessage: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.wallet.GetWalletProofResponse}
 */
proto.brij.storage.v1.wallet.GetWalletProofResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.wallet.GetWalletProofResponse;
  return proto.brij.storage.v1.wallet.GetWalletProofResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.wallet.GetWalletProofResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.wallet.GetWalletProofResponse}
 */
proto.brij.storage.v1.wallet.GetWalletProofResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.wallet.GetWalletProofResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.wallet.GetWalletProofResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.wallet.GetWalletProofResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.wallet.GetWalletProofResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProofMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string proof_message = 1;
 * @return {string}
 */
proto.brij.storage.v1.wallet.GetWalletProofResponse.prototype.getProofMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.wallet.GetWalletProofResponse} returns this
 */
proto.brij.storage.v1.wallet.GetWalletProofResponse.prototype.setProofMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.brij.storage.v1.wallet);
