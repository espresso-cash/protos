// @generated by protoc-gen-es v2.4.0
// @generated from file brij/storage/v1/wallet/service.proto (package brij.storage.v1.wallet, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { UserDataField } from "../common/user_data_pb";
import type { ValidationDataField } from "../common/validation_data_pb";
import type { KycStatus } from "../common/kyc_pb";

/**
 * Describes the file brij/storage/v1/wallet/service.proto.
 */
export declare const file_brij_storage_v1_wallet_service: GenFile;

/**
 * @generated from message brij.storage.v1.wallet.RestoreConnectionRequest
 */
export declare type RestoreConnectionRequest = Message<"brij.storage.v1.wallet.RestoreConnectionRequest"> & {
  /**
   * @generated from field: string wallet_address = 1;
   */
  walletAddress: string;

  /**
   * @generated from field: string wallet_proof_signature = 2;
   */
  walletProofSignature: string;
};

/**
 * Describes the message brij.storage.v1.wallet.RestoreConnectionRequest.
 * Use `create(RestoreConnectionRequestSchema)` to create a new message.
 */
export declare const RestoreConnectionRequestSchema: GenMessage<RestoreConnectionRequest>;

/**
 * @generated from message brij.storage.v1.wallet.RestoreConnectionResponse
 */
export declare type RestoreConnectionResponse = Message<"brij.storage.v1.wallet.RestoreConnectionResponse"> & {
  /**
   * @generated from oneof brij.storage.v1.wallet.RestoreConnectionResponse.result
   */
  result: {
    /**
     * @generated from field: brij.storage.v1.wallet.RestoreConnectionResponse.NotConnected Not_connected = 1;
     */
    value: RestoreConnectionResponse_NotConnected;
    case: "NotConnected";
  } | {
    /**
     * @generated from field: brij.storage.v1.wallet.RestoreConnectionResponse.Connected connected = 2;
     */
    value: RestoreConnectionResponse_Connected;
    case: "connected";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message brij.storage.v1.wallet.RestoreConnectionResponse.
 * Use `create(RestoreConnectionResponseSchema)` to create a new message.
 */
export declare const RestoreConnectionResponseSchema: GenMessage<RestoreConnectionResponse>;

/**
 * @generated from message brij.storage.v1.wallet.RestoreConnectionResponse.NotConnected
 */
export declare type RestoreConnectionResponse_NotConnected = Message<"brij.storage.v1.wallet.RestoreConnectionResponse.NotConnected"> & {
  /**
   * @generated from field: string connect_token = 1;
   */
  connectToken: string;
};

/**
 * Describes the message brij.storage.v1.wallet.RestoreConnectionResponse.NotConnected.
 * Use `create(RestoreConnectionResponse_NotConnectedSchema)` to create a new message.
 */
export declare const RestoreConnectionResponse_NotConnectedSchema: GenMessage<RestoreConnectionResponse_NotConnected>;

/**
 * @generated from message brij.storage.v1.wallet.RestoreConnectionResponse.Connected
 */
export declare type RestoreConnectionResponse_Connected = Message<"brij.storage.v1.wallet.RestoreConnectionResponse.Connected"> & {
  /**
   * @generated from field: string public_key = 1;
   */
  publicKey: string;

  /**
   * @generated from field: string seed_message = 2;
   */
  seedMessage: string;
};

/**
 * Describes the message brij.storage.v1.wallet.RestoreConnectionResponse.Connected.
 * Use `create(RestoreConnectionResponse_ConnectedSchema)` to create a new message.
 */
export declare const RestoreConnectionResponse_ConnectedSchema: GenMessage<RestoreConnectionResponse_Connected>;

/**
 * @generated from message brij.storage.v1.wallet.ConnectRequest
 */
export declare type ConnectRequest = Message<"brij.storage.v1.wallet.ConnectRequest"> & {
  /**
   * @generated from field: string wallet_address = 1;
   */
  walletAddress: string;

  /**
   * @generated from field: string connect_token = 2;
   */
  connectToken: string;

  /**
   * @generated from field: string seed_message = 3;
   */
  seedMessage: string;
};

/**
 * Describes the message brij.storage.v1.wallet.ConnectRequest.
 * Use `create(ConnectRequestSchema)` to create a new message.
 */
export declare const ConnectRequestSchema: GenMessage<ConnectRequest>;

/**
 * @generated from message brij.storage.v1.wallet.ConnectResponse
 */
export declare type ConnectResponse = Message<"brij.storage.v1.wallet.ConnectResponse"> & {
};

/**
 * Describes the message brij.storage.v1.wallet.ConnectResponse.
 * Use `create(ConnectResponseSchema)` to create a new message.
 */
export declare const ConnectResponseSchema: GenMessage<ConnectResponse>;

/**
 * @generated from message brij.storage.v1.wallet.GetPartnerInfoRequest
 */
export declare type GetPartnerInfoRequest = Message<"brij.storage.v1.wallet.GetPartnerInfoRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message brij.storage.v1.wallet.GetPartnerInfoRequest.
 * Use `create(GetPartnerInfoRequestSchema)` to create a new message.
 */
export declare const GetPartnerInfoRequestSchema: GenMessage<GetPartnerInfoRequest>;

/**
 * @generated from message brij.storage.v1.wallet.GetPartnerInfoResponse
 */
export declare type GetPartnerInfoResponse = Message<"brij.storage.v1.wallet.GetPartnerInfoResponse"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string public_key = 2;
   */
  publicKey: string;

  /**
   * @generated from field: string privacy_url = 3;
   */
  privacyUrl: string;

  /**
   * @generated from field: string terms_url = 4;
   */
  termsUrl: string;
};

/**
 * Describes the message brij.storage.v1.wallet.GetPartnerInfoResponse.
 * Use `create(GetPartnerInfoResponseSchema)` to create a new message.
 */
export declare const GetPartnerInfoResponseSchema: GenMessage<GetPartnerInfoResponse>;

/**
 * @generated from message brij.storage.v1.wallet.GetInfoRequest
 */
export declare type GetInfoRequest = Message<"brij.storage.v1.wallet.GetInfoRequest"> & {
};

/**
 * Describes the message brij.storage.v1.wallet.GetInfoRequest.
 * Use `create(GetInfoRequestSchema)` to create a new message.
 */
export declare const GetInfoRequestSchema: GenMessage<GetInfoRequest>;

/**
 * @generated from message brij.storage.v1.wallet.GetInfoResponse
 */
export declare type GetInfoResponse = Message<"brij.storage.v1.wallet.GetInfoResponse"> & {
  /**
   * @generated from field: string public_key = 1;
   */
  publicKey: string;

  /**
   * @generated from field: string wallet_address = 2;
   */
  walletAddress: string;

  /**
   * @generated from field: string seed_message = 3;
   */
  seedMessage: string;
};

/**
 * Describes the message brij.storage.v1.wallet.GetInfoResponse.
 * Use `create(GetInfoResponseSchema)` to create a new message.
 */
export declare const GetInfoResponseSchema: GenMessage<GetInfoResponse>;

/**
 * @generated from message brij.storage.v1.wallet.GrantAccessRequest
 */
export declare type GrantAccessRequest = Message<"brij.storage.v1.wallet.GrantAccessRequest"> & {
  /**
   * @generated from field: string partner_public_key = 1;
   */
  partnerPublicKey: string;

  /**
   * @generated from field: string encrypted_secret_key = 2;
   */
  encryptedSecretKey: string;
};

/**
 * Describes the message brij.storage.v1.wallet.GrantAccessRequest.
 * Use `create(GrantAccessRequestSchema)` to create a new message.
 */
export declare const GrantAccessRequestSchema: GenMessage<GrantAccessRequest>;

/**
 * @generated from message brij.storage.v1.wallet.GrantAccessResponse
 */
export declare type GrantAccessResponse = Message<"brij.storage.v1.wallet.GrantAccessResponse"> & {
};

/**
 * Describes the message brij.storage.v1.wallet.GrantAccessResponse.
 * Use `create(GrantAccessResponseSchema)` to create a new message.
 */
export declare const GrantAccessResponseSchema: GenMessage<GrantAccessResponse>;

/**
 * @generated from message brij.storage.v1.wallet.RevokeAccessRequest
 */
export declare type RevokeAccessRequest = Message<"brij.storage.v1.wallet.RevokeAccessRequest"> & {
  /**
   * @generated from field: string partner_public_key = 1;
   */
  partnerPublicKey: string;
};

/**
 * Describes the message brij.storage.v1.wallet.RevokeAccessRequest.
 * Use `create(RevokeAccessRequestSchema)` to create a new message.
 */
export declare const RevokeAccessRequestSchema: GenMessage<RevokeAccessRequest>;

/**
 * @generated from message brij.storage.v1.wallet.RevokeAccessResponse
 */
export declare type RevokeAccessResponse = Message<"brij.storage.v1.wallet.RevokeAccessResponse"> & {
};

/**
 * Describes the message brij.storage.v1.wallet.RevokeAccessResponse.
 * Use `create(RevokeAccessResponseSchema)` to create a new message.
 */
export declare const RevokeAccessResponseSchema: GenMessage<RevokeAccessResponse>;

/**
 * @generated from message brij.storage.v1.wallet.RemoveAllUserDataRequest
 */
export declare type RemoveAllUserDataRequest = Message<"brij.storage.v1.wallet.RemoveAllUserDataRequest"> & {
};

/**
 * Describes the message brij.storage.v1.wallet.RemoveAllUserDataRequest.
 * Use `create(RemoveAllUserDataRequestSchema)` to create a new message.
 */
export declare const RemoveAllUserDataRequestSchema: GenMessage<RemoveAllUserDataRequest>;

/**
 * @generated from message brij.storage.v1.wallet.RemoveAllUserDataResponse
 */
export declare type RemoveAllUserDataResponse = Message<"brij.storage.v1.wallet.RemoveAllUserDataResponse"> & {
};

/**
 * Describes the message brij.storage.v1.wallet.RemoveAllUserDataResponse.
 * Use `create(RemoveAllUserDataResponseSchema)` to create a new message.
 */
export declare const RemoveAllUserDataResponseSchema: GenMessage<RemoveAllUserDataResponse>;

/**
 * @generated from message brij.storage.v1.wallet.GetGrantedAccessPartnersRequest
 */
export declare type GetGrantedAccessPartnersRequest = Message<"brij.storage.v1.wallet.GetGrantedAccessPartnersRequest"> & {
};

/**
 * Describes the message brij.storage.v1.wallet.GetGrantedAccessPartnersRequest.
 * Use `create(GetGrantedAccessPartnersRequestSchema)` to create a new message.
 */
export declare const GetGrantedAccessPartnersRequestSchema: GenMessage<GetGrantedAccessPartnersRequest>;

/**
 * @generated from message brij.storage.v1.wallet.GetGrantedAccessPartnersResponse
 */
export declare type GetGrantedAccessPartnersResponse = Message<"brij.storage.v1.wallet.GetGrantedAccessPartnersResponse"> & {
  /**
   * @generated from field: repeated brij.storage.v1.wallet.GetPartnerInfoResponse partners = 1;
   */
  partners: GetPartnerInfoResponse[];
};

/**
 * Describes the message brij.storage.v1.wallet.GetGrantedAccessPartnersResponse.
 * Use `create(GetGrantedAccessPartnersResponseSchema)` to create a new message.
 */
export declare const GetGrantedAccessPartnersResponseSchema: GenMessage<GetGrantedAccessPartnersResponse>;

/**
 * @generated from message brij.storage.v1.wallet.SetUserDataRequest
 */
export declare type SetUserDataRequest = Message<"brij.storage.v1.wallet.SetUserDataRequest"> & {
  /**
   * UserDataEnvelope
   *
   * @generated from field: bytes payload = 1;
   */
  payload: Uint8Array;

  /**
   * @generated from field: string hash = 2;
   */
  hash: string;

  /**
   * @generated from field: bytes signature = 3;
   */
  signature: Uint8Array;
};

/**
 * Describes the message brij.storage.v1.wallet.SetUserDataRequest.
 * Use `create(SetUserDataRequestSchema)` to create a new message.
 */
export declare const SetUserDataRequestSchema: GenMessage<SetUserDataRequest>;

/**
 * @generated from message brij.storage.v1.wallet.SetUserDataResponse
 */
export declare type SetUserDataResponse = Message<"brij.storage.v1.wallet.SetUserDataResponse"> & {
};

/**
 * Describes the message brij.storage.v1.wallet.SetUserDataResponse.
 * Use `create(SetUserDataResponseSchema)` to create a new message.
 */
export declare const SetUserDataResponseSchema: GenMessage<SetUserDataResponse>;

/**
 * @generated from message brij.storage.v1.wallet.RemoveUserDataRequest
 */
export declare type RemoveUserDataRequest = Message<"brij.storage.v1.wallet.RemoveUserDataRequest"> & {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;
};

/**
 * Describes the message brij.storage.v1.wallet.RemoveUserDataRequest.
 * Use `create(RemoveUserDataRequestSchema)` to create a new message.
 */
export declare const RemoveUserDataRequestSchema: GenMessage<RemoveUserDataRequest>;

/**
 * @generated from message brij.storage.v1.wallet.RemoveUserDataResponse
 */
export declare type RemoveUserDataResponse = Message<"brij.storage.v1.wallet.RemoveUserDataResponse"> & {
};

/**
 * Describes the message brij.storage.v1.wallet.RemoveUserDataResponse.
 * Use `create(RemoveUserDataResponseSchema)` to create a new message.
 */
export declare const RemoveUserDataResponseSchema: GenMessage<RemoveUserDataResponse>;

/**
 * @generated from message brij.storage.v1.wallet.GetUserDataRequest
 */
export declare type GetUserDataRequest = Message<"brij.storage.v1.wallet.GetUserDataRequest"> & {
  /**
   * @generated from field: bool include_values = 1;
   */
  includeValues: boolean;
};

/**
 * Describes the message brij.storage.v1.wallet.GetUserDataRequest.
 * Use `create(GetUserDataRequestSchema)` to create a new message.
 */
export declare const GetUserDataRequestSchema: GenMessage<GetUserDataRequest>;

/**
 * @generated from message brij.storage.v1.wallet.GetUserDataResponse
 */
export declare type GetUserDataResponse = Message<"brij.storage.v1.wallet.GetUserDataResponse"> & {
  /**
   * @generated from field: repeated brij.storage.v1.common.UserDataField user_data = 1;
   */
  userData: UserDataField[];

  /**
   * @generated from field: repeated brij.storage.v1.common.ValidationDataField validation_data = 2;
   */
  validationData: ValidationDataField[];
};

/**
 * Describes the message brij.storage.v1.wallet.GetUserDataResponse.
 * Use `create(GetUserDataResponseSchema)` to create a new message.
 */
export declare const GetUserDataResponseSchema: GenMessage<GetUserDataResponse>;

/**
 * @generated from message brij.storage.v1.wallet.CheckAccessRequest
 */
export declare type CheckAccessRequest = Message<"brij.storage.v1.wallet.CheckAccessRequest"> & {
  /**
   * @generated from field: string partner_public_key = 1;
   */
  partnerPublicKey: string;
};

/**
 * Describes the message brij.storage.v1.wallet.CheckAccessRequest.
 * Use `create(CheckAccessRequestSchema)` to create a new message.
 */
export declare const CheckAccessRequestSchema: GenMessage<CheckAccessRequest>;

/**
 * @generated from message brij.storage.v1.wallet.CheckAccessResponse
 */
export declare type CheckAccessResponse = Message<"brij.storage.v1.wallet.CheckAccessResponse"> & {
  /**
   * @generated from field: bool has_access = 1;
   */
  hasAccess: boolean;
};

/**
 * Describes the message brij.storage.v1.wallet.CheckAccessResponse.
 * Use `create(CheckAccessResponseSchema)` to create a new message.
 */
export declare const CheckAccessResponseSchema: GenMessage<CheckAccessResponse>;

/**
 * @generated from message brij.storage.v1.wallet.GetKycStatusRequest
 */
export declare type GetKycStatusRequest = Message<"brij.storage.v1.wallet.GetKycStatusRequest"> & {
  /**
   * @generated from field: string country = 1;
   */
  country: string;

  /**
   * @generated from field: string validator_public_key = 2;
   */
  validatorPublicKey: string;
};

/**
 * Describes the message brij.storage.v1.wallet.GetKycStatusRequest.
 * Use `create(GetKycStatusRequestSchema)` to create a new message.
 */
export declare const GetKycStatusRequestSchema: GenMessage<GetKycStatusRequest>;

/**
 * @generated from message brij.storage.v1.wallet.GetKycStatusResponse
 */
export declare type GetKycStatusResponse = Message<"brij.storage.v1.wallet.GetKycStatusResponse"> & {
  /**
   * @generated from field: brij.storage.v1.common.KycStatus status = 1;
   */
  status: KycStatus;
};

/**
 * Describes the message brij.storage.v1.wallet.GetKycStatusResponse.
 * Use `create(GetKycStatusResponseSchema)` to create a new message.
 */
export declare const GetKycStatusResponseSchema: GenMessage<GetKycStatusResponse>;

/**
 * @generated from message brij.storage.v1.wallet.GetWalletProofRequest
 */
export declare type GetWalletProofRequest = Message<"brij.storage.v1.wallet.GetWalletProofRequest"> & {
  /**
   * @generated from field: string wallet_address = 1;
   */
  walletAddress: string;
};

/**
 * Describes the message brij.storage.v1.wallet.GetWalletProofRequest.
 * Use `create(GetWalletProofRequestSchema)` to create a new message.
 */
export declare const GetWalletProofRequestSchema: GenMessage<GetWalletProofRequest>;

/**
 * @generated from message brij.storage.v1.wallet.GetWalletProofResponse
 */
export declare type GetWalletProofResponse = Message<"brij.storage.v1.wallet.GetWalletProofResponse"> & {
  /**
   * @generated from field: string proof_message = 1;
   */
  proofMessage: string;
};

/**
 * Describes the message brij.storage.v1.wallet.GetWalletProofResponse.
 * Use `create(GetWalletProofResponseSchema)` to create a new message.
 */
export declare const GetWalletProofResponseSchema: GenMessage<GetWalletProofResponse>;

/**
 * @generated from service brij.storage.v1.wallet.WalletService
 */
export declare const WalletService: GenService<{
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.GetWalletProof
   */
  getWalletProof: {
    methodKind: "unary";
    input: typeof GetWalletProofRequestSchema;
    output: typeof GetWalletProofResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.RestoreConnection
   */
  restoreConnection: {
    methodKind: "unary";
    input: typeof RestoreConnectionRequestSchema;
    output: typeof RestoreConnectionResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.ConnectWallet
   */
  connectWallet: {
    methodKind: "unary";
    input: typeof ConnectRequestSchema;
    output: typeof ConnectResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.GetInfo
   */
  getInfo: {
    methodKind: "unary";
    input: typeof GetInfoRequestSchema;
    output: typeof GetInfoResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.GetPartnerInfo
   */
  getPartnerInfo: {
    methodKind: "unary";
    input: typeof GetPartnerInfoRequestSchema;
    output: typeof GetPartnerInfoResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.GetGrantedAccessPartners
   */
  getGrantedAccessPartners: {
    methodKind: "unary";
    input: typeof GetGrantedAccessPartnersRequestSchema;
    output: typeof GetGrantedAccessPartnersResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.GrantAccess
   */
  grantAccess: {
    methodKind: "unary";
    input: typeof GrantAccessRequestSchema;
    output: typeof GrantAccessResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.SetUserData
   */
  setUserData: {
    methodKind: "unary";
    input: typeof SetUserDataRequestSchema;
    output: typeof SetUserDataResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.RemoveUserData
   */
  removeUserData: {
    methodKind: "unary";
    input: typeof RemoveUserDataRequestSchema;
    output: typeof RemoveUserDataResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.RevokeAccess
   */
  revokeAccess: {
    methodKind: "unary";
    input: typeof RevokeAccessRequestSchema;
    output: typeof RevokeAccessResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.RemoveAllUserData
   */
  removeAllUserData: {
    methodKind: "unary";
    input: typeof RemoveAllUserDataRequestSchema;
    output: typeof RemoveAllUserDataResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.GetUserData
   */
  getUserData: {
    methodKind: "unary";
    input: typeof GetUserDataRequestSchema;
    output: typeof GetUserDataResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.CheckAccess
   */
  checkAccess: {
    methodKind: "unary";
    input: typeof CheckAccessRequestSchema;
    output: typeof CheckAccessResponseSchema;
  },
  /**
   * @generated from rpc brij.storage.v1.wallet.WalletService.GetKycStatus
   */
  getKycStatus: {
    methodKind: "unary";
    input: typeof GetKycStatusRequestSchema;
    output: typeof GetKycStatusResponseSchema;
  },
}>;

