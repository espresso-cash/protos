/**
 * @fileoverview gRPC-Web generated client stub for brij.storage.v1.partner
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: brij/storage/v1/partner/service.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var brij_storage_v1_common_kyc_item_pb = require('../../../../brij/storage/v1/common/kyc_item_pb.js')

var brij_storage_v1_common_user_data_field_pb = require('../../../../brij/storage/v1/common/user_data_field_pb.js')

var brij_storage_v1_common_validation_data_field_pb = require('../../../../brij/storage/v1/common/validation_data_field_pb.js')

var brij_storage_v1_common_validation_status_pb = require('../../../../brij/storage/v1/common/validation_status_pb.js')

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js')
const proto = {};
proto.brij = {};
proto.brij.storage = {};
proto.brij.storage.v1 = {};
proto.brij.storage.v1.partner = require('./service_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.brij.storage.v1.partner.PartnerServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.brij.storage.v1.partner.PartnerServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.partner.GetInfoRequest,
 *   !proto.brij.storage.v1.partner.GetInfoResponse>}
 */
const methodDescriptor_PartnerService_GetInfo = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.partner.PartnerService/GetInfo',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.partner.GetInfoRequest,
  proto.brij.storage.v1.partner.GetInfoResponse,
  /**
   * @param {!proto.brij.storage.v1.partner.GetInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.partner.GetInfoResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.partner.GetInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.partner.GetInfoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.partner.GetInfoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.partner.PartnerServiceClient.prototype.getInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/GetInfo',
      request,
      metadata || {},
      methodDescriptor_PartnerService_GetInfo,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.partner.GetInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.partner.GetInfoResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.partner.PartnerServicePromiseClient.prototype.getInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/GetInfo',
      request,
      metadata || {},
      methodDescriptor_PartnerService_GetInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.partner.GetUserDataRequest,
 *   !proto.brij.storage.v1.partner.GetUserDataResponse>}
 */
const methodDescriptor_PartnerService_GetUserData = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.partner.PartnerService/GetUserData',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.partner.GetUserDataRequest,
  proto.brij.storage.v1.partner.GetUserDataResponse,
  /**
   * @param {!proto.brij.storage.v1.partner.GetUserDataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.partner.GetUserDataResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.partner.GetUserDataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.partner.GetUserDataResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.partner.GetUserDataResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.partner.PartnerServiceClient.prototype.getUserData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/GetUserData',
      request,
      metadata || {},
      methodDescriptor_PartnerService_GetUserData,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.partner.GetUserDataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.partner.GetUserDataResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.partner.PartnerServicePromiseClient.prototype.getUserData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/GetUserData',
      request,
      metadata || {},
      methodDescriptor_PartnerService_GetUserData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.partner.SetValidationDataRequest,
 *   !proto.brij.storage.v1.partner.SetValidationDataResponse>}
 */
const methodDescriptor_PartnerService_SetValidationData = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.partner.PartnerService/SetValidationData',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.partner.SetValidationDataRequest,
  proto.brij.storage.v1.partner.SetValidationDataResponse,
  /**
   * @param {!proto.brij.storage.v1.partner.SetValidationDataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.partner.SetValidationDataResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.partner.SetValidationDataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.partner.SetValidationDataResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.partner.SetValidationDataResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.partner.PartnerServiceClient.prototype.setValidationData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/SetValidationData',
      request,
      metadata || {},
      methodDescriptor_PartnerService_SetValidationData,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.partner.SetValidationDataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.partner.SetValidationDataResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.partner.PartnerServicePromiseClient.prototype.setValidationData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/SetValidationData',
      request,
      metadata || {},
      methodDescriptor_PartnerService_SetValidationData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.partner.RemoveValidationDataRequest,
 *   !proto.brij.storage.v1.partner.RemoveValidationDataResponse>}
 */
const methodDescriptor_PartnerService_RemoveValidationData = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.partner.PartnerService/RemoveValidationData',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.partner.RemoveValidationDataRequest,
  proto.brij.storage.v1.partner.RemoveValidationDataResponse,
  /**
   * @param {!proto.brij.storage.v1.partner.RemoveValidationDataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.partner.RemoveValidationDataResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.partner.RemoveValidationDataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.partner.RemoveValidationDataResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.partner.RemoveValidationDataResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.partner.PartnerServiceClient.prototype.removeValidationData =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/RemoveValidationData',
      request,
      metadata || {},
      methodDescriptor_PartnerService_RemoveValidationData,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.partner.RemoveValidationDataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.partner.RemoveValidationDataResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.partner.PartnerServicePromiseClient.prototype.removeValidationData =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/RemoveValidationData',
      request,
      metadata || {},
      methodDescriptor_PartnerService_RemoveValidationData);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.partner.GetKycStatusRequest,
 *   !proto.brij.storage.v1.partner.GetKycStatusResponse>}
 */
const methodDescriptor_PartnerService_GetKycStatus = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.partner.PartnerService/GetKycStatus',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.partner.GetKycStatusRequest,
  proto.brij.storage.v1.partner.GetKycStatusResponse,
  /**
   * @param {!proto.brij.storage.v1.partner.GetKycStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.partner.GetKycStatusResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.partner.GetKycStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.partner.GetKycStatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.partner.GetKycStatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.partner.PartnerServiceClient.prototype.getKycStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/GetKycStatus',
      request,
      metadata || {},
      methodDescriptor_PartnerService_GetKycStatus,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.partner.GetKycStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.partner.GetKycStatusResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.partner.PartnerServicePromiseClient.prototype.getKycStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/GetKycStatus',
      request,
      metadata || {},
      methodDescriptor_PartnerService_GetKycStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.partner.CreateKycStatusRequest,
 *   !proto.brij.storage.v1.partner.CreateKycStatusResponse>}
 */
const methodDescriptor_PartnerService_CreateKycStatus = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.partner.PartnerService/CreateKycStatus',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.partner.CreateKycStatusRequest,
  proto.brij.storage.v1.partner.CreateKycStatusResponse,
  /**
   * @param {!proto.brij.storage.v1.partner.CreateKycStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.partner.CreateKycStatusResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.partner.CreateKycStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.partner.CreateKycStatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.partner.CreateKycStatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.partner.PartnerServiceClient.prototype.createKycStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/CreateKycStatus',
      request,
      metadata || {},
      methodDescriptor_PartnerService_CreateKycStatus,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.partner.CreateKycStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.partner.CreateKycStatusResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.partner.PartnerServicePromiseClient.prototype.createKycStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/CreateKycStatus',
      request,
      metadata || {},
      methodDescriptor_PartnerService_CreateKycStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.storage.v1.partner.UpdateKycStatusRequest,
 *   !proto.brij.storage.v1.partner.UpdateKycStatusResponse>}
 */
const methodDescriptor_PartnerService_UpdateKycStatus = new grpc.web.MethodDescriptor(
  '/brij.storage.v1.partner.PartnerService/UpdateKycStatus',
  grpc.web.MethodType.UNARY,
  proto.brij.storage.v1.partner.UpdateKycStatusRequest,
  proto.brij.storage.v1.partner.UpdateKycStatusResponse,
  /**
   * @param {!proto.brij.storage.v1.partner.UpdateKycStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.storage.v1.partner.UpdateKycStatusResponse.deserializeBinary
);


/**
 * @param {!proto.brij.storage.v1.partner.UpdateKycStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.storage.v1.partner.UpdateKycStatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.storage.v1.partner.UpdateKycStatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.storage.v1.partner.PartnerServiceClient.prototype.updateKycStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/UpdateKycStatus',
      request,
      metadata || {},
      methodDescriptor_PartnerService_UpdateKycStatus,
      callback);
};


/**
 * @param {!proto.brij.storage.v1.partner.UpdateKycStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.storage.v1.partner.UpdateKycStatusResponse>}
 *     Promise that resolves to the response
 */
proto.brij.storage.v1.partner.PartnerServicePromiseClient.prototype.updateKycStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.storage.v1.partner.PartnerService/UpdateKycStatus',
      request,
      metadata || {},
      methodDescriptor_PartnerService_UpdateKycStatus);
};


module.exports = proto.brij.storage.v1.partner;

