// source: brij/storage/v1/common/kyc_item.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.brij.storage.v1.common.KycItem', null, global);
goog.exportSymbol('proto.brij.storage.v1.common.KycStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.storage.v1.common.KycItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.brij.storage.v1.common.KycItem.repeatedFields_, null);
};
goog.inherits(proto.brij.storage.v1.common.KycItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.storage.v1.common.KycItem.displayName = 'proto.brij.storage.v1.common.KycItem';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.brij.storage.v1.common.KycItem.repeatedFields_ = [1,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.storage.v1.common.KycItem.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.storage.v1.common.KycItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.storage.v1.common.KycItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.common.KycItem.toObject = function(includeInstance, msg) {
  var f, obj = {
countriesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
status: jspb.Message.getFieldWithDefault(msg, 2, 0),
provider: jspb.Message.getFieldWithDefault(msg, 3, ""),
userPublicKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
hashesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
additionalDataMap: (f = msg.getAdditionalDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.storage.v1.common.KycItem}
 */
proto.brij.storage.v1.common.KycItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.storage.v1.common.KycItem;
  return proto.brij.storage.v1.common.KycItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.storage.v1.common.KycItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.storage.v1.common.KycItem}
 */
proto.brij.storage.v1.common.KycItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountries(value);
      break;
    case 2:
      var value = /** @type {!proto.brij.storage.v1.common.KycStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserPublicKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addHashes(value);
      break;
    case 6:
      var value = msg.getAdditionalDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.storage.v1.common.KycItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.storage.v1.common.KycItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.storage.v1.common.KycItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.storage.v1.common.KycItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserPublicKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getAdditionalDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
};


/**
 * repeated string countries = 1;
 * @return {!Array<string>}
 */
proto.brij.storage.v1.common.KycItem.prototype.getCountriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.brij.storage.v1.common.KycItem} returns this
 */
proto.brij.storage.v1.common.KycItem.prototype.setCountriesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.brij.storage.v1.common.KycItem} returns this
 */
proto.brij.storage.v1.common.KycItem.prototype.addCountries = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brij.storage.v1.common.KycItem} returns this
 */
proto.brij.storage.v1.common.KycItem.prototype.clearCountriesList = function() {
  return this.setCountriesList([]);
};


/**
 * optional KycStatus status = 2;
 * @return {!proto.brij.storage.v1.common.KycStatus}
 */
proto.brij.storage.v1.common.KycItem.prototype.getStatus = function() {
  return /** @type {!proto.brij.storage.v1.common.KycStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.brij.storage.v1.common.KycStatus} value
 * @return {!proto.brij.storage.v1.common.KycItem} returns this
 */
proto.brij.storage.v1.common.KycItem.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string provider = 3;
 * @return {string}
 */
proto.brij.storage.v1.common.KycItem.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.common.KycItem} returns this
 */
proto.brij.storage.v1.common.KycItem.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_public_key = 4;
 * @return {string}
 */
proto.brij.storage.v1.common.KycItem.prototype.getUserPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.storage.v1.common.KycItem} returns this
 */
proto.brij.storage.v1.common.KycItem.prototype.setUserPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string hashes = 5;
 * @return {!Array<string>}
 */
proto.brij.storage.v1.common.KycItem.prototype.getHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.brij.storage.v1.common.KycItem} returns this
 */
proto.brij.storage.v1.common.KycItem.prototype.setHashesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.brij.storage.v1.common.KycItem} returns this
 */
proto.brij.storage.v1.common.KycItem.prototype.addHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brij.storage.v1.common.KycItem} returns this
 */
proto.brij.storage.v1.common.KycItem.prototype.clearHashesList = function() {
  return this.setHashesList([]);
};


/**
 * map<string, bytes> additional_data = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.brij.storage.v1.common.KycItem.prototype.getAdditionalDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.brij.storage.v1.common.KycItem} returns this
 */
proto.brij.storage.v1.common.KycItem.prototype.clearAdditionalDataMap = function() {
  this.getAdditionalDataMap().clear();
  return this;
};


/**
 * @enum {number}
 */
proto.brij.storage.v1.common.KycStatus = {
  KYC_STATUS_UNSPECIFIED: 0,
  KYC_STATUS_PENDING: 1,
  KYC_STATUS_APPROVED: 2,
  KYC_STATUS_REJECTED: 3
};

goog.object.extend(exports, proto.brij.storage.v1.common);
