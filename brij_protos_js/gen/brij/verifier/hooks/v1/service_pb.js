// source: brij/verifier/hooks/v1/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.brij.verifier.hooks.v1.SmileIdResultRequest', null, global);
goog.exportSymbol('proto.brij.verifier.hooks.v1.SmileIdResultResponse', null, global);
goog.exportSymbol('proto.brij.verifier.hooks.v1.SumsubResultRequest', null, global);
goog.exportSymbol('proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult', null, global);
goog.exportSymbol('proto.brij.verifier.hooks.v1.SumsubResultResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.verifier.hooks.v1.SmileIdResultRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.verifier.hooks.v1.SmileIdResultRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.verifier.hooks.v1.SmileIdResultRequest.displayName = 'proto.brij.verifier.hooks.v1.SmileIdResultRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.verifier.hooks.v1.SmileIdResultResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.verifier.hooks.v1.SmileIdResultResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.verifier.hooks.v1.SmileIdResultResponse.displayName = 'proto.brij.verifier.hooks.v1.SmileIdResultResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.verifier.hooks.v1.SumsubResultRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.verifier.hooks.v1.SumsubResultRequest.displayName = 'proto.brij.verifier.hooks.v1.SumsubResultRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.displayName = 'proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.verifier.hooks.v1.SumsubResultResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.verifier.hooks.v1.SumsubResultResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.verifier.hooks.v1.SumsubResultResponse.displayName = 'proto.brij.verifier.hooks.v1.SumsubResultResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.verifier.hooks.v1.SmileIdResultRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.verifier.hooks.v1.SmileIdResultRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.verifier.hooks.v1.SmileIdResultRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.verifier.hooks.v1.SmileIdResultRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.verifier.hooks.v1.SmileIdResultRequest}
 */
proto.brij.verifier.hooks.v1.SmileIdResultRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.verifier.hooks.v1.SmileIdResultRequest;
  return proto.brij.verifier.hooks.v1.SmileIdResultRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.verifier.hooks.v1.SmileIdResultRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.verifier.hooks.v1.SmileIdResultRequest}
 */
proto.brij.verifier.hooks.v1.SmileIdResultRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.verifier.hooks.v1.SmileIdResultRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.verifier.hooks.v1.SmileIdResultRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.verifier.hooks.v1.SmileIdResultRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.verifier.hooks.v1.SmileIdResultRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.verifier.hooks.v1.SmileIdResultResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.verifier.hooks.v1.SmileIdResultResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.verifier.hooks.v1.SmileIdResultResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.verifier.hooks.v1.SmileIdResultResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.verifier.hooks.v1.SmileIdResultResponse}
 */
proto.brij.verifier.hooks.v1.SmileIdResultResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.verifier.hooks.v1.SmileIdResultResponse;
  return proto.brij.verifier.hooks.v1.SmileIdResultResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.verifier.hooks.v1.SmileIdResultResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.verifier.hooks.v1.SmileIdResultResponse}
 */
proto.brij.verifier.hooks.v1.SmileIdResultResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.verifier.hooks.v1.SmileIdResultResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.verifier.hooks.v1.SmileIdResultResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.verifier.hooks.v1.SmileIdResultResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.verifier.hooks.v1.SmileIdResultResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.verifier.hooks.v1.SumsubResultRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.verifier.hooks.v1.SumsubResultRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
applicantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
inspectionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
correlationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
externalUserId: jspb.Message.getFieldWithDefault(msg, 4, ""),
levelName: jspb.Message.getFieldWithDefault(msg, 5, ""),
type: jspb.Message.getFieldWithDefault(msg, 6, ""),
reviewResult: (f = msg.getReviewResult()) && proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.toObject(includeInstance, f),
reviewStatus: jspb.Message.getFieldWithDefault(msg, 8, ""),
createdAtMs: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.verifier.hooks.v1.SumsubResultRequest;
  return proto.brij.verifier.hooks.v1.SumsubResultRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.verifier.hooks.v1.SumsubResultRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicantId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevelName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 7:
      var value = new proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult;
      reader.readMessage(value,proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.deserializeBinaryFromReader);
      msg.setReviewResult(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReviewStatus(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAtMs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.verifier.hooks.v1.SumsubResultRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.verifier.hooks.v1.SumsubResultRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicantId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInspectionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExternalUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLevelName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReviewResult();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.serializeBinaryToWriter
    );
  }
  f = message.getReviewStatus();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreatedAtMs();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.toObject = function(includeInstance, msg) {
  var f, obj = {
reviewAnswer: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult;
  return proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReviewAnswer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReviewAnswer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string review_answer = 1;
 * @return {string}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.prototype.getReviewAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult} returns this
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult.prototype.setReviewAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string applicant_id = 1;
 * @return {string}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.getApplicantId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest} returns this
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.setApplicantId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string inspection_id = 2;
 * @return {string}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.getInspectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest} returns this
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.setInspectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string correlation_id = 3;
 * @return {string}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest} returns this
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.setCorrelationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string external_user_id = 4;
 * @return {string}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.getExternalUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest} returns this
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.setExternalUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string level_name = 5;
 * @return {string}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.getLevelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest} returns this
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.setLevelName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string type = 6;
 * @return {string}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest} returns this
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ReviewResult review_result = 7;
 * @return {?proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.getReviewResult = function() {
  return /** @type{?proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult} */ (
    jspb.Message.getWrapperField(this, proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult, 7));
};


/**
 * @param {?proto.brij.verifier.hooks.v1.SumsubResultRequest.ReviewResult|undefined} value
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest} returns this
*/
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.setReviewResult = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest} returns this
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.clearReviewResult = function() {
  return this.setReviewResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.hasReviewResult = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string review_status = 8;
 * @return {string}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.getReviewStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest} returns this
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.setReviewStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string created_at_ms = 9;
 * @return {string}
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.getCreatedAtMs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultRequest} returns this
 */
proto.brij.verifier.hooks.v1.SumsubResultRequest.prototype.setCreatedAtMs = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.verifier.hooks.v1.SumsubResultResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.verifier.hooks.v1.SumsubResultResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.verifier.hooks.v1.SumsubResultResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.verifier.hooks.v1.SumsubResultResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultResponse}
 */
proto.brij.verifier.hooks.v1.SumsubResultResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.verifier.hooks.v1.SumsubResultResponse;
  return proto.brij.verifier.hooks.v1.SumsubResultResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.verifier.hooks.v1.SumsubResultResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.verifier.hooks.v1.SumsubResultResponse}
 */
proto.brij.verifier.hooks.v1.SumsubResultResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.verifier.hooks.v1.SumsubResultResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.verifier.hooks.v1.SumsubResultResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.verifier.hooks.v1.SumsubResultResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.verifier.hooks.v1.SumsubResultResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.brij.verifier.hooks.v1);
