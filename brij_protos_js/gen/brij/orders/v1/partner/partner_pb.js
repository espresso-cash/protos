// source: brij/orders/v1/partner/partner.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var brij_orders_v1_common_ramp_type_pb = require('../../../../brij/orders/v1/common/ramp_type_pb.js');
goog.object.extend(proto, brij_orders_v1_common_ramp_type_pb);
var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.brij.orders.v1.partner.AcceptOrderRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.AcceptOrderResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.CompleteOrderRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.CompleteOrderResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.ConversionRate', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.FailOrderRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.FailOrderResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.GenerateTransactionRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.GenerateTransactionResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.GetOrderRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.GetOrderResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.GetOrdersRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.GetOrdersResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.RampFeeUpdateData', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.RejectOrderRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.RejectOrderResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.UpdateFeesRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.partner.UpdateFeesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.GetOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.GetOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.GetOrderRequest.displayName = 'proto.brij.orders.v1.partner.GetOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.GetOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.GetOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.GetOrderResponse.displayName = 'proto.brij.orders.v1.partner.GetOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.AcceptOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.AcceptOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.AcceptOrderRequest.displayName = 'proto.brij.orders.v1.partner.AcceptOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.AcceptOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.AcceptOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.AcceptOrderResponse.displayName = 'proto.brij.orders.v1.partner.AcceptOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.RejectOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.RejectOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.RejectOrderRequest.displayName = 'proto.brij.orders.v1.partner.RejectOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.RejectOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.RejectOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.RejectOrderResponse.displayName = 'proto.brij.orders.v1.partner.RejectOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.CompleteOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.CompleteOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.CompleteOrderRequest.displayName = 'proto.brij.orders.v1.partner.CompleteOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.CompleteOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.CompleteOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.CompleteOrderResponse.displayName = 'proto.brij.orders.v1.partner.CompleteOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.FailOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.FailOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.FailOrderRequest.displayName = 'proto.brij.orders.v1.partner.FailOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.FailOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.FailOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.FailOrderResponse.displayName = 'proto.brij.orders.v1.partner.FailOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.GetOrdersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.GetOrdersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.GetOrdersRequest.displayName = 'proto.brij.orders.v1.partner.GetOrdersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.GetOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.brij.orders.v1.partner.GetOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.brij.orders.v1.partner.GetOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.GetOrdersResponse.displayName = 'proto.brij.orders.v1.partner.GetOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.UpdateFeesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.UpdateFeesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.UpdateFeesRequest.displayName = 'proto.brij.orders.v1.partner.UpdateFeesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.RampFeeUpdateData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.RampFeeUpdateData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.RampFeeUpdateData.displayName = 'proto.brij.orders.v1.partner.RampFeeUpdateData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.ConversionRate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.ConversionRate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.ConversionRate.displayName = 'proto.brij.orders.v1.partner.ConversionRate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.UpdateFeesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.UpdateFeesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.UpdateFeesResponse.displayName = 'proto.brij.orders.v1.partner.UpdateFeesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.GenerateTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.GenerateTransactionRequest.displayName = 'proto.brij.orders.v1.partner.GenerateTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.partner.GenerateTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.partner.GenerateTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.partner.GenerateTransactionResponse.displayName = 'proto.brij.orders.v1.partner.GenerateTransactionResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.GetOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.GetOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.GetOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GetOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
externalId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.GetOrderRequest}
 */
proto.brij.orders.v1.partner.GetOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.GetOrderRequest;
  return proto.brij.orders.v1.partner.GetOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.GetOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.GetOrderRequest}
 */
proto.brij.orders.v1.partner.GetOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.GetOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.GetOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.GetOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GetOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderRequest} returns this
 */
proto.brij.orders.v1.partner.GetOrderRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string external_id = 2;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderRequest.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderRequest} returns this
 */
proto.brij.orders.v1.partner.GetOrderRequest.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.GetOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.GetOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GetOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
created: jspb.Message.getFieldWithDefault(msg, 2, ""),
status: jspb.Message.getFieldWithDefault(msg, 3, ""),
partnerPublicKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
userPublicKey: jspb.Message.getFieldWithDefault(msg, 5, ""),
comment: jspb.Message.getFieldWithDefault(msg, 7, ""),
type: jspb.Message.getFieldWithDefault(msg, 8, 0),
cryptoAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
cryptoCurrency: jspb.Message.getFieldWithDefault(msg, 10, ""),
fiatAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
fiatCurrency: jspb.Message.getFieldWithDefault(msg, 12, ""),
bankName: jspb.Message.getFieldWithDefault(msg, 13, ""),
bankAccount: jspb.Message.getFieldWithDefault(msg, 14, ""),
cryptoWalletAddress: jspb.Message.getFieldWithDefault(msg, 15, ""),
transaction: jspb.Message.getFieldWithDefault(msg, 16, ""),
transactionId: jspb.Message.getFieldWithDefault(msg, 17, ""),
externalId: jspb.Message.getFieldWithDefault(msg, 18, ""),
userSignature: jspb.Message.getFieldWithDefault(msg, 19, ""),
partnerSignature: jspb.Message.getFieldWithDefault(msg, 20, ""),
userWalletAddress: jspb.Message.getFieldWithDefault(msg, 21, ""),
walletPublicKey: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse}
 */
proto.brij.orders.v1.partner.GetOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.GetOrderResponse;
  return proto.brij.orders.v1.partner.GetOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.GetOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse}
 */
proto.brij.orders.v1.partner.GetOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerPublicKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserPublicKey(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 8:
      var value = /** @type {!proto.brij.orders.v1.common.RampType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCryptoAmount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCryptoCurrency(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFiatAmount(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatCurrency(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccount(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCryptoWalletAddress(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransaction(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionId(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserSignature(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerSignature(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserWalletAddress(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.GetOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.GetOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GetOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreated();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPartnerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserPublicKey();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getCryptoAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getCryptoCurrency();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getFiatAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getFiatCurrency();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBankAccount();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCryptoWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getTransaction();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getTransactionId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getUserSignature();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getPartnerSignature();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getUserWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getWalletPublicKey();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string created = 2;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setCreated = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string status = 3;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string partner_public_key = 4;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getPartnerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setPartnerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string user_public_key = 5;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getUserPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setUserPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string comment = 7;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional brij.orders.v1.common.RampType type = 8;
 * @return {!proto.brij.orders.v1.common.RampType}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getType = function() {
  return /** @type {!proto.brij.orders.v1.common.RampType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.brij.orders.v1.common.RampType} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional double crypto_amount = 9;
 * @return {number}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getCryptoAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setCryptoAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string crypto_currency = 10;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getCryptoCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setCryptoCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional double fiat_amount = 11;
 * @return {number}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getFiatAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setFiatAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional string fiat_currency = 12;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getFiatCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setFiatCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string bank_name = 13;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string bank_account = 14;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getBankAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setBankAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string crypto_wallet_address = 15;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getCryptoWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setCryptoWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string transaction = 16;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getTransaction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setTransaction = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string transaction_id = 17;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setTransactionId = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string external_id = 18;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string user_signature = 19;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getUserSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setUserSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string partner_signature = 20;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getPartnerSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setPartnerSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string user_wallet_address = 21;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getUserWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setUserWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string wallet_public_key = 22;
 * @return {string}
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.getWalletPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrderResponse.prototype.setWalletPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.AcceptOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.AcceptOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
bankName: jspb.Message.getFieldWithDefault(msg, 2, ""),
bankAccount: jspb.Message.getFieldWithDefault(msg, 3, ""),
cryptoWalletAddress: jspb.Message.getFieldWithDefault(msg, 4, ""),
externalId: jspb.Message.getFieldWithDefault(msg, 5, ""),
partnerSignature: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.AcceptOrderRequest}
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.AcceptOrderRequest;
  return proto.brij.orders.v1.partner.AcceptOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.AcceptOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.AcceptOrderRequest}
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCryptoWalletAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.AcceptOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.AcceptOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBankAccount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCryptoWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPartnerSignature();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.AcceptOrderRequest} returns this
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bank_name = 2;
 * @return {string}
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.AcceptOrderRequest} returns this
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bank_account = 3;
 * @return {string}
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.getBankAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.AcceptOrderRequest} returns this
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.setBankAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string crypto_wallet_address = 4;
 * @return {string}
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.getCryptoWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.AcceptOrderRequest} returns this
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.setCryptoWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string external_id = 5;
 * @return {string}
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.AcceptOrderRequest} returns this
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string partner_signature = 6;
 * @return {string}
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.getPartnerSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.AcceptOrderRequest} returns this
 */
proto.brij.orders.v1.partner.AcceptOrderRequest.prototype.setPartnerSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.AcceptOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.AcceptOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.AcceptOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.AcceptOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.AcceptOrderResponse}
 */
proto.brij.orders.v1.partner.AcceptOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.AcceptOrderResponse;
  return proto.brij.orders.v1.partner.AcceptOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.AcceptOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.AcceptOrderResponse}
 */
proto.brij.orders.v1.partner.AcceptOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.AcceptOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.AcceptOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.AcceptOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.AcceptOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.RejectOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.RejectOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.RejectOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.RejectOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.RejectOrderRequest}
 */
proto.brij.orders.v1.partner.RejectOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.RejectOrderRequest;
  return proto.brij.orders.v1.partner.RejectOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.RejectOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.RejectOrderRequest}
 */
proto.brij.orders.v1.partner.RejectOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.RejectOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.RejectOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.RejectOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.RejectOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.partner.RejectOrderRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.RejectOrderRequest} returns this
 */
proto.brij.orders.v1.partner.RejectOrderRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.brij.orders.v1.partner.RejectOrderRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.RejectOrderRequest} returns this
 */
proto.brij.orders.v1.partner.RejectOrderRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.RejectOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.RejectOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.RejectOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.RejectOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.RejectOrderResponse}
 */
proto.brij.orders.v1.partner.RejectOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.RejectOrderResponse;
  return proto.brij.orders.v1.partner.RejectOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.RejectOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.RejectOrderResponse}
 */
proto.brij.orders.v1.partner.RejectOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.RejectOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.RejectOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.RejectOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.RejectOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.CompleteOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.CompleteOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
transactionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
externalId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.CompleteOrderRequest}
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.CompleteOrderRequest;
  return proto.brij.orders.v1.partner.CompleteOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.CompleteOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.CompleteOrderRequest}
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.CompleteOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.CompleteOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransactionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.CompleteOrderRequest} returns this
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string transaction_id = 2;
 * @return {string}
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.prototype.getTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.CompleteOrderRequest} returns this
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.prototype.setTransactionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string external_id = 3;
 * @return {string}
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.CompleteOrderRequest} returns this
 */
proto.brij.orders.v1.partner.CompleteOrderRequest.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.CompleteOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.CompleteOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.CompleteOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.CompleteOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.CompleteOrderResponse}
 */
proto.brij.orders.v1.partner.CompleteOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.CompleteOrderResponse;
  return proto.brij.orders.v1.partner.CompleteOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.CompleteOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.CompleteOrderResponse}
 */
proto.brij.orders.v1.partner.CompleteOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.CompleteOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.CompleteOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.CompleteOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.CompleteOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.FailOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.FailOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.FailOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.FailOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
reason: jspb.Message.getFieldWithDefault(msg, 2, ""),
externalId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.FailOrderRequest}
 */
proto.brij.orders.v1.partner.FailOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.FailOrderRequest;
  return proto.brij.orders.v1.partner.FailOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.FailOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.FailOrderRequest}
 */
proto.brij.orders.v1.partner.FailOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.FailOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.FailOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.FailOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.FailOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.partner.FailOrderRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.FailOrderRequest} returns this
 */
proto.brij.orders.v1.partner.FailOrderRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.brij.orders.v1.partner.FailOrderRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.FailOrderRequest} returns this
 */
proto.brij.orders.v1.partner.FailOrderRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string external_id = 3;
 * @return {string}
 */
proto.brij.orders.v1.partner.FailOrderRequest.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.FailOrderRequest} returns this
 */
proto.brij.orders.v1.partner.FailOrderRequest.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.FailOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.FailOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.FailOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.FailOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.FailOrderResponse}
 */
proto.brij.orders.v1.partner.FailOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.FailOrderResponse;
  return proto.brij.orders.v1.partner.FailOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.FailOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.FailOrderResponse}
 */
proto.brij.orders.v1.partner.FailOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.FailOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.FailOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.FailOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.FailOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.GetOrdersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.GetOrdersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.GetOrdersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GetOrdersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.GetOrdersRequest}
 */
proto.brij.orders.v1.partner.GetOrdersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.GetOrdersRequest;
  return proto.brij.orders.v1.partner.GetOrdersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.GetOrdersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.GetOrdersRequest}
 */
proto.brij.orders.v1.partner.GetOrdersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.GetOrdersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.GetOrdersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.GetOrdersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GetOrdersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.brij.orders.v1.partner.GetOrdersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.GetOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.GetOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.GetOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GetOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    proto.brij.orders.v1.partner.GetOrderResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.GetOrdersResponse}
 */
proto.brij.orders.v1.partner.GetOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.GetOrdersResponse;
  return proto.brij.orders.v1.partner.GetOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.GetOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.GetOrdersResponse}
 */
proto.brij.orders.v1.partner.GetOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.brij.orders.v1.partner.GetOrderResponse;
      reader.readMessage(value,proto.brij.orders.v1.partner.GetOrderResponse.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.GetOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.GetOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.GetOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GetOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.brij.orders.v1.partner.GetOrderResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GetOrderResponse orders = 1;
 * @return {!Array<!proto.brij.orders.v1.partner.GetOrderResponse>}
 */
proto.brij.orders.v1.partner.GetOrdersResponse.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.brij.orders.v1.partner.GetOrderResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.brij.orders.v1.partner.GetOrderResponse, 1));
};


/**
 * @param {!Array<!proto.brij.orders.v1.partner.GetOrderResponse>} value
 * @return {!proto.brij.orders.v1.partner.GetOrdersResponse} returns this
*/
proto.brij.orders.v1.partner.GetOrdersResponse.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.brij.orders.v1.partner.GetOrderResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.brij.orders.v1.partner.GetOrderResponse}
 */
proto.brij.orders.v1.partner.GetOrdersResponse.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.brij.orders.v1.partner.GetOrderResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brij.orders.v1.partner.GetOrdersResponse} returns this
 */
proto.brij.orders.v1.partner.GetOrdersResponse.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.UpdateFeesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.UpdateFeesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
onRampFee: (f = msg.getOnRampFee()) && proto.brij.orders.v1.partner.RampFeeUpdateData.toObject(includeInstance, f),
offRampFee: (f = msg.getOffRampFee()) && proto.brij.orders.v1.partner.RampFeeUpdateData.toObject(includeInstance, f),
walletAddress: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.UpdateFeesRequest}
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.UpdateFeesRequest;
  return proto.brij.orders.v1.partner.UpdateFeesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.UpdateFeesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.UpdateFeesRequest}
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.brij.orders.v1.partner.RampFeeUpdateData;
      reader.readMessage(value,proto.brij.orders.v1.partner.RampFeeUpdateData.deserializeBinaryFromReader);
      msg.setOnRampFee(value);
      break;
    case 2:
      var value = new proto.brij.orders.v1.partner.RampFeeUpdateData;
      reader.readMessage(value,proto.brij.orders.v1.partner.RampFeeUpdateData.deserializeBinaryFromReader);
      msg.setOffRampFee(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.UpdateFeesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.UpdateFeesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnRampFee();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.brij.orders.v1.partner.RampFeeUpdateData.serializeBinaryToWriter
    );
  }
  f = message.getOffRampFee();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.brij.orders.v1.partner.RampFeeUpdateData.serializeBinaryToWriter
    );
  }
  f = message.getWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional RampFeeUpdateData on_ramp_fee = 1;
 * @return {?proto.brij.orders.v1.partner.RampFeeUpdateData}
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.getOnRampFee = function() {
  return /** @type{?proto.brij.orders.v1.partner.RampFeeUpdateData} */ (
    jspb.Message.getWrapperField(this, proto.brij.orders.v1.partner.RampFeeUpdateData, 1));
};


/**
 * @param {?proto.brij.orders.v1.partner.RampFeeUpdateData|undefined} value
 * @return {!proto.brij.orders.v1.partner.UpdateFeesRequest} returns this
*/
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.setOnRampFee = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brij.orders.v1.partner.UpdateFeesRequest} returns this
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.clearOnRampFee = function() {
  return this.setOnRampFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.hasOnRampFee = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RampFeeUpdateData off_ramp_fee = 2;
 * @return {?proto.brij.orders.v1.partner.RampFeeUpdateData}
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.getOffRampFee = function() {
  return /** @type{?proto.brij.orders.v1.partner.RampFeeUpdateData} */ (
    jspb.Message.getWrapperField(this, proto.brij.orders.v1.partner.RampFeeUpdateData, 2));
};


/**
 * @param {?proto.brij.orders.v1.partner.RampFeeUpdateData|undefined} value
 * @return {!proto.brij.orders.v1.partner.UpdateFeesRequest} returns this
*/
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.setOffRampFee = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brij.orders.v1.partner.UpdateFeesRequest} returns this
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.clearOffRampFee = function() {
  return this.setOffRampFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.hasOffRampFee = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string wallet_address = 3;
 * @return {string}
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.getWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.UpdateFeesRequest} returns this
 */
proto.brij.orders.v1.partner.UpdateFeesRequest.prototype.setWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.RampFeeUpdateData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.RampFeeUpdateData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.toObject = function(includeInstance, msg) {
  var f, obj = {
fixedFee: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
percentageFee: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
conversionRates: (f = msg.getConversionRates()) && proto.brij.orders.v1.partner.ConversionRate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.RampFeeUpdateData}
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.RampFeeUpdateData;
  return proto.brij.orders.v1.partner.RampFeeUpdateData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.RampFeeUpdateData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.RampFeeUpdateData}
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFixedFee(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPercentageFee(value);
      break;
    case 3:
      var value = new proto.brij.orders.v1.partner.ConversionRate;
      reader.readMessage(value,proto.brij.orders.v1.partner.ConversionRate.deserializeBinaryFromReader);
      msg.setConversionRates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.RampFeeUpdateData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.RampFeeUpdateData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFixedFee();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getPercentageFee();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getConversionRates();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.brij.orders.v1.partner.ConversionRate.serializeBinaryToWriter
    );
  }
};


/**
 * optional double fixed_fee = 1;
 * @return {number}
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.prototype.getFixedFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.partner.RampFeeUpdateData} returns this
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.prototype.setFixedFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double percentage_fee = 2;
 * @return {number}
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.prototype.getPercentageFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.partner.RampFeeUpdateData} returns this
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.prototype.setPercentageFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional ConversionRate conversion_rates = 3;
 * @return {?proto.brij.orders.v1.partner.ConversionRate}
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.prototype.getConversionRates = function() {
  return /** @type{?proto.brij.orders.v1.partner.ConversionRate} */ (
    jspb.Message.getWrapperField(this, proto.brij.orders.v1.partner.ConversionRate, 3));
};


/**
 * @param {?proto.brij.orders.v1.partner.ConversionRate|undefined} value
 * @return {!proto.brij.orders.v1.partner.RampFeeUpdateData} returns this
*/
proto.brij.orders.v1.partner.RampFeeUpdateData.prototype.setConversionRates = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brij.orders.v1.partner.RampFeeUpdateData} returns this
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.prototype.clearConversionRates = function() {
  return this.setConversionRates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brij.orders.v1.partner.RampFeeUpdateData.prototype.hasConversionRates = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.ConversionRate.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.ConversionRate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.ConversionRate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.ConversionRate.toObject = function(includeInstance, msg) {
  var f, obj = {
cryptoCurrency: jspb.Message.getFieldWithDefault(msg, 1, ""),
fiatCurrency: jspb.Message.getFieldWithDefault(msg, 2, ""),
rate: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.ConversionRate}
 */
proto.brij.orders.v1.partner.ConversionRate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.ConversionRate;
  return proto.brij.orders.v1.partner.ConversionRate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.ConversionRate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.ConversionRate}
 */
proto.brij.orders.v1.partner.ConversionRate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCryptoCurrency(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatCurrency(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.ConversionRate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.ConversionRate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.ConversionRate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.ConversionRate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCryptoCurrency();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFiatCurrency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRate();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string crypto_currency = 1;
 * @return {string}
 */
proto.brij.orders.v1.partner.ConversionRate.prototype.getCryptoCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.ConversionRate} returns this
 */
proto.brij.orders.v1.partner.ConversionRate.prototype.setCryptoCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fiat_currency = 2;
 * @return {string}
 */
proto.brij.orders.v1.partner.ConversionRate.prototype.getFiatCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.ConversionRate} returns this
 */
proto.brij.orders.v1.partner.ConversionRate.prototype.setFiatCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double rate = 3;
 * @return {number}
 */
proto.brij.orders.v1.partner.ConversionRate.prototype.getRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.partner.ConversionRate} returns this
 */
proto.brij.orders.v1.partner.ConversionRate.prototype.setRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.UpdateFeesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.UpdateFeesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.UpdateFeesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.UpdateFeesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.UpdateFeesResponse}
 */
proto.brij.orders.v1.partner.UpdateFeesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.UpdateFeesResponse;
  return proto.brij.orders.v1.partner.UpdateFeesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.UpdateFeesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.UpdateFeesResponse}
 */
proto.brij.orders.v1.partner.UpdateFeesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.UpdateFeesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.UpdateFeesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.UpdateFeesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.UpdateFeesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.GenerateTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.GenerateTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
fundingWalletAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
externalId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.GenerateTransactionRequest}
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.GenerateTransactionRequest;
  return proto.brij.orders.v1.partner.GenerateTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.GenerateTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.GenerateTransactionRequest}
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFundingWalletAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.GenerateTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.GenerateTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFundingWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GenerateTransactionRequest} returns this
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string funding_wallet_address = 2;
 * @return {string}
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.prototype.getFundingWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GenerateTransactionRequest} returns this
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.prototype.setFundingWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string external_id = 3;
 * @return {string}
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GenerateTransactionRequest} returns this
 */
proto.brij.orders.v1.partner.GenerateTransactionRequest.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.partner.GenerateTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.partner.GenerateTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.partner.GenerateTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GenerateTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
transaction: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.partner.GenerateTransactionResponse}
 */
proto.brij.orders.v1.partner.GenerateTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.partner.GenerateTransactionResponse;
  return proto.brij.orders.v1.partner.GenerateTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.partner.GenerateTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.partner.GenerateTransactionResponse}
 */
proto.brij.orders.v1.partner.GenerateTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.partner.GenerateTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.partner.GenerateTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.partner.GenerateTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.partner.GenerateTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string transaction = 1;
 * @return {string}
 */
proto.brij.orders.v1.partner.GenerateTransactionResponse.prototype.getTransaction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.partner.GenerateTransactionResponse} returns this
 */
proto.brij.orders.v1.partner.GenerateTransactionResponse.prototype.setTransaction = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.brij.orders.v1.partner);
