// source: brij/orders/v1/wallet/wallet.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var brij_orders_v1_common_ramp_type_pb = require('../../../../brij/orders/v1/common/ramp_type_pb.js');
goog.object.extend(proto, brij_orders_v1_common_ramp_type_pb);
var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.brij.orders.v1.wallet.CreateOffRampOrderRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.CreateOffRampOrderResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.CreateOnRampOrderRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.CreateOnRampOrderResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.GenerateTransactionRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.GenerateTransactionResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.GetOrderRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.GetOrderResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.GetOrdersRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.GetOrdersResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.GetQuoteRequest', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.GetQuoteResponse', null, global);
goog.exportSymbol('proto.brij.orders.v1.wallet.RampFee', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.CreateOnRampOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.displayName = 'proto.brij.orders.v1.wallet.CreateOnRampOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.CreateOnRampOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.displayName = 'proto.brij.orders.v1.wallet.CreateOnRampOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.CreateOffRampOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.displayName = 'proto.brij.orders.v1.wallet.CreateOffRampOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.CreateOffRampOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.displayName = 'proto.brij.orders.v1.wallet.CreateOffRampOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.GetOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.GetOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.GetOrderRequest.displayName = 'proto.brij.orders.v1.wallet.GetOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.GetOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.GetOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.GetOrderResponse.displayName = 'proto.brij.orders.v1.wallet.GetOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.GetOrdersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.GetOrdersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.GetOrdersRequest.displayName = 'proto.brij.orders.v1.wallet.GetOrdersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.GetOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.brij.orders.v1.wallet.GetOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.brij.orders.v1.wallet.GetOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.GetOrdersResponse.displayName = 'proto.brij.orders.v1.wallet.GetOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.GetQuoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.GetQuoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.GetQuoteRequest.displayName = 'proto.brij.orders.v1.wallet.GetQuoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.GetQuoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.GetQuoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.GetQuoteResponse.displayName = 'proto.brij.orders.v1.wallet.GetQuoteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.RampFee = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.RampFee, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.RampFee.displayName = 'proto.brij.orders.v1.wallet.RampFee';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.GenerateTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.GenerateTransactionRequest.displayName = 'proto.brij.orders.v1.wallet.GenerateTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.brij.orders.v1.wallet.GenerateTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.brij.orders.v1.wallet.GenerateTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.brij.orders.v1.wallet.GenerateTransactionResponse.displayName = 'proto.brij.orders.v1.wallet.GenerateTransactionResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
partnerPublicKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
cryptoAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
cryptoCurrency: jspb.Message.getFieldWithDefault(msg, 3, ""),
fiatAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
fiatCurrency: jspb.Message.getFieldWithDefault(msg, 5, ""),
userSignature: jspb.Message.getFieldWithDefault(msg, 6, ""),
userWalletAddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
walletPublicKey: jspb.Message.getFieldWithDefault(msg, 8, ""),
orderId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.CreateOnRampOrderRequest;
  return proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerPublicKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCryptoAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCryptoCurrency(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFiatAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatCurrency(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserSignature(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserWalletAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletPublicKey(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartnerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCryptoAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getCryptoCurrency();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFiatAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getFiatCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUserSignature();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWalletPublicKey();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string partner_public_key = 1;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.getPartnerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.setPartnerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double crypto_amount = 2;
 * @return {number}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.getCryptoAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.setCryptoAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string crypto_currency = 3;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.getCryptoCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.setCryptoCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double fiat_amount = 4;
 * @return {number}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.getFiatAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.setFiatAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string fiat_currency = 5;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.getFiatCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.setFiatCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string user_signature = 6;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.getUserSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.setUserSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string user_wallet_address = 7;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.getUserWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.setUserWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string wallet_public_key = 8;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.getWalletPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.setWalletPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string order_id = 9;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.CreateOnRampOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderResponse}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.CreateOnRampOrderResponse;
  return proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.CreateOnRampOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderResponse}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.CreateOnRampOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOnRampOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
partnerPublicKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
cryptoAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
cryptoCurrency: jspb.Message.getFieldWithDefault(msg, 3, ""),
fiatAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
fiatCurrency: jspb.Message.getFieldWithDefault(msg, 5, ""),
bankName: jspb.Message.getFieldWithDefault(msg, 6, ""),
bankAccount: jspb.Message.getFieldWithDefault(msg, 7, ""),
userSignature: jspb.Message.getFieldWithDefault(msg, 8, ""),
userWalletAddress: jspb.Message.getFieldWithDefault(msg, 9, ""),
walletPublicKey: jspb.Message.getFieldWithDefault(msg, 10, ""),
orderId: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.CreateOffRampOrderRequest;
  return proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerPublicKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCryptoAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCryptoCurrency(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFiatAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatCurrency(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccount(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserSignature(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserWalletAddress(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletPublicKey(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartnerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCryptoAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getCryptoCurrency();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFiatAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getFiatCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBankAccount();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUserSignature();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUserWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getWalletPublicKey();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string partner_public_key = 1;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getPartnerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setPartnerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double crypto_amount = 2;
 * @return {number}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getCryptoAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setCryptoAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string crypto_currency = 3;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getCryptoCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setCryptoCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double fiat_amount = 4;
 * @return {number}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getFiatAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setFiatAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string fiat_currency = 5;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getFiatCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setFiatCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string bank_name = 6;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string bank_account = 7;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getBankAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setBankAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string user_signature = 8;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getUserSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setUserSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string user_wallet_address = 9;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getUserWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setUserWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string wallet_public_key = 10;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getWalletPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setWalletPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string order_id = 11;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.CreateOffRampOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderResponse}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.CreateOffRampOrderResponse;
  return proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.CreateOffRampOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderResponse}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.CreateOffRampOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.CreateOffRampOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.GetOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.GetOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.GetOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
externalId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.GetOrderRequest}
 */
proto.brij.orders.v1.wallet.GetOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.GetOrderRequest;
  return proto.brij.orders.v1.wallet.GetOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.GetOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.GetOrderRequest}
 */
proto.brij.orders.v1.wallet.GetOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.GetOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.GetOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.GetOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.GetOrderRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string external_id = 2;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderRequest.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderRequest} returns this
 */
proto.brij.orders.v1.wallet.GetOrderRequest.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.GetOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.GetOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
created: jspb.Message.getFieldWithDefault(msg, 2, ""),
status: jspb.Message.getFieldWithDefault(msg, 3, ""),
partnerPublicKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
userPublicKey: jspb.Message.getFieldWithDefault(msg, 5, ""),
comment: jspb.Message.getFieldWithDefault(msg, 7, ""),
type: jspb.Message.getFieldWithDefault(msg, 8, 0),
cryptoAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
cryptoCurrency: jspb.Message.getFieldWithDefault(msg, 10, ""),
fiatAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
fiatCurrency: jspb.Message.getFieldWithDefault(msg, 12, ""),
bankName: jspb.Message.getFieldWithDefault(msg, 13, ""),
bankAccount: jspb.Message.getFieldWithDefault(msg, 14, ""),
cryptoWalletAddress: jspb.Message.getFieldWithDefault(msg, 15, ""),
transaction: jspb.Message.getFieldWithDefault(msg, 16, ""),
transactionId: jspb.Message.getFieldWithDefault(msg, 17, ""),
userSignature: jspb.Message.getFieldWithDefault(msg, 19, ""),
partnerSignature: jspb.Message.getFieldWithDefault(msg, 20, ""),
userWalletAddress: jspb.Message.getFieldWithDefault(msg, 21, ""),
walletPublicKey: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.GetOrderResponse;
  return proto.brij.orders.v1.wallet.GetOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.GetOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerPublicKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserPublicKey(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 8:
      var value = /** @type {!proto.brij.orders.v1.common.RampType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCryptoAmount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCryptoCurrency(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFiatAmount(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatCurrency(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccount(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCryptoWalletAddress(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransaction(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionId(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserSignature(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerSignature(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserWalletAddress(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletPublicKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.GetOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.GetOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreated();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPartnerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserPublicKey();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getCryptoAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getCryptoCurrency();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getFiatAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getFiatCurrency();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBankAccount();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCryptoWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getTransaction();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getTransactionId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getUserSignature();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getPartnerSignature();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getUserWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getWalletPublicKey();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string created = 2;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setCreated = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string status = 3;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string partner_public_key = 4;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getPartnerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setPartnerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string user_public_key = 5;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getUserPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setUserPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string comment = 7;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional brij.orders.v1.common.RampType type = 8;
 * @return {!proto.brij.orders.v1.common.RampType}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getType = function() {
  return /** @type {!proto.brij.orders.v1.common.RampType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.brij.orders.v1.common.RampType} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional double crypto_amount = 9;
 * @return {number}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getCryptoAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setCryptoAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string crypto_currency = 10;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getCryptoCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setCryptoCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional double fiat_amount = 11;
 * @return {number}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getFiatAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setFiatAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional string fiat_currency = 12;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getFiatCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setFiatCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string bank_name = 13;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string bank_account = 14;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getBankAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setBankAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string crypto_wallet_address = 15;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getCryptoWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setCryptoWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string transaction = 16;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getTransaction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setTransaction = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string transaction_id = 17;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setTransactionId = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string user_signature = 19;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getUserSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setUserSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string partner_signature = 20;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getPartnerSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setPartnerSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string user_wallet_address = 21;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getUserWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setUserWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string wallet_public_key = 22;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.getWalletPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrderResponse.prototype.setWalletPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.GetOrdersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.GetOrdersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.GetOrdersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetOrdersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.GetOrdersRequest}
 */
proto.brij.orders.v1.wallet.GetOrdersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.GetOrdersRequest;
  return proto.brij.orders.v1.wallet.GetOrdersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.GetOrdersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.GetOrdersRequest}
 */
proto.brij.orders.v1.wallet.GetOrdersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.GetOrdersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.GetOrdersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.GetOrdersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetOrdersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.brij.orders.v1.wallet.GetOrdersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.GetOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.GetOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.GetOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    proto.brij.orders.v1.wallet.GetOrderResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.GetOrdersResponse}
 */
proto.brij.orders.v1.wallet.GetOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.GetOrdersResponse;
  return proto.brij.orders.v1.wallet.GetOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.GetOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.GetOrdersResponse}
 */
proto.brij.orders.v1.wallet.GetOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.brij.orders.v1.wallet.GetOrderResponse;
      reader.readMessage(value,proto.brij.orders.v1.wallet.GetOrderResponse.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.GetOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.GetOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.GetOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.brij.orders.v1.wallet.GetOrderResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GetOrderResponse orders = 1;
 * @return {!Array<!proto.brij.orders.v1.wallet.GetOrderResponse>}
 */
proto.brij.orders.v1.wallet.GetOrdersResponse.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.brij.orders.v1.wallet.GetOrderResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.brij.orders.v1.wallet.GetOrderResponse, 1));
};


/**
 * @param {!Array<!proto.brij.orders.v1.wallet.GetOrderResponse>} value
 * @return {!proto.brij.orders.v1.wallet.GetOrdersResponse} returns this
*/
proto.brij.orders.v1.wallet.GetOrdersResponse.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.brij.orders.v1.wallet.GetOrderResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.brij.orders.v1.wallet.GetOrderResponse}
 */
proto.brij.orders.v1.wallet.GetOrdersResponse.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.brij.orders.v1.wallet.GetOrderResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.brij.orders.v1.wallet.GetOrdersResponse} returns this
 */
proto.brij.orders.v1.wallet.GetOrdersResponse.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.GetQuoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.GetQuoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
partnerPublicKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
walletPublicKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
cryptoAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
rampType: jspb.Message.getFieldWithDefault(msg, 4, 0),
fiatCurrency: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.GetQuoteRequest}
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.GetQuoteRequest;
  return proto.brij.orders.v1.wallet.GetQuoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.GetQuoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.GetQuoteRequest}
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnerPublicKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletPublicKey(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCryptoAmount(value);
      break;
    case 4:
      var value = /** @type {!proto.brij.orders.v1.common.RampType} */ (reader.readEnum());
      msg.setRampType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.GetQuoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.GetQuoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartnerPublicKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWalletPublicKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCryptoAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getRampType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getFiatCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string partner_public_key = 1;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.getPartnerPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteRequest} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.setPartnerPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string wallet_public_key = 2;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.getWalletPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteRequest} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.setWalletPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double crypto_amount = 3;
 * @return {number}
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.getCryptoAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteRequest} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.setCryptoAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional brij.orders.v1.common.RampType ramp_type = 4;
 * @return {!proto.brij.orders.v1.common.RampType}
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.getRampType = function() {
  return /** @type {!proto.brij.orders.v1.common.RampType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.brij.orders.v1.common.RampType} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteRequest} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.setRampType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string fiat_currency = 5;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.getFiatCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteRequest} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteRequest.prototype.setFiatCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.GetQuoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.GetQuoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
cryptoAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
fiatAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
fiatCurrency: jspb.Message.getFieldWithDefault(msg, 3, ""),
rampType: jspb.Message.getFieldWithDefault(msg, 4, 0),
conversionRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
partnerFee: (f = msg.getPartnerFee()) && proto.brij.orders.v1.wallet.RampFee.toObject(includeInstance, f),
walletFee: (f = msg.getWalletFee()) && proto.brij.orders.v1.wallet.RampFee.toObject(includeInstance, f),
platformFee: (f = msg.getPlatformFee()) && proto.brij.orders.v1.wallet.RampFee.toObject(includeInstance, f),
totalFee: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.GetQuoteResponse;
  return proto.brij.orders.v1.wallet.GetQuoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.GetQuoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCryptoAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFiatAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatCurrency(value);
      break;
    case 4:
      var value = /** @type {!proto.brij.orders.v1.common.RampType} */ (reader.readEnum());
      msg.setRampType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setConversionRate(value);
      break;
    case 6:
      var value = new proto.brij.orders.v1.wallet.RampFee;
      reader.readMessage(value,proto.brij.orders.v1.wallet.RampFee.deserializeBinaryFromReader);
      msg.setPartnerFee(value);
      break;
    case 7:
      var value = new proto.brij.orders.v1.wallet.RampFee;
      reader.readMessage(value,proto.brij.orders.v1.wallet.RampFee.deserializeBinaryFromReader);
      msg.setWalletFee(value);
      break;
    case 8:
      var value = new proto.brij.orders.v1.wallet.RampFee;
      reader.readMessage(value,proto.brij.orders.v1.wallet.RampFee.deserializeBinaryFromReader);
      msg.setPlatformFee(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.GetQuoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.GetQuoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCryptoAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getFiatAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getFiatCurrency();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRampType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getConversionRate();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getPartnerFee();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.brij.orders.v1.wallet.RampFee.serializeBinaryToWriter
    );
  }
  f = message.getWalletFee();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.brij.orders.v1.wallet.RampFee.serializeBinaryToWriter
    );
  }
  f = message.getPlatformFee();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.brij.orders.v1.wallet.RampFee.serializeBinaryToWriter
    );
  }
  f = message.getTotalFee();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
};


/**
 * optional double crypto_amount = 1;
 * @return {number}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.getCryptoAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.setCryptoAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double fiat_amount = 2;
 * @return {number}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.getFiatAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.setFiatAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string fiat_currency = 3;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.getFiatCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.setFiatCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional brij.orders.v1.common.RampType ramp_type = 4;
 * @return {!proto.brij.orders.v1.common.RampType}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.getRampType = function() {
  return /** @type {!proto.brij.orders.v1.common.RampType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.brij.orders.v1.common.RampType} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.setRampType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional double conversion_rate = 5;
 * @return {number}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.getConversionRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.setConversionRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional RampFee partner_fee = 6;
 * @return {?proto.brij.orders.v1.wallet.RampFee}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.getPartnerFee = function() {
  return /** @type{?proto.brij.orders.v1.wallet.RampFee} */ (
    jspb.Message.getWrapperField(this, proto.brij.orders.v1.wallet.RampFee, 6));
};


/**
 * @param {?proto.brij.orders.v1.wallet.RampFee|undefined} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
*/
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.setPartnerFee = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.clearPartnerFee = function() {
  return this.setPartnerFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.hasPartnerFee = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RampFee wallet_fee = 7;
 * @return {?proto.brij.orders.v1.wallet.RampFee}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.getWalletFee = function() {
  return /** @type{?proto.brij.orders.v1.wallet.RampFee} */ (
    jspb.Message.getWrapperField(this, proto.brij.orders.v1.wallet.RampFee, 7));
};


/**
 * @param {?proto.brij.orders.v1.wallet.RampFee|undefined} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
*/
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.setWalletFee = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.clearWalletFee = function() {
  return this.setWalletFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.hasWalletFee = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RampFee platform_fee = 8;
 * @return {?proto.brij.orders.v1.wallet.RampFee}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.getPlatformFee = function() {
  return /** @type{?proto.brij.orders.v1.wallet.RampFee} */ (
    jspb.Message.getWrapperField(this, proto.brij.orders.v1.wallet.RampFee, 8));
};


/**
 * @param {?proto.brij.orders.v1.wallet.RampFee|undefined} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
*/
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.setPlatformFee = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.clearPlatformFee = function() {
  return this.setPlatformFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.hasPlatformFee = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double total_fee = 9;
 * @return {number}
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.getTotalFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.GetQuoteResponse} returns this
 */
proto.brij.orders.v1.wallet.GetQuoteResponse.prototype.setTotalFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.RampFee.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.RampFee.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.RampFee} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.RampFee.toObject = function(includeInstance, msg) {
  var f, obj = {
fixedFee: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
percentageFee: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.RampFee}
 */
proto.brij.orders.v1.wallet.RampFee.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.RampFee;
  return proto.brij.orders.v1.wallet.RampFee.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.RampFee} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.RampFee}
 */
proto.brij.orders.v1.wallet.RampFee.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFixedFee(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPercentageFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.RampFee.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.RampFee.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.RampFee} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.RampFee.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFixedFee();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getPercentageFee();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double fixed_fee = 1;
 * @return {number}
 */
proto.brij.orders.v1.wallet.RampFee.prototype.getFixedFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.RampFee} returns this
 */
proto.brij.orders.v1.wallet.RampFee.prototype.setFixedFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double percentage_fee = 2;
 * @return {number}
 */
proto.brij.orders.v1.wallet.RampFee.prototype.getPercentageFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.brij.orders.v1.wallet.RampFee} returns this
 */
proto.brij.orders.v1.wallet.RampFee.prototype.setPercentageFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.GenerateTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.GenerateTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
externalId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.GenerateTransactionRequest}
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.GenerateTransactionRequest;
  return proto.brij.orders.v1.wallet.GenerateTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.GenerateTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.GenerateTransactionRequest}
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.GenerateTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.GenerateTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GenerateTransactionRequest} returns this
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string external_id = 2;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GenerateTransactionRequest} returns this
 */
proto.brij.orders.v1.wallet.GenerateTransactionRequest.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.brij.orders.v1.wallet.GenerateTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.brij.orders.v1.wallet.GenerateTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.brij.orders.v1.wallet.GenerateTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GenerateTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
transaction: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.brij.orders.v1.wallet.GenerateTransactionResponse}
 */
proto.brij.orders.v1.wallet.GenerateTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.brij.orders.v1.wallet.GenerateTransactionResponse;
  return proto.brij.orders.v1.wallet.GenerateTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.brij.orders.v1.wallet.GenerateTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.brij.orders.v1.wallet.GenerateTransactionResponse}
 */
proto.brij.orders.v1.wallet.GenerateTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.brij.orders.v1.wallet.GenerateTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.brij.orders.v1.wallet.GenerateTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.brij.orders.v1.wallet.GenerateTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.brij.orders.v1.wallet.GenerateTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string transaction = 1;
 * @return {string}
 */
proto.brij.orders.v1.wallet.GenerateTransactionResponse.prototype.getTransaction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.brij.orders.v1.wallet.GenerateTransactionResponse} returns this
 */
proto.brij.orders.v1.wallet.GenerateTransactionResponse.prototype.setTransaction = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.brij.orders.v1.wallet);
