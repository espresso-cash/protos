/**
 * @fileoverview gRPC-Web generated client stub for brij.orders.v1.wallet
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: brij/orders/v1/wallet/wallet.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var brij_orders_v1_common_ramp_type_pb = require('../../../../brij/orders/v1/common/ramp_type_pb.js')

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js')
const proto = {};
proto.brij = {};
proto.brij.orders = {};
proto.brij.orders.v1 = {};
proto.brij.orders.v1.wallet = require('./wallet_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.brij.orders.v1.wallet.WalletServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.brij.orders.v1.wallet.WalletServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.orders.v1.wallet.CreateOnRampOrderRequest,
 *   !proto.brij.orders.v1.wallet.CreateOnRampOrderResponse>}
 */
const methodDescriptor_WalletService_CreateOnRampOrder = new grpc.web.MethodDescriptor(
  '/brij.orders.v1.wallet.WalletService/CreateOnRampOrder',
  grpc.web.MethodType.UNARY,
  proto.brij.orders.v1.wallet.CreateOnRampOrderRequest,
  proto.brij.orders.v1.wallet.CreateOnRampOrderResponse,
  /**
   * @param {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.orders.v1.wallet.CreateOnRampOrderResponse.deserializeBinary
);


/**
 * @param {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.orders.v1.wallet.CreateOnRampOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.orders.v1.wallet.CreateOnRampOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.orders.v1.wallet.WalletServiceClient.prototype.createOnRampOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/CreateOnRampOrder',
      request,
      metadata || {},
      methodDescriptor_WalletService_CreateOnRampOrder,
      callback);
};


/**
 * @param {!proto.brij.orders.v1.wallet.CreateOnRampOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.orders.v1.wallet.CreateOnRampOrderResponse>}
 *     Promise that resolves to the response
 */
proto.brij.orders.v1.wallet.WalletServicePromiseClient.prototype.createOnRampOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/CreateOnRampOrder',
      request,
      metadata || {},
      methodDescriptor_WalletService_CreateOnRampOrder);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.orders.v1.wallet.CreateOffRampOrderRequest,
 *   !proto.brij.orders.v1.wallet.CreateOffRampOrderResponse>}
 */
const methodDescriptor_WalletService_CreateOffRampOrder = new grpc.web.MethodDescriptor(
  '/brij.orders.v1.wallet.WalletService/CreateOffRampOrder',
  grpc.web.MethodType.UNARY,
  proto.brij.orders.v1.wallet.CreateOffRampOrderRequest,
  proto.brij.orders.v1.wallet.CreateOffRampOrderResponse,
  /**
   * @param {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.orders.v1.wallet.CreateOffRampOrderResponse.deserializeBinary
);


/**
 * @param {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.orders.v1.wallet.CreateOffRampOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.orders.v1.wallet.CreateOffRampOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.orders.v1.wallet.WalletServiceClient.prototype.createOffRampOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/CreateOffRampOrder',
      request,
      metadata || {},
      methodDescriptor_WalletService_CreateOffRampOrder,
      callback);
};


/**
 * @param {!proto.brij.orders.v1.wallet.CreateOffRampOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.orders.v1.wallet.CreateOffRampOrderResponse>}
 *     Promise that resolves to the response
 */
proto.brij.orders.v1.wallet.WalletServicePromiseClient.prototype.createOffRampOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/CreateOffRampOrder',
      request,
      metadata || {},
      methodDescriptor_WalletService_CreateOffRampOrder);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.orders.v1.wallet.GetOrderRequest,
 *   !proto.brij.orders.v1.wallet.GetOrderResponse>}
 */
const methodDescriptor_WalletService_GetOrder = new grpc.web.MethodDescriptor(
  '/brij.orders.v1.wallet.WalletService/GetOrder',
  grpc.web.MethodType.UNARY,
  proto.brij.orders.v1.wallet.GetOrderRequest,
  proto.brij.orders.v1.wallet.GetOrderResponse,
  /**
   * @param {!proto.brij.orders.v1.wallet.GetOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.orders.v1.wallet.GetOrderResponse.deserializeBinary
);


/**
 * @param {!proto.brij.orders.v1.wallet.GetOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.orders.v1.wallet.GetOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.orders.v1.wallet.GetOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.orders.v1.wallet.WalletServiceClient.prototype.getOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/GetOrder',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetOrder,
      callback);
};


/**
 * @param {!proto.brij.orders.v1.wallet.GetOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.orders.v1.wallet.GetOrderResponse>}
 *     Promise that resolves to the response
 */
proto.brij.orders.v1.wallet.WalletServicePromiseClient.prototype.getOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/GetOrder',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetOrder);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.orders.v1.wallet.GetOrdersRequest,
 *   !proto.brij.orders.v1.wallet.GetOrdersResponse>}
 */
const methodDescriptor_WalletService_GetOrders = new grpc.web.MethodDescriptor(
  '/brij.orders.v1.wallet.WalletService/GetOrders',
  grpc.web.MethodType.UNARY,
  proto.brij.orders.v1.wallet.GetOrdersRequest,
  proto.brij.orders.v1.wallet.GetOrdersResponse,
  /**
   * @param {!proto.brij.orders.v1.wallet.GetOrdersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.orders.v1.wallet.GetOrdersResponse.deserializeBinary
);


/**
 * @param {!proto.brij.orders.v1.wallet.GetOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.orders.v1.wallet.GetOrdersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.orders.v1.wallet.GetOrdersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.orders.v1.wallet.WalletServiceClient.prototype.getOrders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/GetOrders',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetOrders,
      callback);
};


/**
 * @param {!proto.brij.orders.v1.wallet.GetOrdersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.orders.v1.wallet.GetOrdersResponse>}
 *     Promise that resolves to the response
 */
proto.brij.orders.v1.wallet.WalletServicePromiseClient.prototype.getOrders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/GetOrders',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetOrders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.orders.v1.wallet.GetQuoteRequest,
 *   !proto.brij.orders.v1.wallet.GetQuoteResponse>}
 */
const methodDescriptor_WalletService_GetQuote = new grpc.web.MethodDescriptor(
  '/brij.orders.v1.wallet.WalletService/GetQuote',
  grpc.web.MethodType.UNARY,
  proto.brij.orders.v1.wallet.GetQuoteRequest,
  proto.brij.orders.v1.wallet.GetQuoteResponse,
  /**
   * @param {!proto.brij.orders.v1.wallet.GetQuoteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.orders.v1.wallet.GetQuoteResponse.deserializeBinary
);


/**
 * @param {!proto.brij.orders.v1.wallet.GetQuoteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.orders.v1.wallet.GetQuoteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.orders.v1.wallet.GetQuoteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.orders.v1.wallet.WalletServiceClient.prototype.getQuote =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/GetQuote',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetQuote,
      callback);
};


/**
 * @param {!proto.brij.orders.v1.wallet.GetQuoteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.orders.v1.wallet.GetQuoteResponse>}
 *     Promise that resolves to the response
 */
proto.brij.orders.v1.wallet.WalletServicePromiseClient.prototype.getQuote =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/GetQuote',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetQuote);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.brij.orders.v1.wallet.GenerateTransactionRequest,
 *   !proto.brij.orders.v1.wallet.GenerateTransactionResponse>}
 */
const methodDescriptor_WalletService_GenerateTransaction = new grpc.web.MethodDescriptor(
  '/brij.orders.v1.wallet.WalletService/GenerateTransaction',
  grpc.web.MethodType.UNARY,
  proto.brij.orders.v1.wallet.GenerateTransactionRequest,
  proto.brij.orders.v1.wallet.GenerateTransactionResponse,
  /**
   * @param {!proto.brij.orders.v1.wallet.GenerateTransactionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.brij.orders.v1.wallet.GenerateTransactionResponse.deserializeBinary
);


/**
 * @param {!proto.brij.orders.v1.wallet.GenerateTransactionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.brij.orders.v1.wallet.GenerateTransactionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.brij.orders.v1.wallet.GenerateTransactionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.brij.orders.v1.wallet.WalletServiceClient.prototype.generateTransaction =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/GenerateTransaction',
      request,
      metadata || {},
      methodDescriptor_WalletService_GenerateTransaction,
      callback);
};


/**
 * @param {!proto.brij.orders.v1.wallet.GenerateTransactionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.brij.orders.v1.wallet.GenerateTransactionResponse>}
 *     Promise that resolves to the response
 */
proto.brij.orders.v1.wallet.WalletServicePromiseClient.prototype.generateTransaction =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/brij.orders.v1.wallet.WalletService/GenerateTransaction',
      request,
      metadata || {},
      methodDescriptor_WalletService_GenerateTransaction);
};


module.exports = proto.brij.orders.v1.wallet;

