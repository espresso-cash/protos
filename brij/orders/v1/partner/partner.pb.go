// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: brij/orders/v1/partner/partner.proto

package partner

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	common "go.brij.fi/protos/brij/orders/v1/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{0}
}

func (x *GetOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetOrderRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type GetOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId             string          `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Created             string          `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Status              string          `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	PartnerPublicKey    string          `protobuf:"bytes,4,opt,name=partner_public_key,json=partnerPublicKey,proto3" json:"partner_public_key,omitempty"`
	UserPublicKey       string          `protobuf:"bytes,5,opt,name=user_public_key,json=userPublicKey,proto3" json:"user_public_key,omitempty"`
	Comment             string          `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	Type                common.RampType `protobuf:"varint,8,opt,name=type,proto3,enum=brij.orders.v1.common.RampType" json:"type,omitempty"`
	CryptoAmount        float64         `protobuf:"fixed64,9,opt,name=crypto_amount,json=cryptoAmount,proto3" json:"crypto_amount,omitempty"`
	CryptoCurrency      string          `protobuf:"bytes,10,opt,name=crypto_currency,json=cryptoCurrency,proto3" json:"crypto_currency,omitempty"`
	FiatAmount          float64         `protobuf:"fixed64,11,opt,name=fiat_amount,json=fiatAmount,proto3" json:"fiat_amount,omitempty"`
	FiatCurrency        string          `protobuf:"bytes,12,opt,name=fiat_currency,json=fiatCurrency,proto3" json:"fiat_currency,omitempty"`
	BankName            string          `protobuf:"bytes,13,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	BankAccount         string          `protobuf:"bytes,14,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
	CryptoWalletAddress string          `protobuf:"bytes,15,opt,name=crypto_wallet_address,json=cryptoWalletAddress,proto3" json:"crypto_wallet_address,omitempty"`
	Transaction         string          `protobuf:"bytes,16,opt,name=transaction,proto3" json:"transaction,omitempty"`
	TransactionId       string          `protobuf:"bytes,17,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ExternalId          string          `protobuf:"bytes,18,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	UserSignature       string          `protobuf:"bytes,19,opt,name=user_signature,json=userSignature,proto3" json:"user_signature,omitempty"`
	PartnerSignature    string          `protobuf:"bytes,20,opt,name=partner_signature,json=partnerSignature,proto3" json:"partner_signature,omitempty"`
	UserWalletAddress   string          `protobuf:"bytes,21,opt,name=user_wallet_address,json=userWalletAddress,proto3" json:"user_wallet_address,omitempty"`
	WalletPublicKey     string          `protobuf:"bytes,22,opt,name=wallet_public_key,json=walletPublicKey,proto3" json:"wallet_public_key,omitempty"`
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderResponse.ProtoReflect.Descriptor instead.
func (*GetOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetOrderResponse) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *GetOrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetOrderResponse) GetPartnerPublicKey() string {
	if x != nil {
		return x.PartnerPublicKey
	}
	return ""
}

func (x *GetOrderResponse) GetUserPublicKey() string {
	if x != nil {
		return x.UserPublicKey
	}
	return ""
}

func (x *GetOrderResponse) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetOrderResponse) GetType() common.RampType {
	if x != nil {
		return x.Type
	}
	return common.RampType(0)
}

func (x *GetOrderResponse) GetCryptoAmount() float64 {
	if x != nil {
		return x.CryptoAmount
	}
	return 0
}

func (x *GetOrderResponse) GetCryptoCurrency() string {
	if x != nil {
		return x.CryptoCurrency
	}
	return ""
}

func (x *GetOrderResponse) GetFiatAmount() float64 {
	if x != nil {
		return x.FiatAmount
	}
	return 0
}

func (x *GetOrderResponse) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

func (x *GetOrderResponse) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *GetOrderResponse) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *GetOrderResponse) GetCryptoWalletAddress() string {
	if x != nil {
		return x.CryptoWalletAddress
	}
	return ""
}

func (x *GetOrderResponse) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

func (x *GetOrderResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *GetOrderResponse) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *GetOrderResponse) GetUserSignature() string {
	if x != nil {
		return x.UserSignature
	}
	return ""
}

func (x *GetOrderResponse) GetPartnerSignature() string {
	if x != nil {
		return x.PartnerSignature
	}
	return ""
}

func (x *GetOrderResponse) GetUserWalletAddress() string {
	if x != nil {
		return x.UserWalletAddress
	}
	return ""
}

func (x *GetOrderResponse) GetWalletPublicKey() string {
	if x != nil {
		return x.WalletPublicKey
	}
	return ""
}

type AcceptOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId             string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	BankName            string `protobuf:"bytes,2,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	BankAccount         string `protobuf:"bytes,3,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
	CryptoWalletAddress string `protobuf:"bytes,4,opt,name=crypto_wallet_address,json=cryptoWalletAddress,proto3" json:"crypto_wallet_address,omitempty"`
	ExternalId          string `protobuf:"bytes,5,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	PartnerSignature    string `protobuf:"bytes,6,opt,name=partner_signature,json=partnerSignature,proto3" json:"partner_signature,omitempty"`
}

func (x *AcceptOrderRequest) Reset() {
	*x = AcceptOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOrderRequest) ProtoMessage() {}

func (x *AcceptOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOrderRequest.ProtoReflect.Descriptor instead.
func (*AcceptOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AcceptOrderRequest) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *AcceptOrderRequest) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *AcceptOrderRequest) GetCryptoWalletAddress() string {
	if x != nil {
		return x.CryptoWalletAddress
	}
	return ""
}

func (x *AcceptOrderRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *AcceptOrderRequest) GetPartnerSignature() string {
	if x != nil {
		return x.PartnerSignature
	}
	return ""
}

type AcceptOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptOrderResponse) Reset() {
	*x = AcceptOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOrderResponse) ProtoMessage() {}

func (x *AcceptOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOrderResponse.ProtoReflect.Descriptor instead.
func (*AcceptOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{3}
}

type RejectOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RejectOrderRequest) Reset() {
	*x = RejectOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectOrderRequest) ProtoMessage() {}

func (x *RejectOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectOrderRequest.ProtoReflect.Descriptor instead.
func (*RejectOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{4}
}

func (x *RejectOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *RejectOrderRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RejectOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RejectOrderResponse) Reset() {
	*x = RejectOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectOrderResponse) ProtoMessage() {}

func (x *RejectOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectOrderResponse.ProtoReflect.Descriptor instead.
func (*RejectOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{5}
}

type CompleteOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ExternalId    string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *CompleteOrderRequest) Reset() {
	*x = CompleteOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteOrderRequest) ProtoMessage() {}

func (x *CompleteOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteOrderRequest.ProtoReflect.Descriptor instead.
func (*CompleteOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CompleteOrderRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CompleteOrderRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type CompleteOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteOrderResponse) Reset() {
	*x = CompleteOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteOrderResponse) ProtoMessage() {}

func (x *CompleteOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteOrderResponse.ProtoReflect.Descriptor instead.
func (*CompleteOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{7}
}

type FailOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Reason     string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *FailOrderRequest) Reset() {
	*x = FailOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FailOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailOrderRequest) ProtoMessage() {}

func (x *FailOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailOrderRequest.ProtoReflect.Descriptor instead.
func (*FailOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{8}
}

func (x *FailOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FailOrderRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *FailOrderRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type FailOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FailOrderResponse) Reset() {
	*x = FailOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FailOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailOrderResponse) ProtoMessage() {}

func (x *FailOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailOrderResponse.ProtoReflect.Descriptor instead.
func (*FailOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{9}
}

type GetOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOrdersRequest) Reset() {
	*x = GetOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersRequest) ProtoMessage() {}

func (x *GetOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{10}
}

type GetOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*GetOrderResponse `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetOrdersResponse) Reset() {
	*x = GetOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersResponse) ProtoMessage() {}

func (x *GetOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{11}
}

func (x *GetOrdersResponse) GetOrders() []*GetOrderResponse {
	if x != nil {
		return x.Orders
	}
	return nil
}

type UpdateFeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnRampFee     *RampFeeUpdateData `protobuf:"bytes,1,opt,name=on_ramp_fee,json=onRampFee,proto3" json:"on_ramp_fee,omitempty"`
	OffRampFee    *RampFeeUpdateData `protobuf:"bytes,2,opt,name=off_ramp_fee,json=offRampFee,proto3" json:"off_ramp_fee,omitempty"`
	WalletAddress string             `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
}

func (x *UpdateFeesRequest) Reset() {
	*x = UpdateFeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeesRequest) ProtoMessage() {}

func (x *UpdateFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeesRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeesRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateFeesRequest) GetOnRampFee() *RampFeeUpdateData {
	if x != nil {
		return x.OnRampFee
	}
	return nil
}

func (x *UpdateFeesRequest) GetOffRampFee() *RampFeeUpdateData {
	if x != nil {
		return x.OffRampFee
	}
	return nil
}

func (x *UpdateFeesRequest) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

type RampFeeUpdateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FixedFee        float64         `protobuf:"fixed64,1,opt,name=fixed_fee,json=fixedFee,proto3" json:"fixed_fee,omitempty"`
	PercentageFee   float64         `protobuf:"fixed64,2,opt,name=percentage_fee,json=percentageFee,proto3" json:"percentage_fee,omitempty"`
	ConversionRates *ConversionRate `protobuf:"bytes,3,opt,name=conversion_rates,json=conversionRates,proto3" json:"conversion_rates,omitempty"`
}

func (x *RampFeeUpdateData) Reset() {
	*x = RampFeeUpdateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RampFeeUpdateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RampFeeUpdateData) ProtoMessage() {}

func (x *RampFeeUpdateData) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RampFeeUpdateData.ProtoReflect.Descriptor instead.
func (*RampFeeUpdateData) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{13}
}

func (x *RampFeeUpdateData) GetFixedFee() float64 {
	if x != nil {
		return x.FixedFee
	}
	return 0
}

func (x *RampFeeUpdateData) GetPercentageFee() float64 {
	if x != nil {
		return x.PercentageFee
	}
	return 0
}

func (x *RampFeeUpdateData) GetConversionRates() *ConversionRate {
	if x != nil {
		return x.ConversionRates
	}
	return nil
}

type ConversionRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CryptoCurrency string  `protobuf:"bytes,1,opt,name=crypto_currency,json=cryptoCurrency,proto3" json:"crypto_currency,omitempty"`
	FiatCurrency   string  `protobuf:"bytes,2,opt,name=fiat_currency,json=fiatCurrency,proto3" json:"fiat_currency,omitempty"`
	Rate           float64 `protobuf:"fixed64,3,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *ConversionRate) Reset() {
	*x = ConversionRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversionRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionRate) ProtoMessage() {}

func (x *ConversionRate) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionRate.ProtoReflect.Descriptor instead.
func (*ConversionRate) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{14}
}

func (x *ConversionRate) GetCryptoCurrency() string {
	if x != nil {
		return x.CryptoCurrency
	}
	return ""
}

func (x *ConversionRate) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

func (x *ConversionRate) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type UpdateFeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFeesResponse) Reset() {
	*x = UpdateFeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeesResponse) ProtoMessage() {}

func (x *UpdateFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_partner_partner_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeesResponse.ProtoReflect.Descriptor instead.
func (*UpdateFeesResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_partner_partner_proto_rawDescGZIP(), []int{15}
}

var File_brij_orders_v1_partner_partner_proto protoreflect.FileDescriptor

var file_brij_orders_v1_partner_partner_proto_rawDesc = []byte{
	0x0a, 0x24, 0x62, 0x72, 0x69, 0x6a, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x62, 0x72,
	0x69, 0x6a, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x61, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x22, 0xa6, 0x06, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x6d, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x61, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69,
	0x61, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x61, 0x74,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x15, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0xf1, 0x01, 0x0a, 0x12,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x15, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x15, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x12, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x15, 0x0a, 0x13, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x79, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x10, 0x46, 0x61,
	0x69, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x6f, 0x6e, 0x5f, 0x72,
	0x61, 0x6d, 0x70, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x6d, 0x70, 0x46, 0x65, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x6f, 0x6e, 0x52, 0x61, 0x6d, 0x70,
	0x46, 0x65, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x5f, 0x72, 0x61, 0x6d, 0x70, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x72, 0x69, 0x6a,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2e, 0x52, 0x61, 0x6d, 0x70, 0x46, 0x65, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x52, 0x61, 0x6d, 0x70, 0x46, 0x65, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x11, 0x52, 0x61, 0x6d, 0x70,
	0x46, 0x65, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x66, 0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46, 0x65,
	0x65, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x72,
	0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x69, 0x61, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd2,
	0x07, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x7e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x27, 0x2e,
	0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x8a, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x2a, 0x2e, 0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x8a,
	0x01, 0x0a, 0x0b, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2a,
	0x2e, 0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x72, 0x69,
	0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a,
	0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x92, 0x01, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x2e,
	0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x72,
	0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x82, 0x01, 0x0a, 0x09, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28,
	0x2e, 0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x72, 0x69, 0x6a, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x66, 0x61, 0x69, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x82, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x28, 0x2e, 0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x2f, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x62, 0x72, 0x69, 0x6a,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x72, 0x69, 0x6a, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x73, 0x42, 0x96, 0x01, 0x92, 0x41, 0x69, 0x5a, 0x59, 0x0a, 0x57, 0x0a, 0x06, 0x62,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x4d, 0x08, 0x02, 0x12, 0x38, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c,
	0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x3a, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x3e, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x12, 0x00, 0x5a, 0x28, 0x67, 0x6f, 0x2e, 0x62, 0x72, 0x69, 0x6a, 0x2e, 0x66, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x72, 0x69, 0x6a, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_brij_orders_v1_partner_partner_proto_rawDescOnce sync.Once
	file_brij_orders_v1_partner_partner_proto_rawDescData = file_brij_orders_v1_partner_partner_proto_rawDesc
)

func file_brij_orders_v1_partner_partner_proto_rawDescGZIP() []byte {
	file_brij_orders_v1_partner_partner_proto_rawDescOnce.Do(func() {
		file_brij_orders_v1_partner_partner_proto_rawDescData = protoimpl.X.CompressGZIP(file_brij_orders_v1_partner_partner_proto_rawDescData)
	})
	return file_brij_orders_v1_partner_partner_proto_rawDescData
}

var file_brij_orders_v1_partner_partner_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_brij_orders_v1_partner_partner_proto_goTypes = []any{
	(*GetOrderRequest)(nil),       // 0: brij.orders.v1.partner.GetOrderRequest
	(*GetOrderResponse)(nil),      // 1: brij.orders.v1.partner.GetOrderResponse
	(*AcceptOrderRequest)(nil),    // 2: brij.orders.v1.partner.AcceptOrderRequest
	(*AcceptOrderResponse)(nil),   // 3: brij.orders.v1.partner.AcceptOrderResponse
	(*RejectOrderRequest)(nil),    // 4: brij.orders.v1.partner.RejectOrderRequest
	(*RejectOrderResponse)(nil),   // 5: brij.orders.v1.partner.RejectOrderResponse
	(*CompleteOrderRequest)(nil),  // 6: brij.orders.v1.partner.CompleteOrderRequest
	(*CompleteOrderResponse)(nil), // 7: brij.orders.v1.partner.CompleteOrderResponse
	(*FailOrderRequest)(nil),      // 8: brij.orders.v1.partner.FailOrderRequest
	(*FailOrderResponse)(nil),     // 9: brij.orders.v1.partner.FailOrderResponse
	(*GetOrdersRequest)(nil),      // 10: brij.orders.v1.partner.GetOrdersRequest
	(*GetOrdersResponse)(nil),     // 11: brij.orders.v1.partner.GetOrdersResponse
	(*UpdateFeesRequest)(nil),     // 12: brij.orders.v1.partner.UpdateFeesRequest
	(*RampFeeUpdateData)(nil),     // 13: brij.orders.v1.partner.RampFeeUpdateData
	(*ConversionRate)(nil),        // 14: brij.orders.v1.partner.ConversionRate
	(*UpdateFeesResponse)(nil),    // 15: brij.orders.v1.partner.UpdateFeesResponse
	(common.RampType)(0),          // 16: brij.orders.v1.common.RampType
}
var file_brij_orders_v1_partner_partner_proto_depIdxs = []int32{
	16, // 0: brij.orders.v1.partner.GetOrderResponse.type:type_name -> brij.orders.v1.common.RampType
	1,  // 1: brij.orders.v1.partner.GetOrdersResponse.orders:type_name -> brij.orders.v1.partner.GetOrderResponse
	13, // 2: brij.orders.v1.partner.UpdateFeesRequest.on_ramp_fee:type_name -> brij.orders.v1.partner.RampFeeUpdateData
	13, // 3: brij.orders.v1.partner.UpdateFeesRequest.off_ramp_fee:type_name -> brij.orders.v1.partner.RampFeeUpdateData
	14, // 4: brij.orders.v1.partner.RampFeeUpdateData.conversion_rates:type_name -> brij.orders.v1.partner.ConversionRate
	0,  // 5: brij.orders.v1.partner.PartnerService.GetOrder:input_type -> brij.orders.v1.partner.GetOrderRequest
	2,  // 6: brij.orders.v1.partner.PartnerService.AcceptOrder:input_type -> brij.orders.v1.partner.AcceptOrderRequest
	4,  // 7: brij.orders.v1.partner.PartnerService.RejectOrder:input_type -> brij.orders.v1.partner.RejectOrderRequest
	6,  // 8: brij.orders.v1.partner.PartnerService.CompleteOrder:input_type -> brij.orders.v1.partner.CompleteOrderRequest
	8,  // 9: brij.orders.v1.partner.PartnerService.FailOrder:input_type -> brij.orders.v1.partner.FailOrderRequest
	10, // 10: brij.orders.v1.partner.PartnerService.GetOrders:input_type -> brij.orders.v1.partner.GetOrdersRequest
	12, // 11: brij.orders.v1.partner.PartnerService.UpdateFees:input_type -> brij.orders.v1.partner.UpdateFeesRequest
	1,  // 12: brij.orders.v1.partner.PartnerService.GetOrder:output_type -> brij.orders.v1.partner.GetOrderResponse
	3,  // 13: brij.orders.v1.partner.PartnerService.AcceptOrder:output_type -> brij.orders.v1.partner.AcceptOrderResponse
	5,  // 14: brij.orders.v1.partner.PartnerService.RejectOrder:output_type -> brij.orders.v1.partner.RejectOrderResponse
	7,  // 15: brij.orders.v1.partner.PartnerService.CompleteOrder:output_type -> brij.orders.v1.partner.CompleteOrderResponse
	9,  // 16: brij.orders.v1.partner.PartnerService.FailOrder:output_type -> brij.orders.v1.partner.FailOrderResponse
	11, // 17: brij.orders.v1.partner.PartnerService.GetOrders:output_type -> brij.orders.v1.partner.GetOrdersResponse
	15, // 18: brij.orders.v1.partner.PartnerService.UpdateFees:output_type -> brij.orders.v1.partner.UpdateFeesResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_brij_orders_v1_partner_partner_proto_init() }
func file_brij_orders_v1_partner_partner_proto_init() {
	if File_brij_orders_v1_partner_partner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_brij_orders_v1_partner_partner_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RejectOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RejectOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CompleteOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CompleteOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FailOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FailOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateFeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RampFeeUpdateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ConversionRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brij_orders_v1_partner_partner_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateFeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_brij_orders_v1_partner_partner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_brij_orders_v1_partner_partner_proto_goTypes,
		DependencyIndexes: file_brij_orders_v1_partner_partner_proto_depIdxs,
		MessageInfos:      file_brij_orders_v1_partner_partner_proto_msgTypes,
	}.Build()
	File_brij_orders_v1_partner_partner_proto = out.File
	file_brij_orders_v1_partner_partner_proto_rawDesc = nil
	file_brij_orders_v1_partner_partner_proto_goTypes = nil
	file_brij_orders_v1_partner_partner_proto_depIdxs = nil
}
