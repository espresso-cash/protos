// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: brij/orders/v1/wallet/wallet.proto

package wallet

import (
	common "go.brij.fi/protos/brij/orders/v1/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateOnRampOrderRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PartnerPublicKey  string                 `protobuf:"bytes,1,opt,name=partner_public_key,json=partnerPublicKey,proto3" json:"partner_public_key,omitempty"`
	CryptoAmount      float64                `protobuf:"fixed64,2,opt,name=crypto_amount,json=cryptoAmount,proto3" json:"crypto_amount,omitempty"`
	CryptoCurrency    string                 `protobuf:"bytes,3,opt,name=crypto_currency,json=cryptoCurrency,proto3" json:"crypto_currency,omitempty"`
	FiatAmount        float64                `protobuf:"fixed64,4,opt,name=fiat_amount,json=fiatAmount,proto3" json:"fiat_amount,omitempty"`
	FiatCurrency      string                 `protobuf:"bytes,5,opt,name=fiat_currency,json=fiatCurrency,proto3" json:"fiat_currency,omitempty"`
	UserSignature     string                 `protobuf:"bytes,6,opt,name=user_signature,json=userSignature,proto3" json:"user_signature,omitempty"`
	UserWalletAddress string                 `protobuf:"bytes,7,opt,name=user_wallet_address,json=userWalletAddress,proto3" json:"user_wallet_address,omitempty"`
	WalletPublicKey   string                 `protobuf:"bytes,8,opt,name=wallet_public_key,json=walletPublicKey,proto3" json:"wallet_public_key,omitempty"`
	OrderId           string                 `protobuf:"bytes,9,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateOnRampOrderRequest) Reset() {
	*x = CreateOnRampOrderRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOnRampOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOnRampOrderRequest) ProtoMessage() {}

func (x *CreateOnRampOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOnRampOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOnRampOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOnRampOrderRequest) GetPartnerPublicKey() string {
	if x != nil {
		return x.PartnerPublicKey
	}
	return ""
}

func (x *CreateOnRampOrderRequest) GetCryptoAmount() float64 {
	if x != nil {
		return x.CryptoAmount
	}
	return 0
}

func (x *CreateOnRampOrderRequest) GetCryptoCurrency() string {
	if x != nil {
		return x.CryptoCurrency
	}
	return ""
}

func (x *CreateOnRampOrderRequest) GetFiatAmount() float64 {
	if x != nil {
		return x.FiatAmount
	}
	return 0
}

func (x *CreateOnRampOrderRequest) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

func (x *CreateOnRampOrderRequest) GetUserSignature() string {
	if x != nil {
		return x.UserSignature
	}
	return ""
}

func (x *CreateOnRampOrderRequest) GetUserWalletAddress() string {
	if x != nil {
		return x.UserWalletAddress
	}
	return ""
}

func (x *CreateOnRampOrderRequest) GetWalletPublicKey() string {
	if x != nil {
		return x.WalletPublicKey
	}
	return ""
}

func (x *CreateOnRampOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CreateOnRampOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOnRampOrderResponse) Reset() {
	*x = CreateOnRampOrderResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOnRampOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOnRampOrderResponse) ProtoMessage() {}

func (x *CreateOnRampOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOnRampOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOnRampOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOnRampOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CreateOffRampOrderRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PartnerPublicKey  string                 `protobuf:"bytes,1,opt,name=partner_public_key,json=partnerPublicKey,proto3" json:"partner_public_key,omitempty"`
	CryptoAmount      float64                `protobuf:"fixed64,2,opt,name=crypto_amount,json=cryptoAmount,proto3" json:"crypto_amount,omitempty"`
	CryptoCurrency    string                 `protobuf:"bytes,3,opt,name=crypto_currency,json=cryptoCurrency,proto3" json:"crypto_currency,omitempty"`
	FiatAmount        float64                `protobuf:"fixed64,4,opt,name=fiat_amount,json=fiatAmount,proto3" json:"fiat_amount,omitempty"`
	FiatCurrency      string                 `protobuf:"bytes,5,opt,name=fiat_currency,json=fiatCurrency,proto3" json:"fiat_currency,omitempty"`
	BankName          string                 `protobuf:"bytes,6,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	BankAccount       string                 `protobuf:"bytes,7,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
	UserSignature     string                 `protobuf:"bytes,8,opt,name=user_signature,json=userSignature,proto3" json:"user_signature,omitempty"`
	UserWalletAddress string                 `protobuf:"bytes,9,opt,name=user_wallet_address,json=userWalletAddress,proto3" json:"user_wallet_address,omitempty"`
	WalletPublicKey   string                 `protobuf:"bytes,10,opt,name=wallet_public_key,json=walletPublicKey,proto3" json:"wallet_public_key,omitempty"`
	OrderId           string                 `protobuf:"bytes,11,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateOffRampOrderRequest) Reset() {
	*x = CreateOffRampOrderRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOffRampOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOffRampOrderRequest) ProtoMessage() {}

func (x *CreateOffRampOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOffRampOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOffRampOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *CreateOffRampOrderRequest) GetPartnerPublicKey() string {
	if x != nil {
		return x.PartnerPublicKey
	}
	return ""
}

func (x *CreateOffRampOrderRequest) GetCryptoAmount() float64 {
	if x != nil {
		return x.CryptoAmount
	}
	return 0
}

func (x *CreateOffRampOrderRequest) GetCryptoCurrency() string {
	if x != nil {
		return x.CryptoCurrency
	}
	return ""
}

func (x *CreateOffRampOrderRequest) GetFiatAmount() float64 {
	if x != nil {
		return x.FiatAmount
	}
	return 0
}

func (x *CreateOffRampOrderRequest) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

func (x *CreateOffRampOrderRequest) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *CreateOffRampOrderRequest) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *CreateOffRampOrderRequest) GetUserSignature() string {
	if x != nil {
		return x.UserSignature
	}
	return ""
}

func (x *CreateOffRampOrderRequest) GetUserWalletAddress() string {
	if x != nil {
		return x.UserWalletAddress
	}
	return ""
}

func (x *CreateOffRampOrderRequest) GetWalletPublicKey() string {
	if x != nil {
		return x.WalletPublicKey
	}
	return ""
}

func (x *CreateOffRampOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CreateOffRampOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOffRampOrderResponse) Reset() {
	*x = CreateOffRampOrderResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOffRampOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOffRampOrderResponse) ProtoMessage() {}

func (x *CreateOffRampOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOffRampOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOffRampOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *CreateOffRampOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ExternalId    string                 `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetOrderRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type GetOrderResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	OrderId             string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Created             string                 `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Status              string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	PartnerPublicKey    string                 `protobuf:"bytes,4,opt,name=partner_public_key,json=partnerPublicKey,proto3" json:"partner_public_key,omitempty"`
	UserPublicKey       string                 `protobuf:"bytes,5,opt,name=user_public_key,json=userPublicKey,proto3" json:"user_public_key,omitempty"`
	Comment             string                 `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	Type                common.RampType        `protobuf:"varint,8,opt,name=type,proto3,enum=brij.orders.v1.common.RampType" json:"type,omitempty"`
	CryptoAmount        float64                `protobuf:"fixed64,9,opt,name=crypto_amount,json=cryptoAmount,proto3" json:"crypto_amount,omitempty"`
	CryptoCurrency      string                 `protobuf:"bytes,10,opt,name=crypto_currency,json=cryptoCurrency,proto3" json:"crypto_currency,omitempty"`
	FiatAmount          float64                `protobuf:"fixed64,11,opt,name=fiat_amount,json=fiatAmount,proto3" json:"fiat_amount,omitempty"`
	FiatCurrency        string                 `protobuf:"bytes,12,opt,name=fiat_currency,json=fiatCurrency,proto3" json:"fiat_currency,omitempty"`
	BankName            string                 `protobuf:"bytes,13,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	BankAccount         string                 `protobuf:"bytes,14,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
	CryptoWalletAddress string                 `protobuf:"bytes,15,opt,name=crypto_wallet_address,json=cryptoWalletAddress,proto3" json:"crypto_wallet_address,omitempty"`
	Transaction         string                 `protobuf:"bytes,16,opt,name=transaction,proto3" json:"transaction,omitempty"`
	TransactionId       string                 `protobuf:"bytes,17,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	UserSignature       string                 `protobuf:"bytes,19,opt,name=user_signature,json=userSignature,proto3" json:"user_signature,omitempty"`
	PartnerSignature    string                 `protobuf:"bytes,20,opt,name=partner_signature,json=partnerSignature,proto3" json:"partner_signature,omitempty"`
	UserWalletAddress   string                 `protobuf:"bytes,21,opt,name=user_wallet_address,json=userWalletAddress,proto3" json:"user_wallet_address,omitempty"`
	WalletPublicKey     string                 `protobuf:"bytes,22,opt,name=wallet_public_key,json=walletPublicKey,proto3" json:"wallet_public_key,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderResponse.ProtoReflect.Descriptor instead.
func (*GetOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *GetOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetOrderResponse) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *GetOrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetOrderResponse) GetPartnerPublicKey() string {
	if x != nil {
		return x.PartnerPublicKey
	}
	return ""
}

func (x *GetOrderResponse) GetUserPublicKey() string {
	if x != nil {
		return x.UserPublicKey
	}
	return ""
}

func (x *GetOrderResponse) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetOrderResponse) GetType() common.RampType {
	if x != nil {
		return x.Type
	}
	return common.RampType(0)
}

func (x *GetOrderResponse) GetCryptoAmount() float64 {
	if x != nil {
		return x.CryptoAmount
	}
	return 0
}

func (x *GetOrderResponse) GetCryptoCurrency() string {
	if x != nil {
		return x.CryptoCurrency
	}
	return ""
}

func (x *GetOrderResponse) GetFiatAmount() float64 {
	if x != nil {
		return x.FiatAmount
	}
	return 0
}

func (x *GetOrderResponse) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

func (x *GetOrderResponse) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *GetOrderResponse) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *GetOrderResponse) GetCryptoWalletAddress() string {
	if x != nil {
		return x.CryptoWalletAddress
	}
	return ""
}

func (x *GetOrderResponse) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

func (x *GetOrderResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *GetOrderResponse) GetUserSignature() string {
	if x != nil {
		return x.UserSignature
	}
	return ""
}

func (x *GetOrderResponse) GetPartnerSignature() string {
	if x != nil {
		return x.PartnerSignature
	}
	return ""
}

func (x *GetOrderResponse) GetUserWalletAddress() string {
	if x != nil {
		return x.UserWalletAddress
	}
	return ""
}

func (x *GetOrderResponse) GetWalletPublicKey() string {
	if x != nil {
		return x.WalletPublicKey
	}
	return ""
}

type GetOrdersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrdersRequest) Reset() {
	*x = GetOrdersRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersRequest) ProtoMessage() {}

func (x *GetOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{6}
}

type GetOrdersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orders        []*GetOrderResponse    `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrdersResponse) Reset() {
	*x = GetOrdersResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersResponse) ProtoMessage() {}

func (x *GetOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *GetOrdersResponse) GetOrders() []*GetOrderResponse {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetQuoteRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PartnerPublicKey string                 `protobuf:"bytes,1,opt,name=partner_public_key,json=partnerPublicKey,proto3" json:"partner_public_key,omitempty"`
	WalletPublicKey  string                 `protobuf:"bytes,2,opt,name=wallet_public_key,json=walletPublicKey,proto3" json:"wallet_public_key,omitempty"`
	CryptoAmount     float64                `protobuf:"fixed64,3,opt,name=crypto_amount,json=cryptoAmount,proto3" json:"crypto_amount,omitempty"`
	RampType         common.RampType        `protobuf:"varint,4,opt,name=ramp_type,json=rampType,proto3,enum=brij.orders.v1.common.RampType" json:"ramp_type,omitempty"`
	FiatCurrency     string                 `protobuf:"bytes,5,opt,name=fiat_currency,json=fiatCurrency,proto3" json:"fiat_currency,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetQuoteRequest) Reset() {
	*x = GetQuoteRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteRequest) ProtoMessage() {}

func (x *GetQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteRequest.ProtoReflect.Descriptor instead.
func (*GetQuoteRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *GetQuoteRequest) GetPartnerPublicKey() string {
	if x != nil {
		return x.PartnerPublicKey
	}
	return ""
}

func (x *GetQuoteRequest) GetWalletPublicKey() string {
	if x != nil {
		return x.WalletPublicKey
	}
	return ""
}

func (x *GetQuoteRequest) GetCryptoAmount() float64 {
	if x != nil {
		return x.CryptoAmount
	}
	return 0
}

func (x *GetQuoteRequest) GetRampType() common.RampType {
	if x != nil {
		return x.RampType
	}
	return common.RampType(0)
}

func (x *GetQuoteRequest) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

type GetQuoteResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CryptoAmount   float64                `protobuf:"fixed64,1,opt,name=crypto_amount,json=cryptoAmount,proto3" json:"crypto_amount,omitempty"`
	FiatAmount     float64                `protobuf:"fixed64,2,opt,name=fiat_amount,json=fiatAmount,proto3" json:"fiat_amount,omitempty"`
	FiatCurrency   string                 `protobuf:"bytes,3,opt,name=fiat_currency,json=fiatCurrency,proto3" json:"fiat_currency,omitempty"`
	RampType       common.RampType        `protobuf:"varint,4,opt,name=ramp_type,json=rampType,proto3,enum=brij.orders.v1.common.RampType" json:"ramp_type,omitempty"`
	ConversionRate float64                `protobuf:"fixed64,5,opt,name=conversion_rate,json=conversionRate,proto3" json:"conversion_rate,omitempty"`
	PartnerFee     *RampFee               `protobuf:"bytes,6,opt,name=partner_fee,json=partnerFee,proto3" json:"partner_fee,omitempty"`
	WalletFee      *RampFee               `protobuf:"bytes,7,opt,name=wallet_fee,json=walletFee,proto3" json:"wallet_fee,omitempty"`
	PlatformFee    *RampFee               `protobuf:"bytes,8,opt,name=platform_fee,json=platformFee,proto3" json:"platform_fee,omitempty"`
	TotalFee       float64                `protobuf:"fixed64,9,opt,name=total_fee,json=totalFee,proto3" json:"total_fee,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetQuoteResponse) Reset() {
	*x = GetQuoteResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteResponse) ProtoMessage() {}

func (x *GetQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteResponse.ProtoReflect.Descriptor instead.
func (*GetQuoteResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *GetQuoteResponse) GetCryptoAmount() float64 {
	if x != nil {
		return x.CryptoAmount
	}
	return 0
}

func (x *GetQuoteResponse) GetFiatAmount() float64 {
	if x != nil {
		return x.FiatAmount
	}
	return 0
}

func (x *GetQuoteResponse) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

func (x *GetQuoteResponse) GetRampType() common.RampType {
	if x != nil {
		return x.RampType
	}
	return common.RampType(0)
}

func (x *GetQuoteResponse) GetConversionRate() float64 {
	if x != nil {
		return x.ConversionRate
	}
	return 0
}

func (x *GetQuoteResponse) GetPartnerFee() *RampFee {
	if x != nil {
		return x.PartnerFee
	}
	return nil
}

func (x *GetQuoteResponse) GetWalletFee() *RampFee {
	if x != nil {
		return x.WalletFee
	}
	return nil
}

func (x *GetQuoteResponse) GetPlatformFee() *RampFee {
	if x != nil {
		return x.PlatformFee
	}
	return nil
}

func (x *GetQuoteResponse) GetTotalFee() float64 {
	if x != nil {
		return x.TotalFee
	}
	return 0
}

type RampFee struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FixedFee      float64                `protobuf:"fixed64,1,opt,name=fixed_fee,json=fixedFee,proto3" json:"fixed_fee,omitempty"`
	PercentageFee float64                `protobuf:"fixed64,2,opt,name=percentage_fee,json=percentageFee,proto3" json:"percentage_fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RampFee) Reset() {
	*x = RampFee{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RampFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RampFee) ProtoMessage() {}

func (x *RampFee) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RampFee.ProtoReflect.Descriptor instead.
func (*RampFee) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *RampFee) GetFixedFee() float64 {
	if x != nil {
		return x.FixedFee
	}
	return 0
}

func (x *RampFee) GetPercentageFee() float64 {
	if x != nil {
		return x.PercentageFee
	}
	return 0
}

type GenerateTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ExternalId    string                 `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateTransactionRequest) Reset() {
	*x = GenerateTransactionRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTransactionRequest) ProtoMessage() {}

func (x *GenerateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTransactionRequest.ProtoReflect.Descriptor instead.
func (*GenerateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateTransactionRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GenerateTransactionRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type GenerateTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   string                 `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateTransactionResponse) Reset() {
	*x = GenerateTransactionResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTransactionResponse) ProtoMessage() {}

func (x *GenerateTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTransactionResponse.ProtoReflect.Descriptor instead.
func (*GenerateTransactionResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *GenerateTransactionResponse) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

var File_brij_orders_v1_wallet_wallet_proto protoreflect.FileDescriptor

const file_brij_orders_v1_wallet_wallet_proto_rawDesc = "" +
	"\n" +
	"\"brij/orders/v1/wallet/wallet.proto\x12\x15brij.orders.v1.wallet\x1a%brij/orders/v1/common/ramp_type.proto\x1a\x1cgoogle/api/annotations.proto\"\xfa\x02\n" +
	"\x18CreateOnRampOrderRequest\x12,\n" +
	"\x12partner_public_key\x18\x01 \x01(\tR\x10partnerPublicKey\x12#\n" +
	"\rcrypto_amount\x18\x02 \x01(\x01R\fcryptoAmount\x12'\n" +
	"\x0fcrypto_currency\x18\x03 \x01(\tR\x0ecryptoCurrency\x12\x1f\n" +
	"\vfiat_amount\x18\x04 \x01(\x01R\n" +
	"fiatAmount\x12#\n" +
	"\rfiat_currency\x18\x05 \x01(\tR\ffiatCurrency\x12%\n" +
	"\x0euser_signature\x18\x06 \x01(\tR\ruserSignature\x12.\n" +
	"\x13user_wallet_address\x18\a \x01(\tR\x11userWalletAddress\x12*\n" +
	"\x11wallet_public_key\x18\b \x01(\tR\x0fwalletPublicKey\x12\x19\n" +
	"\border_id\x18\t \x01(\tR\aorderId\"6\n" +
	"\x19CreateOnRampOrderResponse\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\"\xbb\x03\n" +
	"\x19CreateOffRampOrderRequest\x12,\n" +
	"\x12partner_public_key\x18\x01 \x01(\tR\x10partnerPublicKey\x12#\n" +
	"\rcrypto_amount\x18\x02 \x01(\x01R\fcryptoAmount\x12'\n" +
	"\x0fcrypto_currency\x18\x03 \x01(\tR\x0ecryptoCurrency\x12\x1f\n" +
	"\vfiat_amount\x18\x04 \x01(\x01R\n" +
	"fiatAmount\x12#\n" +
	"\rfiat_currency\x18\x05 \x01(\tR\ffiatCurrency\x12\x1b\n" +
	"\tbank_name\x18\x06 \x01(\tR\bbankName\x12!\n" +
	"\fbank_account\x18\a \x01(\tR\vbankAccount\x12%\n" +
	"\x0euser_signature\x18\b \x01(\tR\ruserSignature\x12.\n" +
	"\x13user_wallet_address\x18\t \x01(\tR\x11userWalletAddress\x12*\n" +
	"\x11wallet_public_key\x18\n" +
	" \x01(\tR\x0fwalletPublicKey\x12\x19\n" +
	"\border_id\x18\v \x01(\tR\aorderId\"7\n" +
	"\x1aCreateOffRampOrderResponse\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\"M\n" +
	"\x0fGetOrderRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x1f\n" +
	"\vexternal_id\x18\x02 \x01(\tR\n" +
	"externalId\"\x85\x06\n" +
	"\x10GetOrderResponse\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x18\n" +
	"\acreated\x18\x02 \x01(\tR\acreated\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12,\n" +
	"\x12partner_public_key\x18\x04 \x01(\tR\x10partnerPublicKey\x12&\n" +
	"\x0fuser_public_key\x18\x05 \x01(\tR\ruserPublicKey\x12\x18\n" +
	"\acomment\x18\a \x01(\tR\acomment\x123\n" +
	"\x04type\x18\b \x01(\x0e2\x1f.brij.orders.v1.common.RampTypeR\x04type\x12#\n" +
	"\rcrypto_amount\x18\t \x01(\x01R\fcryptoAmount\x12'\n" +
	"\x0fcrypto_currency\x18\n" +
	" \x01(\tR\x0ecryptoCurrency\x12\x1f\n" +
	"\vfiat_amount\x18\v \x01(\x01R\n" +
	"fiatAmount\x12#\n" +
	"\rfiat_currency\x18\f \x01(\tR\ffiatCurrency\x12\x1b\n" +
	"\tbank_name\x18\r \x01(\tR\bbankName\x12!\n" +
	"\fbank_account\x18\x0e \x01(\tR\vbankAccount\x122\n" +
	"\x15crypto_wallet_address\x18\x0f \x01(\tR\x13cryptoWalletAddress\x12 \n" +
	"\vtransaction\x18\x10 \x01(\tR\vtransaction\x12%\n" +
	"\x0etransaction_id\x18\x11 \x01(\tR\rtransactionId\x12%\n" +
	"\x0euser_signature\x18\x13 \x01(\tR\ruserSignature\x12+\n" +
	"\x11partner_signature\x18\x14 \x01(\tR\x10partnerSignature\x12.\n" +
	"\x13user_wallet_address\x18\x15 \x01(\tR\x11userWalletAddress\x12*\n" +
	"\x11wallet_public_key\x18\x16 \x01(\tR\x0fwalletPublicKey\"\x12\n" +
	"\x10GetOrdersRequest\"T\n" +
	"\x11GetOrdersResponse\x12?\n" +
	"\x06orders\x18\x01 \x03(\v2'.brij.orders.v1.wallet.GetOrderResponseR\x06orders\"\xf3\x01\n" +
	"\x0fGetQuoteRequest\x12,\n" +
	"\x12partner_public_key\x18\x01 \x01(\tR\x10partnerPublicKey\x12*\n" +
	"\x11wallet_public_key\x18\x02 \x01(\tR\x0fwalletPublicKey\x12#\n" +
	"\rcrypto_amount\x18\x03 \x01(\x01R\fcryptoAmount\x12<\n" +
	"\tramp_type\x18\x04 \x01(\x0e2\x1f.brij.orders.v1.common.RampTypeR\brampType\x12#\n" +
	"\rfiat_currency\x18\x05 \x01(\tR\ffiatCurrency\"\xc4\x03\n" +
	"\x10GetQuoteResponse\x12#\n" +
	"\rcrypto_amount\x18\x01 \x01(\x01R\fcryptoAmount\x12\x1f\n" +
	"\vfiat_amount\x18\x02 \x01(\x01R\n" +
	"fiatAmount\x12#\n" +
	"\rfiat_currency\x18\x03 \x01(\tR\ffiatCurrency\x12<\n" +
	"\tramp_type\x18\x04 \x01(\x0e2\x1f.brij.orders.v1.common.RampTypeR\brampType\x12'\n" +
	"\x0fconversion_rate\x18\x05 \x01(\x01R\x0econversionRate\x12?\n" +
	"\vpartner_fee\x18\x06 \x01(\v2\x1e.brij.orders.v1.wallet.RampFeeR\n" +
	"partnerFee\x12=\n" +
	"\n" +
	"wallet_fee\x18\a \x01(\v2\x1e.brij.orders.v1.wallet.RampFeeR\twalletFee\x12A\n" +
	"\fplatform_fee\x18\b \x01(\v2\x1e.brij.orders.v1.wallet.RampFeeR\vplatformFee\x12\x1b\n" +
	"\ttotal_fee\x18\t \x01(\x01R\btotalFee\"M\n" +
	"\aRampFee\x12\x1b\n" +
	"\tfixed_fee\x18\x01 \x01(\x01R\bfixedFee\x12%\n" +
	"\x0epercentage_fee\x18\x02 \x01(\x01R\rpercentageFee\"X\n" +
	"\x1aGenerateTransactionRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x1f\n" +
	"\vexternal_id\x18\x02 \x01(\tR\n" +
	"externalId\"?\n" +
	"\x1bGenerateTransactionResponse\x12 \n" +
	"\vtransaction\x18\x01 \x01(\tR\vtransaction2\xea\x06\n" +
	"\rWalletService\x12\x9c\x01\n" +
	"\x11CreateOnRampOrder\x12/.brij.orders.v1.wallet.CreateOnRampOrderRequest\x1a0.brij.orders.v1.wallet.CreateOnRampOrderResponse\"$\x82\xd3\xe4\x93\x02\x1e\"\x1c/v1/wallet/createOnRampOrder\x12\xa0\x01\n" +
	"\x12CreateOffRampOrder\x120.brij.orders.v1.wallet.CreateOffRampOrderRequest\x1a1.brij.orders.v1.wallet.CreateOffRampOrderResponse\"%\x82\xd3\xe4\x93\x02\x1f\"\x1d/v1/wallet/createOffRampOrder\x12x\n" +
	"\bGetOrder\x12&.brij.orders.v1.wallet.GetOrderRequest\x1a'.brij.orders.v1.wallet.GetOrderResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\"\x13/v1/wallet/getOrder\x12|\n" +
	"\tGetOrders\x12'.brij.orders.v1.wallet.GetOrdersRequest\x1a(.brij.orders.v1.wallet.GetOrdersResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\"\x14/v1/wallet/getOrders\x12x\n" +
	"\bGetQuote\x12&.brij.orders.v1.wallet.GetQuoteRequest\x1a'.brij.orders.v1.wallet.GetQuoteResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\"\x13/v1/wallet/getQuote\x12\xa4\x01\n" +
	"\x13GenerateTransaction\x121.brij.orders.v1.wallet.GenerateTransactionRequest\x1a2.brij.orders.v1.wallet.GenerateTransactionResponse\"&\x82\xd3\xe4\x93\x02 \"\x1e/v1/wallet/generateTransactionB)Z'go.brij.fi/protos/brij/orders/v1/walletb\x06proto3"

var (
	file_brij_orders_v1_wallet_wallet_proto_rawDescOnce sync.Once
	file_brij_orders_v1_wallet_wallet_proto_rawDescData []byte
)

func file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP() []byte {
	file_brij_orders_v1_wallet_wallet_proto_rawDescOnce.Do(func() {
		file_brij_orders_v1_wallet_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_brij_orders_v1_wallet_wallet_proto_rawDesc), len(file_brij_orders_v1_wallet_wallet_proto_rawDesc)))
	})
	return file_brij_orders_v1_wallet_wallet_proto_rawDescData
}

var file_brij_orders_v1_wallet_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_brij_orders_v1_wallet_wallet_proto_goTypes = []any{
	(*CreateOnRampOrderRequest)(nil),    // 0: brij.orders.v1.wallet.CreateOnRampOrderRequest
	(*CreateOnRampOrderResponse)(nil),   // 1: brij.orders.v1.wallet.CreateOnRampOrderResponse
	(*CreateOffRampOrderRequest)(nil),   // 2: brij.orders.v1.wallet.CreateOffRampOrderRequest
	(*CreateOffRampOrderResponse)(nil),  // 3: brij.orders.v1.wallet.CreateOffRampOrderResponse
	(*GetOrderRequest)(nil),             // 4: brij.orders.v1.wallet.GetOrderRequest
	(*GetOrderResponse)(nil),            // 5: brij.orders.v1.wallet.GetOrderResponse
	(*GetOrdersRequest)(nil),            // 6: brij.orders.v1.wallet.GetOrdersRequest
	(*GetOrdersResponse)(nil),           // 7: brij.orders.v1.wallet.GetOrdersResponse
	(*GetQuoteRequest)(nil),             // 8: brij.orders.v1.wallet.GetQuoteRequest
	(*GetQuoteResponse)(nil),            // 9: brij.orders.v1.wallet.GetQuoteResponse
	(*RampFee)(nil),                     // 10: brij.orders.v1.wallet.RampFee
	(*GenerateTransactionRequest)(nil),  // 11: brij.orders.v1.wallet.GenerateTransactionRequest
	(*GenerateTransactionResponse)(nil), // 12: brij.orders.v1.wallet.GenerateTransactionResponse
	(common.RampType)(0),                // 13: brij.orders.v1.common.RampType
}
var file_brij_orders_v1_wallet_wallet_proto_depIdxs = []int32{
	13, // 0: brij.orders.v1.wallet.GetOrderResponse.type:type_name -> brij.orders.v1.common.RampType
	5,  // 1: brij.orders.v1.wallet.GetOrdersResponse.orders:type_name -> brij.orders.v1.wallet.GetOrderResponse
	13, // 2: brij.orders.v1.wallet.GetQuoteRequest.ramp_type:type_name -> brij.orders.v1.common.RampType
	13, // 3: brij.orders.v1.wallet.GetQuoteResponse.ramp_type:type_name -> brij.orders.v1.common.RampType
	10, // 4: brij.orders.v1.wallet.GetQuoteResponse.partner_fee:type_name -> brij.orders.v1.wallet.RampFee
	10, // 5: brij.orders.v1.wallet.GetQuoteResponse.wallet_fee:type_name -> brij.orders.v1.wallet.RampFee
	10, // 6: brij.orders.v1.wallet.GetQuoteResponse.platform_fee:type_name -> brij.orders.v1.wallet.RampFee
	0,  // 7: brij.orders.v1.wallet.WalletService.CreateOnRampOrder:input_type -> brij.orders.v1.wallet.CreateOnRampOrderRequest
	2,  // 8: brij.orders.v1.wallet.WalletService.CreateOffRampOrder:input_type -> brij.orders.v1.wallet.CreateOffRampOrderRequest
	4,  // 9: brij.orders.v1.wallet.WalletService.GetOrder:input_type -> brij.orders.v1.wallet.GetOrderRequest
	6,  // 10: brij.orders.v1.wallet.WalletService.GetOrders:input_type -> brij.orders.v1.wallet.GetOrdersRequest
	8,  // 11: brij.orders.v1.wallet.WalletService.GetQuote:input_type -> brij.orders.v1.wallet.GetQuoteRequest
	11, // 12: brij.orders.v1.wallet.WalletService.GenerateTransaction:input_type -> brij.orders.v1.wallet.GenerateTransactionRequest
	1,  // 13: brij.orders.v1.wallet.WalletService.CreateOnRampOrder:output_type -> brij.orders.v1.wallet.CreateOnRampOrderResponse
	3,  // 14: brij.orders.v1.wallet.WalletService.CreateOffRampOrder:output_type -> brij.orders.v1.wallet.CreateOffRampOrderResponse
	5,  // 15: brij.orders.v1.wallet.WalletService.GetOrder:output_type -> brij.orders.v1.wallet.GetOrderResponse
	7,  // 16: brij.orders.v1.wallet.WalletService.GetOrders:output_type -> brij.orders.v1.wallet.GetOrdersResponse
	9,  // 17: brij.orders.v1.wallet.WalletService.GetQuote:output_type -> brij.orders.v1.wallet.GetQuoteResponse
	12, // 18: brij.orders.v1.wallet.WalletService.GenerateTransaction:output_type -> brij.orders.v1.wallet.GenerateTransactionResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_brij_orders_v1_wallet_wallet_proto_init() }
func file_brij_orders_v1_wallet_wallet_proto_init() {
	if File_brij_orders_v1_wallet_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_brij_orders_v1_wallet_wallet_proto_rawDesc), len(file_brij_orders_v1_wallet_wallet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_brij_orders_v1_wallet_wallet_proto_goTypes,
		DependencyIndexes: file_brij_orders_v1_wallet_wallet_proto_depIdxs,
		MessageInfos:      file_brij_orders_v1_wallet_wallet_proto_msgTypes,
	}.Build()
	File_brij_orders_v1_wallet_wallet_proto = out.File
	file_brij_orders_v1_wallet_wallet_proto_goTypes = nil
	file_brij_orders_v1_wallet_wallet_proto_depIdxs = nil
}
