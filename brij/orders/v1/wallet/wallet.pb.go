// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: brij/orders/v1/wallet/wallet.proto

package wallet

import (
	common "go.brij.fi/protos/brij/orders/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateOnRampOrderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// OnRampOrderUserEnvelope
	Payload       []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOnRampOrderRequest) Reset() {
	*x = CreateOnRampOrderRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOnRampOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOnRampOrderRequest) ProtoMessage() {}

func (x *CreateOnRampOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOnRampOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOnRampOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOnRampOrderRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CreateOnRampOrderRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type CreateOnRampOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOnRampOrderResponse) Reset() {
	*x = CreateOnRampOrderResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOnRampOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOnRampOrderResponse) ProtoMessage() {}

func (x *CreateOnRampOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOnRampOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOnRampOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOnRampOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CreateOffRampOrderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// OffRampOrderUserEnvelope
	Payload       []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOffRampOrderRequest) Reset() {
	*x = CreateOffRampOrderRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOffRampOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOffRampOrderRequest) ProtoMessage() {}

func (x *CreateOffRampOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOffRampOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOffRampOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *CreateOffRampOrderRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CreateOffRampOrderRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type CreateOffRampOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOffRampOrderResponse) Reset() {
	*x = CreateOffRampOrderResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOffRampOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOffRampOrderResponse) ProtoMessage() {}

func (x *CreateOffRampOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOffRampOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOffRampOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *CreateOffRampOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetOrderResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// OnRampOrderUserEnvelope or OffRampOrderUserEnvelope
	UserPayload   []byte `protobuf:"bytes,1,opt,name=user_payload,json=userPayload,proto3" json:"user_payload,omitempty"`
	UserSignature []byte `protobuf:"bytes,2,opt,name=user_signature,json=userSignature,proto3" json:"user_signature,omitempty"`
	// OnRampOrderPartnerEnvelope or OffRampOrderPartnerEnvelope
	PartnerPayload   []byte          `protobuf:"bytes,3,opt,name=partner_payload,json=partnerPayload,proto3" json:"partner_payload,omitempty"`
	PartnerSignature []byte          `protobuf:"bytes,4,opt,name=partner_signature,json=partnerSignature,proto3" json:"partner_signature,omitempty"`
	Created          string          `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	Status           string          `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	UserPublicKey    string          `protobuf:"bytes,7,opt,name=user_public_key,json=userPublicKey,proto3" json:"user_public_key,omitempty"`
	PartnerPublicKey string          `protobuf:"bytes,8,opt,name=partner_public_key,json=partnerPublicKey,proto3" json:"partner_public_key,omitempty"`
	Type             common.RampType `protobuf:"varint,9,opt,name=type,proto3,enum=brij.orders.v1.common.RampType" json:"type,omitempty"`
	Transaction      string          `protobuf:"bytes,10,opt,name=transaction,proto3" json:"transaction,omitempty"`
	TransactionId    string          `protobuf:"bytes,11,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderResponse.ProtoReflect.Descriptor instead.
func (*GetOrderResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *GetOrderResponse) GetUserPayload() []byte {
	if x != nil {
		return x.UserPayload
	}
	return nil
}

func (x *GetOrderResponse) GetUserSignature() []byte {
	if x != nil {
		return x.UserSignature
	}
	return nil
}

func (x *GetOrderResponse) GetPartnerPayload() []byte {
	if x != nil {
		return x.PartnerPayload
	}
	return nil
}

func (x *GetOrderResponse) GetPartnerSignature() []byte {
	if x != nil {
		return x.PartnerSignature
	}
	return nil
}

func (x *GetOrderResponse) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *GetOrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetOrderResponse) GetUserPublicKey() string {
	if x != nil {
		return x.UserPublicKey
	}
	return ""
}

func (x *GetOrderResponse) GetPartnerPublicKey() string {
	if x != nil {
		return x.PartnerPublicKey
	}
	return ""
}

func (x *GetOrderResponse) GetType() common.RampType {
	if x != nil {
		return x.Type
	}
	return common.RampType(0)
}

func (x *GetOrderResponse) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

func (x *GetOrderResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type GetOrdersRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	WalletPublicKey string                 `protobuf:"bytes,1,opt,name=walletPublicKey,proto3" json:"walletPublicKey,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetOrdersRequest) Reset() {
	*x = GetOrdersRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersRequest) ProtoMessage() {}

func (x *GetOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *GetOrdersRequest) GetWalletPublicKey() string {
	if x != nil {
		return x.WalletPublicKey
	}
	return ""
}

type GetOrdersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orders        []*GetOrderResponse    `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrdersResponse) Reset() {
	*x = GetOrdersResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersResponse) ProtoMessage() {}

func (x *GetOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *GetOrdersResponse) GetOrders() []*GetOrderResponse {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetQuoteRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PartnerPublicKey string                 `protobuf:"bytes,1,opt,name=partner_public_key,json=partnerPublicKey,proto3" json:"partner_public_key,omitempty"`
	WalletPublicKey  string                 `protobuf:"bytes,2,opt,name=wallet_public_key,json=walletPublicKey,proto3" json:"wallet_public_key,omitempty"`
	CryptoAmount     float64                `protobuf:"fixed64,3,opt,name=crypto_amount,json=cryptoAmount,proto3" json:"crypto_amount,omitempty"`
	RampType         common.RampType        `protobuf:"varint,4,opt,name=ramp_type,json=rampType,proto3,enum=brij.orders.v1.common.RampType" json:"ramp_type,omitempty"`
	FiatCurrency     string                 `protobuf:"bytes,5,opt,name=fiat_currency,json=fiatCurrency,proto3" json:"fiat_currency,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetQuoteRequest) Reset() {
	*x = GetQuoteRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteRequest) ProtoMessage() {}

func (x *GetQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteRequest.ProtoReflect.Descriptor instead.
func (*GetQuoteRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *GetQuoteRequest) GetPartnerPublicKey() string {
	if x != nil {
		return x.PartnerPublicKey
	}
	return ""
}

func (x *GetQuoteRequest) GetWalletPublicKey() string {
	if x != nil {
		return x.WalletPublicKey
	}
	return ""
}

func (x *GetQuoteRequest) GetCryptoAmount() float64 {
	if x != nil {
		return x.CryptoAmount
	}
	return 0
}

func (x *GetQuoteRequest) GetRampType() common.RampType {
	if x != nil {
		return x.RampType
	}
	return common.RampType(0)
}

func (x *GetQuoteRequest) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

type Quote struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CryptoAmount       float64                `protobuf:"fixed64,1,opt,name=crypto_amount,json=cryptoAmount,proto3" json:"crypto_amount,omitempty"`
	FiatAmount         float64                `protobuf:"fixed64,2,opt,name=fiat_amount,json=fiatAmount,proto3" json:"fiat_amount,omitempty"`
	FiatCurrency       string                 `protobuf:"bytes,3,opt,name=fiat_currency,json=fiatCurrency,proto3" json:"fiat_currency,omitempty"`
	RampType           common.RampType        `protobuf:"varint,4,opt,name=ramp_type,json=rampType,proto3,enum=brij.orders.v1.common.RampType" json:"ramp_type,omitempty"`
	ConversionRate     float64                `protobuf:"fixed64,5,opt,name=conversion_rate,json=conversionRate,proto3" json:"conversion_rate,omitempty"`
	PartnerFee         *RampFee               `protobuf:"bytes,6,opt,name=partner_fee,json=partnerFee,proto3" json:"partner_fee,omitempty"`
	WalletFee          *RampFee               `protobuf:"bytes,7,opt,name=wallet_fee,json=walletFee,proto3" json:"wallet_fee,omitempty"`
	PlatformFee        *RampFee               `protobuf:"bytes,8,opt,name=platform_fee,json=platformFee,proto3" json:"platform_fee,omitempty"`
	TotalFee           float64                `protobuf:"fixed64,9,opt,name=total_fee,json=totalFee,proto3" json:"total_fee,omitempty"`
	PartnerAmount      float64                `protobuf:"fixed64,10,opt,name=partner_amount,json=partnerAmount,proto3" json:"partner_amount,omitempty"`
	WalletTotalFee     float64                `protobuf:"fixed64,11,opt,name=wallet_total_fee,json=walletTotalFee,proto3" json:"wallet_total_fee,omitempty"`
	PlatformTotalFee   float64                `protobuf:"fixed64,12,opt,name=platform_total_fee,json=platformTotalFee,proto3" json:"platform_total_fee,omitempty"`
	PartnerTotalFee    float64                `protobuf:"fixed64,13,opt,name=partner_total_fee,json=partnerTotalFee,proto3" json:"partner_total_fee,omitempty"`
	PlatformFeeAddress string                 `protobuf:"bytes,14,opt,name=platform_fee_address,json=platformFeeAddress,proto3" json:"platform_fee_address,omitempty"`
	PartnerPublicKey   string                 `protobuf:"bytes,15,opt,name=partner_public_key,json=partnerPublicKey,proto3" json:"partner_public_key,omitempty"`
	WalletPublicKey    string                 `protobuf:"bytes,16,opt,name=wallet_public_key,json=walletPublicKey,proto3" json:"wallet_public_key,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Quote) Reset() {
	*x = Quote{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *Quote) GetCryptoAmount() float64 {
	if x != nil {
		return x.CryptoAmount
	}
	return 0
}

func (x *Quote) GetFiatAmount() float64 {
	if x != nil {
		return x.FiatAmount
	}
	return 0
}

func (x *Quote) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

func (x *Quote) GetRampType() common.RampType {
	if x != nil {
		return x.RampType
	}
	return common.RampType(0)
}

func (x *Quote) GetConversionRate() float64 {
	if x != nil {
		return x.ConversionRate
	}
	return 0
}

func (x *Quote) GetPartnerFee() *RampFee {
	if x != nil {
		return x.PartnerFee
	}
	return nil
}

func (x *Quote) GetWalletFee() *RampFee {
	if x != nil {
		return x.WalletFee
	}
	return nil
}

func (x *Quote) GetPlatformFee() *RampFee {
	if x != nil {
		return x.PlatformFee
	}
	return nil
}

func (x *Quote) GetTotalFee() float64 {
	if x != nil {
		return x.TotalFee
	}
	return 0
}

func (x *Quote) GetPartnerAmount() float64 {
	if x != nil {
		return x.PartnerAmount
	}
	return 0
}

func (x *Quote) GetWalletTotalFee() float64 {
	if x != nil {
		return x.WalletTotalFee
	}
	return 0
}

func (x *Quote) GetPlatformTotalFee() float64 {
	if x != nil {
		return x.PlatformTotalFee
	}
	return 0
}

func (x *Quote) GetPartnerTotalFee() float64 {
	if x != nil {
		return x.PartnerTotalFee
	}
	return 0
}

func (x *Quote) GetPlatformFeeAddress() string {
	if x != nil {
		return x.PlatformFeeAddress
	}
	return ""
}

func (x *Quote) GetPartnerPublicKey() string {
	if x != nil {
		return x.PartnerPublicKey
	}
	return ""
}

func (x *Quote) GetWalletPublicKey() string {
	if x != nil {
		return x.WalletPublicKey
	}
	return ""
}

type GetQuoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quote         *Quote                 `protobuf:"bytes,1,opt,name=quote,proto3" json:"quote,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuoteResponse) Reset() {
	*x = GetQuoteResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteResponse) ProtoMessage() {}

func (x *GetQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteResponse.ProtoReflect.Descriptor instead.
func (*GetQuoteResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *GetQuoteResponse) GetQuote() *Quote {
	if x != nil {
		return x.Quote
	}
	return nil
}

type GetBestQuoteRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Country         string                 `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	WalletPublicKey string                 `protobuf:"bytes,2,opt,name=wallet_public_key,json=walletPublicKey,proto3" json:"wallet_public_key,omitempty"`
	CryptoAmount    float64                `protobuf:"fixed64,3,opt,name=crypto_amount,json=cryptoAmount,proto3" json:"crypto_amount,omitempty"`
	RampType        common.RampType        `protobuf:"varint,4,opt,name=ramp_type,json=rampType,proto3,enum=brij.orders.v1.common.RampType" json:"ramp_type,omitempty"`
	FiatCurrency    string                 `protobuf:"bytes,5,opt,name=fiat_currency,json=fiatCurrency,proto3" json:"fiat_currency,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetBestQuoteRequest) Reset() {
	*x = GetBestQuoteRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBestQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBestQuoteRequest) ProtoMessage() {}

func (x *GetBestQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBestQuoteRequest.ProtoReflect.Descriptor instead.
func (*GetBestQuoteRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *GetBestQuoteRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetBestQuoteRequest) GetWalletPublicKey() string {
	if x != nil {
		return x.WalletPublicKey
	}
	return ""
}

func (x *GetBestQuoteRequest) GetCryptoAmount() float64 {
	if x != nil {
		return x.CryptoAmount
	}
	return 0
}

func (x *GetBestQuoteRequest) GetRampType() common.RampType {
	if x != nil {
		return x.RampType
	}
	return common.RampType(0)
}

func (x *GetBestQuoteRequest) GetFiatCurrency() string {
	if x != nil {
		return x.FiatCurrency
	}
	return ""
}

type GetBestQuoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quote         *Quote                 `protobuf:"bytes,1,opt,name=quote,proto3" json:"quote,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBestQuoteResponse) Reset() {
	*x = GetBestQuoteResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBestQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBestQuoteResponse) ProtoMessage() {}

func (x *GetBestQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBestQuoteResponse.ProtoReflect.Descriptor instead.
func (*GetBestQuoteResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *GetBestQuoteResponse) GetQuote() *Quote {
	if x != nil {
		return x.Quote
	}
	return nil
}

type RampFee struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FixedFee      float64                `protobuf:"fixed64,1,opt,name=fixed_fee,json=fixedFee,proto3" json:"fixed_fee,omitempty"`
	PercentageFee float64                `protobuf:"fixed64,2,opt,name=percentage_fee,json=percentageFee,proto3" json:"percentage_fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RampFee) Reset() {
	*x = RampFee{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RampFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RampFee) ProtoMessage() {}

func (x *RampFee) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RampFee.ProtoReflect.Descriptor instead.
func (*RampFee) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *RampFee) GetFixedFee() float64 {
	if x != nil {
		return x.FixedFee
	}
	return 0
}

func (x *RampFee) GetPercentageFee() float64 {
	if x != nil {
		return x.PercentageFee
	}
	return 0
}

type GenerateTransactionRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OrderId         string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	FeePayerAddress string                 `protobuf:"bytes,2,opt,name=fee_payer_address,json=feePayerAddress,proto3" json:"fee_payer_address,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GenerateTransactionRequest) Reset() {
	*x = GenerateTransactionRequest{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTransactionRequest) ProtoMessage() {}

func (x *GenerateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTransactionRequest.ProtoReflect.Descriptor instead.
func (*GenerateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *GenerateTransactionRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GenerateTransactionRequest) GetFeePayerAddress() string {
	if x != nil {
		return x.FeePayerAddress
	}
	return ""
}

type GenerateTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   string                 `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Reference     string                 `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateTransactionResponse) Reset() {
	*x = GenerateTransactionResponse{}
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTransactionResponse) ProtoMessage() {}

func (x *GenerateTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_brij_orders_v1_wallet_wallet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTransactionResponse.ProtoReflect.Descriptor instead.
func (*GenerateTransactionResponse) Descriptor() ([]byte, []int) {
	return file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *GenerateTransactionResponse) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

func (x *GenerateTransactionResponse) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

var File_brij_orders_v1_wallet_wallet_proto protoreflect.FileDescriptor

const file_brij_orders_v1_wallet_wallet_proto_rawDesc = "" +
	"\n" +
	"\"brij/orders/v1/wallet/wallet.proto\x12\x15brij.orders.v1.wallet\x1a%brij/orders/v1/common/ramp_type.proto\"R\n" +
	"\x18CreateOnRampOrderRequest\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"6\n" +
	"\x19CreateOnRampOrderResponse\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\"S\n" +
	"\x19CreateOffRampOrderRequest\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"7\n" +
	"\x1aCreateOffRampOrderResponse\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\",\n" +
	"\x0fGetOrderRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\"\xb8\x03\n" +
	"\x10GetOrderResponse\x12!\n" +
	"\fuser_payload\x18\x01 \x01(\fR\vuserPayload\x12%\n" +
	"\x0euser_signature\x18\x02 \x01(\fR\ruserSignature\x12'\n" +
	"\x0fpartner_payload\x18\x03 \x01(\fR\x0epartnerPayload\x12+\n" +
	"\x11partner_signature\x18\x04 \x01(\fR\x10partnerSignature\x12\x18\n" +
	"\acreated\x18\x05 \x01(\tR\acreated\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12&\n" +
	"\x0fuser_public_key\x18\a \x01(\tR\ruserPublicKey\x12,\n" +
	"\x12partner_public_key\x18\b \x01(\tR\x10partnerPublicKey\x123\n" +
	"\x04type\x18\t \x01(\x0e2\x1f.brij.orders.v1.common.RampTypeR\x04type\x12 \n" +
	"\vtransaction\x18\n" +
	" \x01(\tR\vtransaction\x12%\n" +
	"\x0etransaction_id\x18\v \x01(\tR\rtransactionId\"<\n" +
	"\x10GetOrdersRequest\x12(\n" +
	"\x0fwalletPublicKey\x18\x01 \x01(\tR\x0fwalletPublicKey\"T\n" +
	"\x11GetOrdersResponse\x12?\n" +
	"\x06orders\x18\x01 \x03(\v2'.brij.orders.v1.wallet.GetOrderResponseR\x06orders\"\xf3\x01\n" +
	"\x0fGetQuoteRequest\x12,\n" +
	"\x12partner_public_key\x18\x01 \x01(\tR\x10partnerPublicKey\x12*\n" +
	"\x11wallet_public_key\x18\x02 \x01(\tR\x0fwalletPublicKey\x12#\n" +
	"\rcrypto_amount\x18\x03 \x01(\x01R\fcryptoAmount\x12<\n" +
	"\tramp_type\x18\x04 \x01(\x0e2\x1f.brij.orders.v1.common.RampTypeR\brampType\x12#\n" +
	"\rfiat_currency\x18\x05 \x01(\tR\ffiatCurrency\"\xf0\x05\n" +
	"\x05Quote\x12#\n" +
	"\rcrypto_amount\x18\x01 \x01(\x01R\fcryptoAmount\x12\x1f\n" +
	"\vfiat_amount\x18\x02 \x01(\x01R\n" +
	"fiatAmount\x12#\n" +
	"\rfiat_currency\x18\x03 \x01(\tR\ffiatCurrency\x12<\n" +
	"\tramp_type\x18\x04 \x01(\x0e2\x1f.brij.orders.v1.common.RampTypeR\brampType\x12'\n" +
	"\x0fconversion_rate\x18\x05 \x01(\x01R\x0econversionRate\x12?\n" +
	"\vpartner_fee\x18\x06 \x01(\v2\x1e.brij.orders.v1.wallet.RampFeeR\n" +
	"partnerFee\x12=\n" +
	"\n" +
	"wallet_fee\x18\a \x01(\v2\x1e.brij.orders.v1.wallet.RampFeeR\twalletFee\x12A\n" +
	"\fplatform_fee\x18\b \x01(\v2\x1e.brij.orders.v1.wallet.RampFeeR\vplatformFee\x12\x1b\n" +
	"\ttotal_fee\x18\t \x01(\x01R\btotalFee\x12%\n" +
	"\x0epartner_amount\x18\n" +
	" \x01(\x01R\rpartnerAmount\x12(\n" +
	"\x10wallet_total_fee\x18\v \x01(\x01R\x0ewalletTotalFee\x12,\n" +
	"\x12platform_total_fee\x18\f \x01(\x01R\x10platformTotalFee\x12*\n" +
	"\x11partner_total_fee\x18\r \x01(\x01R\x0fpartnerTotalFee\x120\n" +
	"\x14platform_fee_address\x18\x0e \x01(\tR\x12platformFeeAddress\x12,\n" +
	"\x12partner_public_key\x18\x0f \x01(\tR\x10partnerPublicKey\x12*\n" +
	"\x11wallet_public_key\x18\x10 \x01(\tR\x0fwalletPublicKey\"F\n" +
	"\x10GetQuoteResponse\x122\n" +
	"\x05quote\x18\x01 \x01(\v2\x1c.brij.orders.v1.wallet.QuoteR\x05quote\"\xe3\x01\n" +
	"\x13GetBestQuoteRequest\x12\x18\n" +
	"\acountry\x18\x01 \x01(\tR\acountry\x12*\n" +
	"\x11wallet_public_key\x18\x02 \x01(\tR\x0fwalletPublicKey\x12#\n" +
	"\rcrypto_amount\x18\x03 \x01(\x01R\fcryptoAmount\x12<\n" +
	"\tramp_type\x18\x04 \x01(\x0e2\x1f.brij.orders.v1.common.RampTypeR\brampType\x12#\n" +
	"\rfiat_currency\x18\x05 \x01(\tR\ffiatCurrency\"J\n" +
	"\x14GetBestQuoteResponse\x122\n" +
	"\x05quote\x18\x01 \x01(\v2\x1c.brij.orders.v1.wallet.QuoteR\x05quote\"M\n" +
	"\aRampFee\x12\x1b\n" +
	"\tfixed_fee\x18\x01 \x01(\x01R\bfixedFee\x12%\n" +
	"\x0epercentage_fee\x18\x02 \x01(\x01R\rpercentageFee\"c\n" +
	"\x1aGenerateTransactionRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12*\n" +
	"\x11fee_payer_address\x18\x02 \x01(\tR\x0ffeePayerAddress\"]\n" +
	"\x1bGenerateTransactionResponse\x12 \n" +
	"\vtransaction\x18\x01 \x01(\tR\vtransaction\x12\x1c\n" +
	"\treference\x18\x02 \x01(\tR\treference2\x83\x06\n" +
	"\rWalletService\x12v\n" +
	"\x11CreateOnRampOrder\x12/.brij.orders.v1.wallet.CreateOnRampOrderRequest\x1a0.brij.orders.v1.wallet.CreateOnRampOrderResponse\x12y\n" +
	"\x12CreateOffRampOrder\x120.brij.orders.v1.wallet.CreateOffRampOrderRequest\x1a1.brij.orders.v1.wallet.CreateOffRampOrderResponse\x12[\n" +
	"\bGetOrder\x12&.brij.orders.v1.wallet.GetOrderRequest\x1a'.brij.orders.v1.wallet.GetOrderResponse\x12^\n" +
	"\tGetOrders\x12'.brij.orders.v1.wallet.GetOrdersRequest\x1a(.brij.orders.v1.wallet.GetOrdersResponse\x12[\n" +
	"\bGetQuote\x12&.brij.orders.v1.wallet.GetQuoteRequest\x1a'.brij.orders.v1.wallet.GetQuoteResponse\x12g\n" +
	"\fGetBestQuote\x12*.brij.orders.v1.wallet.GetBestQuoteRequest\x1a+.brij.orders.v1.wallet.GetBestQuoteResponse\x12|\n" +
	"\x13GenerateTransaction\x121.brij.orders.v1.wallet.GenerateTransactionRequest\x1a2.brij.orders.v1.wallet.GenerateTransactionResponseB)Z'go.brij.fi/protos/brij/orders/v1/walletb\x06proto3"

var (
	file_brij_orders_v1_wallet_wallet_proto_rawDescOnce sync.Once
	file_brij_orders_v1_wallet_wallet_proto_rawDescData []byte
)

func file_brij_orders_v1_wallet_wallet_proto_rawDescGZIP() []byte {
	file_brij_orders_v1_wallet_wallet_proto_rawDescOnce.Do(func() {
		file_brij_orders_v1_wallet_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_brij_orders_v1_wallet_wallet_proto_rawDesc), len(file_brij_orders_v1_wallet_wallet_proto_rawDesc)))
	})
	return file_brij_orders_v1_wallet_wallet_proto_rawDescData
}

var file_brij_orders_v1_wallet_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_brij_orders_v1_wallet_wallet_proto_goTypes = []any{
	(*CreateOnRampOrderRequest)(nil),    // 0: brij.orders.v1.wallet.CreateOnRampOrderRequest
	(*CreateOnRampOrderResponse)(nil),   // 1: brij.orders.v1.wallet.CreateOnRampOrderResponse
	(*CreateOffRampOrderRequest)(nil),   // 2: brij.orders.v1.wallet.CreateOffRampOrderRequest
	(*CreateOffRampOrderResponse)(nil),  // 3: brij.orders.v1.wallet.CreateOffRampOrderResponse
	(*GetOrderRequest)(nil),             // 4: brij.orders.v1.wallet.GetOrderRequest
	(*GetOrderResponse)(nil),            // 5: brij.orders.v1.wallet.GetOrderResponse
	(*GetOrdersRequest)(nil),            // 6: brij.orders.v1.wallet.GetOrdersRequest
	(*GetOrdersResponse)(nil),           // 7: brij.orders.v1.wallet.GetOrdersResponse
	(*GetQuoteRequest)(nil),             // 8: brij.orders.v1.wallet.GetQuoteRequest
	(*Quote)(nil),                       // 9: brij.orders.v1.wallet.Quote
	(*GetQuoteResponse)(nil),            // 10: brij.orders.v1.wallet.GetQuoteResponse
	(*GetBestQuoteRequest)(nil),         // 11: brij.orders.v1.wallet.GetBestQuoteRequest
	(*GetBestQuoteResponse)(nil),        // 12: brij.orders.v1.wallet.GetBestQuoteResponse
	(*RampFee)(nil),                     // 13: brij.orders.v1.wallet.RampFee
	(*GenerateTransactionRequest)(nil),  // 14: brij.orders.v1.wallet.GenerateTransactionRequest
	(*GenerateTransactionResponse)(nil), // 15: brij.orders.v1.wallet.GenerateTransactionResponse
	(common.RampType)(0),                // 16: brij.orders.v1.common.RampType
}
var file_brij_orders_v1_wallet_wallet_proto_depIdxs = []int32{
	16, // 0: brij.orders.v1.wallet.GetOrderResponse.type:type_name -> brij.orders.v1.common.RampType
	5,  // 1: brij.orders.v1.wallet.GetOrdersResponse.orders:type_name -> brij.orders.v1.wallet.GetOrderResponse
	16, // 2: brij.orders.v1.wallet.GetQuoteRequest.ramp_type:type_name -> brij.orders.v1.common.RampType
	16, // 3: brij.orders.v1.wallet.Quote.ramp_type:type_name -> brij.orders.v1.common.RampType
	13, // 4: brij.orders.v1.wallet.Quote.partner_fee:type_name -> brij.orders.v1.wallet.RampFee
	13, // 5: brij.orders.v1.wallet.Quote.wallet_fee:type_name -> brij.orders.v1.wallet.RampFee
	13, // 6: brij.orders.v1.wallet.Quote.platform_fee:type_name -> brij.orders.v1.wallet.RampFee
	9,  // 7: brij.orders.v1.wallet.GetQuoteResponse.quote:type_name -> brij.orders.v1.wallet.Quote
	16, // 8: brij.orders.v1.wallet.GetBestQuoteRequest.ramp_type:type_name -> brij.orders.v1.common.RampType
	9,  // 9: brij.orders.v1.wallet.GetBestQuoteResponse.quote:type_name -> brij.orders.v1.wallet.Quote
	0,  // 10: brij.orders.v1.wallet.WalletService.CreateOnRampOrder:input_type -> brij.orders.v1.wallet.CreateOnRampOrderRequest
	2,  // 11: brij.orders.v1.wallet.WalletService.CreateOffRampOrder:input_type -> brij.orders.v1.wallet.CreateOffRampOrderRequest
	4,  // 12: brij.orders.v1.wallet.WalletService.GetOrder:input_type -> brij.orders.v1.wallet.GetOrderRequest
	6,  // 13: brij.orders.v1.wallet.WalletService.GetOrders:input_type -> brij.orders.v1.wallet.GetOrdersRequest
	8,  // 14: brij.orders.v1.wallet.WalletService.GetQuote:input_type -> brij.orders.v1.wallet.GetQuoteRequest
	11, // 15: brij.orders.v1.wallet.WalletService.GetBestQuote:input_type -> brij.orders.v1.wallet.GetBestQuoteRequest
	14, // 16: brij.orders.v1.wallet.WalletService.GenerateTransaction:input_type -> brij.orders.v1.wallet.GenerateTransactionRequest
	1,  // 17: brij.orders.v1.wallet.WalletService.CreateOnRampOrder:output_type -> brij.orders.v1.wallet.CreateOnRampOrderResponse
	3,  // 18: brij.orders.v1.wallet.WalletService.CreateOffRampOrder:output_type -> brij.orders.v1.wallet.CreateOffRampOrderResponse
	5,  // 19: brij.orders.v1.wallet.WalletService.GetOrder:output_type -> brij.orders.v1.wallet.GetOrderResponse
	7,  // 20: brij.orders.v1.wallet.WalletService.GetOrders:output_type -> brij.orders.v1.wallet.GetOrdersResponse
	10, // 21: brij.orders.v1.wallet.WalletService.GetQuote:output_type -> brij.orders.v1.wallet.GetQuoteResponse
	12, // 22: brij.orders.v1.wallet.WalletService.GetBestQuote:output_type -> brij.orders.v1.wallet.GetBestQuoteResponse
	15, // 23: brij.orders.v1.wallet.WalletService.GenerateTransaction:output_type -> brij.orders.v1.wallet.GenerateTransactionResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_brij_orders_v1_wallet_wallet_proto_init() }
func file_brij_orders_v1_wallet_wallet_proto_init() {
	if File_brij_orders_v1_wallet_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_brij_orders_v1_wallet_wallet_proto_rawDesc), len(file_brij_orders_v1_wallet_wallet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_brij_orders_v1_wallet_wallet_proto_goTypes,
		DependencyIndexes: file_brij_orders_v1_wallet_wallet_proto_depIdxs,
		MessageInfos:      file_brij_orders_v1_wallet_wallet_proto_msgTypes,
	}.Build()
	File_brij_orders_v1_wallet_wallet_proto = out.File
	file_brij_orders_v1_wallet_wallet_proto_goTypes = nil
	file_brij_orders_v1_wallet_wallet_proto_depIdxs = nil
}
