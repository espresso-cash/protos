syntax = 'proto3';

package brij.storage.v1.partner;

import "brij/storage/v1/common/user_data.proto";
import "brij/storage/v1/common/validation_data.proto";

option go_package = 'go.brij.fi/protos/brij/storage/v1/partner';

service PartnerService {
  rpc GetInfo(GetInfoRequest) returns (GetInfoResponse);

  rpc GetUserData(GetUserDataRequest) returns (GetUserDataResponse);

  rpc SetValidationData(SetValidationDataRequest) returns (SetValidationDataResponse);

  rpc RemoveValidationData(RemoveValidationDataRequest) returns (RemoveValidationDataResponse);

  rpc GetKycStatus(GetKycStatusRequest) returns (GetKycStatusResponse);

  rpc CreateKycStatus(CreateKycStatusRequest) returns (CreateKycStatusResponse);

  rpc UpdateKycStatus(UpdateKycStatusRequest) returns (UpdateKycStatusResponse);
}

message GetInfoRequest {
  string public_key = 1;
}

message GetInfoResponse {
  string encrypted_secret_key = 1;
  string public_key = 2;
  string wallet_address = 3;
}

message GetUserDataRequest {
  string user_public_key = 1;
  bool include_values = 2;
}

message GetUserDataResponse {
  repeated brij.storage.v1.common.UserDataField user_data = 1;
  repeated brij.storage.v1.common.ValidationDataField validation_data = 2;
}

message SetValidationDataRequest {
  // ValidationDataEnvelope
  bytes payload = 1;
  bytes signature = 2;
}

message SetValidationDataResponse {}

message RemoveValidationDataRequest {
  string data_hash = 1;
}

message RemoveValidationDataResponse {}

message GetKycStatusRequest {
  string country = 1;
  string validator_public_key = 2;
  string user_public_key = 3;
}

message GetKycStatusResponse {
  // KycEnvelope
  bytes payload = 1;
  bytes signature = 2;
}

message CreateKycStatusRequest {
  // KycEnvelope
  bytes payload = 1;
  bytes signature = 2;
}

message CreateKycStatusResponse {
  string kyc_id = 1;
}

message UpdateKycStatusRequest {
  string kyc_id = 1;
  // KycEnvelope
  bytes payload = 2;
  bytes signature = 3;
}

message UpdateKycStatusResponse {}
